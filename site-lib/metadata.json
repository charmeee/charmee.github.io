{"createdTime":1756572501183,"shownInTree":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html","99-settings/1-topics/📖-200-웹-개발.html","99-settings/1-topics/📖-300-백엔드-개발.html","99-settings/1-topics/📖-400-인프라-&-아키텍처.html","99-settings/1-topics/📖-500-모바일-개발.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html","99-settings/1-topics/📖-700-컴퓨터-과학.html","99-settings/1-topics/📖-800-프로젝트.html","99-settings/1-topics/📖-900-기타.html","99-settings/1-topics/📚-101-머신러닝.html","99-settings/1-topics/📚-102-딥러닝.html","99-settings/1-topics/📚-103-데이터-모델링.html","99-settings/1-topics/📚-104-통계-분석.html","99-settings/1-topics/📚-105-캐글.html","99-settings/1-topics/📚-106-llm-&-ai.html","99-settings/1-topics/📚-107-인공신경망.html","99-settings/1-topics/📚-108-의사결정나무.html","99-settings/1-topics/📚-109-연관성-분석.html","99-settings/1-topics/📚-201-react.html","99-settings/1-topics/📚-202-vue.js.html","99-settings/1-topics/📚-203-next.js.html","99-settings/1-topics/📚-204-node.js.html","99-settings/1-topics/📚-205-웹팩-&-빌드.html","99-settings/1-topics/📚-206-상태관리.html","99-settings/1-topics/📚-207-css-&-스타일링.html","99-settings/1-topics/📚-208-웹-렌더링.html","99-settings/1-topics/📚-209-3d-웹.html","99-settings/1-topics/📚-210-electron-&-tauri.html","99-settings/1-topics/📚-301-spring.html","99-settings/1-topics/📚-302-django.html","99-settings/1-topics/📚-303-fastapi.html","99-settings/1-topics/📚-304-express.js.html","99-settings/1-topics/📚-305-데이터베이스.html","99-settings/1-topics/📚-306-api-설계.html","99-settings/1-topics/📚-307-인증-&-보안.html","99-settings/1-topics/📚-401-docker-&-kubernetes.html","99-settings/1-topics/📚-402-aws-&-클라우드.html","99-settings/1-topics/📚-403-시스템-설계.html","99-settings/1-topics/📚-404-마이크로서비스.html","99-settings/1-topics/📚-405-모니터링-&-로깅.html","99-settings/1-topics/📚-406-ci-cd.html","99-settings/1-topics/📚-407-네트워크-&-보안.html","99-settings/1-topics/📚-408-스케일링.html","99-settings/1-topics/📚-501-flutter.html","99-settings/1-topics/📚-502-android.html","99-settings/1-topics/📚-503-dart.html","99-settings/1-topics/📚-504-riverpod.html","99-settings/1-topics/📚-505-상태관리.html","99-settings/1-topics/📚-506-네트워킹.html","99-settings/1-topics/📚-507-빌드-&-배포.html","99-settings/1-topics/📚-601-구현-&-완전탐색.html","99-settings/1-topics/📚-602-그리디.html","99-settings/1-topics/📚-603-다이나믹프로그래밍.html","99-settings/1-topics/📚-604-최단경로.html","99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","99-settings/1-topics/📚-606-세그먼트트리.html","99-settings/1-topics/📚-607-슬라이딩윈도우.html","99-settings/1-topics/📚-608-위상정렬.html","99-settings/1-topics/📚-609-유니온파인드.html","99-settings/1-topics/📚-610-이진탐색.html","99-settings/1-topics/📚-611-정렬.html","99-settings/1-topics/📚-612-최소신장트리.html","99-settings/1-topics/📚-613-bfs-&-dfs.html","99-settings/1-topics/📚-614-그래프.html","99-settings/1-topics/📚-615-정렬알고리즘.html","99-settings/1-topics/📚-616-python.html","99-settings/1-topics/📚-617-java.html","99-settings/1-topics/📚-701-디자인패턴.html","99-settings/1-topics/📚-702-네트워크.html","99-settings/1-topics/📚-703-데이터베이스.html","99-settings/1-topics/📚-704-운영체제.html","99-settings/1-topics/📚-705-보안.html","99-settings/1-topics/📚-706-시스템-설계.html","99-settings/1-topics/📚-801-다-맡게팅.html","99-settings/2-index/🏷️-데일리-노트.html","99-settings/2-index/🏷️-도구.html","99-settings/2-index/🏷️-레퍼런스.html","99-settings/2-index/🏷️-리뷰.html","99-settings/2-index/🏷️-실습.html","99-settings/2-index/🏷️-에러-해결.html","99-settings/2-index/🏷️-이론.html","99-settings/2-index/🏷️-자격증.html","99-settings/2-index/🏷️-최적화.html","99-settings/2-index/🏷️-취업.html","99-settings/2-index/🏷️-프로젝트.html","99-settings/2-index/🏷️-학교.html","99-settings/2-index/🏷️-학습.html","99-settings/2-index/🏷️-회사.html","99-settings/2-index/🏷️-todo.html","100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","100-데이터분석-&-ai/캐글/캐글준비.html","100-데이터분석-&-ai/캐글/eda.html","100-데이터분석-&-ai/캐글/result.html","100-데이터분석-&-ai/캐글/untitled.html","100-데이터분석-&-ai/캐글/untitled-1.html","100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.png","100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html","100-데이터분석-&-ai/개발-방법론.html","100-데이터분석-&-ai/데이터모델링.html","100-데이터분석-&-ai/딥러닝.html","100-데이터분석-&-ai/모델성능최적화.html","100-데이터분석-&-ai/분석.html","100-데이터분석-&-ai/신경망.html","100-데이터분석-&-ai/연관성-분석.html","100-데이터분석-&-ai/의사결정나무.html","100-데이터분석-&-ai/인공신경망(ann).html","100-데이터분석-&-ai/인공지능(ai).html","100-데이터분석-&-ai/자료-형태에-따른분석.html","100-데이터분석-&-ai/카이제곱.html","100-데이터분석-&-ai/평가.html","100-데이터분석-&-ai/ai-기본-코드.html","100-데이터분석-&-ai/callback-,함수-체이닝-차이.html","100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","100-데이터분석-&-ai/p-value.html","100-데이터분석-&-ai/runnable.html","200-웹개발/공식문서/react_공식문서를-나의-말로...html","200-웹개발/공식문서/vite.html","200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png","200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html","200-웹개발/assets/pasted-image-20231114151038.png","200-웹개발/assets/pasted-image-20231114151038.html","200-웹개발/assets/pasted-image-20240628175728.png","200-웹개발/assets/pasted-image-20240628175728.html","200-웹개발/assets/pasted-image-20240701112747.png","200-웹개발/assets/pasted-image-20240701112747.html","200-웹개발/assets/pasted-image-20240701114022.png","200-웹개발/assets/pasted-image-20240701114022.html","200-웹개발/assets/pasted-image-20240701114052.png","200-웹개발/assets/pasted-image-20240701114052.html","200-웹개발/assets/pasted-image-20240702095610.png","200-웹개발/assets/pasted-image-20240702095610.html","200-웹개발/assets/vue_정리-20240627140705844.png","200-웹개발/assets/vue_정리-20240627140705844.html","200-웹개발/assets/vue-20240627101400036.png","200-웹개발/assets/vue-20240627101400036.html","200-웹개발/vue/assets/pasted-image-20240702135541.png","200-웹개발/vue/assets/pasted-image-20240702135541.html","200-웹개발/vue/assets/pasted-image-20240702135910.png","200-웹개발/vue/assets/pasted-image-20240702135910.html","200-웹개발/vue/assets/pasted-image-20240821112059.png","200-웹개발/vue/assets/pasted-image-20240821112059.html","200-웹개발/vue/assets/pasted-image-20240821112757.png","200-웹개발/vue/assets/pasted-image-20240821112757.html","200-웹개발/vue/무제-파일.html","200-웹개발/vue/할일.html","200-웹개발/vue/햇갈렷던것..-반응성관련.html","200-웹개발/vue/vue-문서들.html","200-웹개발/vue/vue_기록.html","200-웹개발/vue/vue_재사용성.html","200-웹개발/vue/vue_ref,reactive.html","200-웹개발/vue/vue_router.html","200-웹개발/vue/vue_sfc-기본구조.html","200-웹개발/vue/vue_test_jest.html","200-웹개발/vue/vue2_기본정리.html","200-웹개발/vue/vue3_composition.html","200-웹개발/vue/vue의-상태관리툴.html","200-웹개발/3d.html","200-웹개발/디자인-라이브러리.html","200-웹개발/상태처리-리액트&뷰.html","200-웹개발/웹-렌더링-형태.html","200-웹개발/웹팩.html","200-웹개발/좋은말.html","200-웹개발/css.html","200-웹개발/defer.html","200-웹개발/electron-vs-tauri.html","200-웹개발/headless-컴포넌트.html","200-웹개발/hook-렌더링-최적화.html","200-웹개발/js_-proxy&defineproperty.html","200-웹개발/js)-math.html","200-웹개발/next.js.html","200-웹개발/nodejs-nginx-vite-tomcat.html","200-웹개발/react-폴더-구조.html","200-웹개발/react_ref.html","200-웹개발/react-query.html","200-웹개발/redux-toolkit.html","200-웹개발/suspense.html","200-웹개발/vanilla-js.html","300-백엔드개발/assets/스프링-db-접근-1748788030972.png","300-백엔드개발/assets/스프링-db-접근-1748788030972.html","300-백엔드개발/assets/아키텍처-1747921913860.png","300-백엔드개발/assets/아키텍처-1747921913860.html","300-백엔드개발/assets/애자일-1749384475904.png","300-백엔드개발/assets/애자일-1749384475904.html","300-백엔드개발/assets/aggregate-1749754173915.png","300-백엔드개발/assets/aggregate-1749754173915.html","300-백엔드개발/assets/biz,dev,ops-1749383255427.png","300-백엔드개발/assets/biz,dev,ops-1749383255427.html","300-백엔드개발/assets/biz,dev,ops-1749384334755.png","300-백엔드개발/assets/biz,dev,ops-1749384334755.html","300-백엔드개발/assets/db-영속성과-저장-1751787526152.png","300-백엔드개발/assets/db-영속성과-저장-1751787526152.html","300-백엔드개발/assets/docker-1751777737123.png","300-백엔드개발/assets/docker-1751777737123.html","300-백엔드개발/assets/k8s-1751779119042.png","300-백엔드개발/assets/k8s-1751779119042.html","300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png","300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html","300-백엔드개발/assets/msa-1749455998102.png","300-백엔드개발/assets/msa-1749455998102.html","300-백엔드개발/assets/msa-1749544836042.png","300-백엔드개발/assets/msa-1749544836042.html","300-백엔드개발/assets/msa-1749752615566.png","300-백엔드개발/assets/msa-1749752615566.html","300-백엔드개발/assets/msa-1749752634954.png","300-백엔드개발/assets/msa-1749752634954.html","300-백엔드개발/assets/msa-1749752670525.png","300-백엔드개발/assets/msa-1749752670525.html","300-백엔드개발/assets/msa-1749753255535.png","300-백엔드개발/assets/msa-1749753255535.html","300-백엔드개발/assets/msa설계-1750876404713.png","300-백엔드개발/assets/msa설계-1750876404713.html","300-백엔드개발/assets/msa설계-1750876609108.png","300-백엔드개발/assets/msa설계-1750876609108.html","300-백엔드개발/assets/msa설계-1750880282832.png","300-백엔드개발/assets/msa설계-1750880282832.html","300-백엔드개발/assets/msa전체적인-구조-1751776935880.png","300-백엔드개발/assets/msa전체적인-구조-1751776935880.html","300-백엔드개발/assets/spring-mvc-1748447479487.png","300-백엔드개발/assets/spring-mvc-1748447479487.html","300-백엔드개발/assets/spring-mvc-1748452533042.png","300-백엔드개발/assets/spring-mvc-1748452533042.html","300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png","300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png","300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html","300-백엔드개발/스프링-부트-모니터링,-보안설정.html","300-백엔드개발/스프링-부트(spring-boot).html","300-백엔드개발/스프링-프레임워크-기본(spring).html","300-백엔드개발/스프링-db-접근.html","300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","300-백엔드개발/스프링부트주요사용법.html","300-백엔드개발/시ㄹ행과정.html","300-백엔드개발/애자일.html","300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html","300-백엔드개발/자바에서의-컨테이너.html","300-백엔드개발/컨테이너-런타임.html","300-백엔드개발/aggregate.html","300-백엔드개발/apache-vs-nginx-vs-tomcat.html","300-백엔드개발/db-영속성과-저장.html","300-백엔드개발/docker.html","300-백엔드개발/explain.html","300-백엔드개발/filter,-servlet.html","300-백엔드개발/spring-mvc.html","300-백엔드개발/tomcat-vs-netty.html","300-백엔드개발/webflux-vs-mvc-관련-의문점.html","400-인프라-&-아키텍처/assets/cloud-1747744250912.png","400-인프라-&-아키텍처/assets/cloud-1747744250912.html","400-인프라-&-아키텍처/도오커.html","400-인프라-&-아키텍처/biz,dev,ops.html","400-인프라-&-아키텍처/cloud.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html","400-인프라-&-아키텍처/k8s.html","400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","400-인프라-&-아키텍처/kafka.html","400-인프라-&-아키텍처/msa.html","400-인프라-&-아키텍처/msa설계.html","400-인프라-&-아키텍처/msa전체적인-구조.html","400-인프라-&-아키텍처/test.html","500-모바일개발/android/assets/1_setting-20241221011941321.png","500-모바일개발/android/assets/1_setting-20241221011941321.html","500-모바일개발/android/assets/1_setting-20241221013449422.png","500-모바일개발/android/assets/1_setting-20241221013449422.html","500-모바일개발/android/assets/1_setting-20241221035822530.png","500-모바일개발/android/assets/1_setting-20241221035822530.html","500-모바일개발/android/assets/2_기본구조-20241221025557132.png","500-모바일개발/android/assets/2_기본구조-20241221025557132.html","500-모바일개발/android/assets/2_기본구조-20241221031015594.png","500-모바일개발/android/assets/2_기본구조-20241221031015594.html","500-모바일개발/android/assets/2_기본구조-20241221031505580.png","500-모바일개발/android/assets/2_기본구조-20241221031505580.html","500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png","500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html","500-모바일개발/android/assets/3_코틀린-20241221220802352.png","500-모바일개발/android/assets/3_코틀린-20241221220802352.html","500-모바일개발/android/assets/4_화면-구성-20241223010710073.png","500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","500-모바일개발/android/assets/4_화면-구성-20241224000559232.png","500-모바일개발/android/assets/4_화면-구성-20241224000559232.html","500-모바일개발/android/assets/setting-20241219232030173.png","500-모바일개발/android/assets/setting-20241219232030173.html","500-모바일개발/android/1_setting.html","500-모바일개발/android/2_안드로이드-이해.html","500-모바일개발/android/3_코틀린.html","500-모바일개발/android/4_화면-구성.html","500-모바일개발/android/5_미래.html","500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png","500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html","500-모바일개발/결과처리.html","500-모바일개발/네트워크-환경-체크.html","500-모바일개발/만들면서한-고민.html","500-모바일개발/빌드-관련명령어.html","500-모바일개발/앱에서의-데이터-사용과-구현.html","500-모바일개발/키스토어-명령어들.html","500-모바일개발/annotion.html","500-모바일개발/asyncvalue-vs-asyncdata.html","500-모바일개발/dart-3.0.html","500-모바일개발/enum.html","500-모바일개발/flavor-빌드-변형.html","500-모바일개발/flutter-future.html","500-모바일개발/flutter-mvvm.html","500-모바일개발/freezed,jsonserialiable.html","500-모바일개발/gorouter-기본사용법.html","500-모바일개발/live-templete.html","500-모바일개발/private,-protected.html","500-모바일개발/riverpod-annotation.html","500-모바일개발/riverpod-read-listen.html","500-모바일개발/user에-로딩-state가-있어야하는가!.html","600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.png","600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html","600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.png","600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html","600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png","600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html","600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html","600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html","600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.png","600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/1613-역사.html","600-알고리즘-&-코딩테스트/작성형식.html","600-알고리즘-&-코딩테스트/g_개미집합의지름.html","600-알고리즘-&-코딩테스트/java.html","600-알고리즘-&-코딩테스트/lis.html","600-알고리즘-&-코딩테스트/p_석유시추.html","600-알고리즘-&-코딩테스트/p42895-n으로-표현.html","600-알고리즘-&-코딩테스트/p42897-도둑질.html","600-알고리즘-&-코딩테스트/python.html","600-알고리즘-&-코딩테스트/site.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html","700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png","700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","700-컴퓨터과학/assets/pasted-image-20240120190703.png","700-컴퓨터과학/assets/pasted-image-20240120190703.html","700-컴퓨터과학/assets/pasted-image-20240214193456.png","700-컴퓨터과학/assets/pasted-image-20240214193456.html","700-컴퓨터과학/assets/pasted-image-20240310202225.png","700-컴퓨터과학/assets/pasted-image-20240310202225.html","700-컴퓨터과학/assets/pasted-image-20240310203122.png","700-컴퓨터과학/assets/pasted-image-20240310203122.html","700-컴퓨터과학/assets/pasted-image-20240310204327.png","700-컴퓨터과학/assets/pasted-image-20240310204327.html","700-컴퓨터과학/assets/pasted-image-20240310204859.png","700-컴퓨터과학/assets/pasted-image-20240310204859.html","700-컴퓨터과학/assets/pasted-image-20240323173037.png","700-컴퓨터과학/assets/pasted-image-20240323173037.html","700-컴퓨터과학/네트워크.html","700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","700-컴퓨터과학/디자인패턴.html","700-컴퓨터과학/면접-노트.html","700-컴퓨터과학/보안프로토콜.html","700-컴퓨터과학/알고리즘.html","700-컴퓨터과학/여러가지-상속.html","700-컴퓨터과학/의존성-주입.html","700-컴퓨터과학/폰노이만구조.html","700-컴퓨터과학/합성데이터(synthetic-data).html","700-컴퓨터과학/해시.html","700-컴퓨터과학/db.html","700-컴퓨터과학/it기초-과제2.html","700-컴퓨터과학/scale-up-&-scale-out.html","home.html"],"attachments":["daily/assets/스크린샷-2023-11-25-오후-7.13.54.png","daily/assets/pasted-image-20231129141201.png","site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/293fd13dbca5a3e450ef.woff2","site-lib/fonts/085cb93e613ba3d40d2b.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/6155340132a851f6089e.svg","site-lib/media/2308ab1944a6bfa5c5b8.svg","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.png","site-lib/styles/snippets.css","site-lib/styles/obsidian.css","site-lib/styles/theme.css","site-lib/styles/global-variable-styles.css","site-lib/styles/supported-plugins.css","site-lib/styles/main-styles.css","site-lib/rss.xml","100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.png","200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png","200-웹개발/assets/pasted-image-20231114151038.png","200-웹개발/assets/pasted-image-20240628175728.png","200-웹개발/assets/pasted-image-20240701112747.png","200-웹개발/assets/pasted-image-20240701114022.png","200-웹개발/assets/pasted-image-20240701114052.png","200-웹개발/assets/pasted-image-20240702095610.png","200-웹개발/assets/vue_정리-20240627140705844.png","200-웹개발/assets/vue-20240627101400036.png","200-웹개발/vue/assets/pasted-image-20240702135541.png","200-웹개발/vue/assets/pasted-image-20240702135910.png","200-웹개발/vue/assets/pasted-image-20240821112059.png","200-웹개발/vue/assets/pasted-image-20240821112757.png","300-백엔드개발/assets/스프링-db-접근-1748788030972.png","300-백엔드개발/assets/아키텍처-1747921913860.png","300-백엔드개발/assets/애자일-1749384475904.png","300-백엔드개발/assets/aggregate-1749754173915.png","300-백엔드개발/assets/biz,dev,ops-1749383255427.png","300-백엔드개발/assets/biz,dev,ops-1749384334755.png","300-백엔드개발/assets/db-영속성과-저장-1751787526152.png","300-백엔드개발/assets/docker-1751777737123.png","300-백엔드개발/assets/k8s-1751779119042.png","300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png","300-백엔드개발/assets/msa-1749455998102.png","300-백엔드개발/assets/msa-1749544836042.png","300-백엔드개발/assets/msa-1749752615566.png","300-백엔드개발/assets/msa-1749752634954.png","300-백엔드개발/assets/msa-1749752670525.png","300-백엔드개발/assets/msa-1749753255535.png","300-백엔드개발/assets/msa설계-1750876404713.png","300-백엔드개발/assets/msa설계-1750876609108.png","300-백엔드개발/assets/msa설계-1750880282832.png","300-백엔드개발/assets/msa전체적인-구조-1751776935880.png","300-백엔드개발/assets/spring-mvc-1748447479487.png","300-백엔드개발/assets/spring-mvc-1748452533042.png","300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png","300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png","400-인프라-&-아키텍처/assets/cloud-1747744250912.png","500-모바일개발/android/assets/1_setting-20241221011941321.png","500-모바일개발/android/assets/1_setting-20241221013449422.png","500-모바일개발/android/assets/1_setting-20241221035822530.png","500-모바일개발/android/assets/2_기본구조-20241221025557132.png","500-모바일개발/android/assets/2_기본구조-20241221031015594.png","500-모바일개발/android/assets/2_기본구조-20241221031505580.png","500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png","500-모바일개발/android/assets/3_코틀린-20241221220802352.png","500-모바일개발/android/assets/4_화면-구성-20241223010710073.png","500-모바일개발/android/assets/4_화면-구성-20241224000559232.png","500-모바일개발/android/assets/setting-20241219232030173.png","500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png","600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.png","600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.png","600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png","600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png","700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png","700-컴퓨터과학/assets/pasted-image-20240120190703.png","700-컴퓨터과학/assets/pasted-image-20240214193456.png","700-컴퓨터과학/assets/pasted-image-20240310202225.png","700-컴퓨터과학/assets/pasted-image-20240310203122.png","700-컴퓨터과학/assets/pasted-image-20240310204327.png","700-컴퓨터과학/assets/pasted-image-20240310204859.png","700-컴퓨터과학/assets/pasted-image-20240323173037.png","error/assets/nginx-1757772245845.png"],"allFiles":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html","300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png","300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html","300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png","300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","300-백엔드개발/tomcat-vs-netty.html","300-백엔드개발/filter,-servlet.html","300-백엔드개발/apache-vs-nginx-vs-tomcat.html","700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.png","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html","300-백엔드개발/스프링-부트-모니터링,-보안설정.html","300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html","99-settings/1-topics/📚-801-다-맡게팅.html","error/assets/nginx-1757772245845.png","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html","99-settings/1-topics/📚-615-정렬알고리즘.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","99-settings/1-topics/📖-800-프로젝트.html","99-settings/1-topics/📖-900-기타.html","99-settings/2-index/🏷️-레퍼런스.html","99-settings/2-index/🏷️-실습.html","99-settings/2-index/🏷️-이론.html","99-settings/2-index/🏷️-학교.html","99-settings/1-topics/📖-200-웹-개발.html","99-settings/1-topics/📚-102-딥러닝.html","99-settings/1-topics/📖-100-데이터-분석-&-ai.html","99-settings/1-topics/📖-300-백엔드-개발.html","99-settings/1-topics/📚-401-docker-&-kubernetes.html","99-settings/1-topics/📚-202-vue.js.html","99-settings/1-topics/📚-501-flutter.html","99-settings/1-topics/📚-301-spring.html","99-settings/1-topics/📚-302-django.html","99-settings/1-topics/📚-101-머신러닝.html","99-settings/1-topics/📖-400-인프라-&-아키텍처.html","99-settings/1-topics/📖-700-컴퓨터-과학.html","99-settings/1-topics/📚-201-react.html","99-settings/1-topics/📖-500-모바일-개발.html","99-settings/2-index/🏷️-에러-해결.html","99-settings/2-index/🏷️-회사.html","99-settings/2-index/🏷️-데일리-노트.html","99-settings/2-index/🏷️-최적화.html","99-settings/2-index/🏷️-학습.html","99-settings/2-index/🏷️-리뷰.html","99-settings/2-index/🏷️-프로젝트.html","99-settings/2-index/🏷️-todo.html","99-settings/2-index/🏷️-도구.html","99-settings/2-index/🏷️-취업.html","99-settings/2-index/🏷️-자격증.html","99-settings/1-topics/📚-108-의사결정나무.html","99-settings/1-topics/📚-109-연관성-분석.html","99-settings/1-topics/📚-203-next.js.html","99-settings/1-topics/📚-407-네트워크-&-보안.html","99-settings/1-topics/📚-602-그리디.html","99-settings/1-topics/📚-402-aws-&-클라우드.html","99-settings/1-topics/📚-208-웹-렌더링.html","99-settings/1-topics/📚-405-모니터링-&-로깅.html","99-settings/1-topics/📚-207-css-&-스타일링.html","99-settings/1-topics/📚-705-보안.html","99-settings/1-topics/📚-304-express.js.html","99-settings/1-topics/📚-616-python.html","99-settings/1-topics/📚-702-네트워크.html","99-settings/1-topics/📚-305-데이터베이스.html","99-settings/1-topics/📚-408-스케일링.html","99-settings/1-topics/📚-404-마이크로서비스.html","99-settings/1-topics/📚-205-웹팩-&-빌드.html","99-settings/1-topics/📚-703-데이터베이스.html","99-settings/1-topics/📚-612-최소신장트리.html","99-settings/1-topics/📚-611-정렬.html","99-settings/1-topics/📚-603-다이나믹프로그래밍.html","99-settings/1-topics/📚-106-llm-&-ai.html","99-settings/1-topics/📚-610-이진탐색.html","99-settings/1-topics/📚-103-데이터-모델링.html","99-settings/1-topics/📚-104-통계-분석.html","99-settings/1-topics/📚-105-캐글.html","99-settings/1-topics/📚-608-위상정렬.html","99-settings/1-topics/📚-701-디자인패턴.html","99-settings/1-topics/📚-607-슬라이딩윈도우.html","99-settings/1-topics/📚-204-node.js.html","99-settings/1-topics/📚-706-시스템-설계.html","99-settings/1-topics/📚-506-네트워킹.html","99-settings/1-topics/📚-303-fastapi.html","99-settings/1-topics/📚-503-dart.html","99-settings/1-topics/📚-604-최단경로.html","99-settings/1-topics/📚-609-유니온파인드.html","99-settings/1-topics/📚-206-상태관리.html","99-settings/1-topics/📚-209-3d-웹.html","99-settings/1-topics/📚-505-상태관리.html","99-settings/1-topics/📚-606-세그먼트트리.html","99-settings/1-topics/📚-614-그래프.html","99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","99-settings/1-topics/📚-507-빌드-&-배포.html","99-settings/1-topics/📚-107-인공신경망.html","99-settings/1-topics/📚-601-구현-&-완전탐색.html","99-settings/1-topics/📚-617-java.html","99-settings/1-topics/📚-502-android.html","99-settings/1-topics/📚-210-electron-&-tauri.html","99-settings/1-topics/📚-306-api-설계.html","99-settings/1-topics/📚-403-시스템-설계.html","99-settings/1-topics/📚-307-인증-&-보안.html","99-settings/1-topics/📚-504-riverpod.html","99-settings/1-topics/📚-406-ci-cd.html","99-settings/1-topics/📚-613-bfs-&-dfs.html","99-settings/1-topics/📚-704-운영체제.html","home.html","200-웹개발/nodejs-nginx-vite-tomcat.html","300-백엔드개발/시ㄹ행과정.html","100-데이터분석-&-ai/캐글/result.html","100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","100-데이터분석-&-ai/캐글/untitled-1.html","100-데이터분석-&-ai/캐글/untitled.html","100-데이터분석-&-ai/캐글/eda.html","300-백엔드개발/db-영속성과-저장.html","300-백엔드개발/assets/db-영속성과-저장-1751787526152.png","300-백엔드개발/assets/db-영속성과-저장-1751787526152.html","300-백엔드개발/스프링-db-접근.html","400-인프라-&-아키텍처/k8s.html","300-백엔드개발/docker.html","300-백엔드개발/컨테이너-런타임.html","300-백엔드개발/assets/k8s-1751779119042.png","300-백엔드개발/assets/k8s-1751779119042.html","400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","300-백엔드개발/assets/docker-1751777737123.png","300-백엔드개발/assets/docker-1751777737123.html","300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png","300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html","400-인프라-&-아키텍처/msa전체적인-구조.html","300-백엔드개발/assets/msa전체적인-구조-1751776935880.png","300-백엔드개발/assets/msa전체적인-구조-1751776935880.html","400-인프라-&-아키텍처/kafka.html","100-데이터분석-&-ai/분석.html","400-인프라-&-아키텍처/도오커.html","300-백엔드개발/explain.html","400-인프라-&-아키텍처/msa설계.html","400-인프라-&-아키텍처/msa.html","300-백엔드개발/assets/msa설계-1750880282832.png","300-백엔드개발/assets/msa설계-1750880282832.html","300-백엔드개발/스프링부트주요사용법.html","300-백엔드개발/assets/msa설계-1750876609108.png","300-백엔드개발/assets/msa설계-1750876609108.html","300-백엔드개발/assets/msa설계-1750876404713.png","300-백엔드개발/assets/msa설계-1750876404713.html","300-백엔드개발/aggregate.html","300-백엔드개발/assets/aggregate-1749754173915.png","300-백엔드개발/assets/aggregate-1749754173915.html","300-백엔드개발/assets/msa-1749753255535.png","300-백엔드개발/assets/msa-1749753255535.html","300-백엔드개발/assets/msa-1749752670525.png","300-백엔드개발/assets/msa-1749752670525.html","300-백엔드개발/assets/msa-1749752634954.png","300-백엔드개발/assets/msa-1749752634954.html","300-백엔드개발/assets/msa-1749752615566.png","300-백엔드개발/assets/msa-1749752615566.html","300-백엔드개발/assets/msa-1749544836042.png","300-백엔드개발/assets/msa-1749544836042.html","300-백엔드개발/assets/msa-1749455998102.png","300-백엔드개발/assets/msa-1749455998102.html","300-백엔드개발/애자일.html","100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","400-인프라-&-아키텍처/cloud.html","300-백엔드개발/assets/애자일-1749384475904.png","300-백엔드개발/assets/애자일-1749384475904.html","400-인프라-&-아키텍처/biz,dev,ops.html","300-백엔드개발/assets/biz,dev,ops-1749384334755.png","300-백엔드개발/assets/biz,dev,ops-1749384334755.html","300-백엔드개발/assets/biz,dev,ops-1749383255427.png","300-백엔드개발/assets/biz,dev,ops-1749383255427.html","500-모바일개발/private,-protected.html","300-백엔드개발/assets/스프링-db-접근-1748788030972.png","300-백엔드개발/assets/스프링-db-접근-1748788030972.html","300-백엔드개발/스프링-부트(spring-boot).html","200-웹개발/redux-toolkit.html","100-데이터분석-&-ai/캐글/캐글준비.html","300-백엔드개발/spring-mvc.html","300-백엔드개발/assets/spring-mvc-1748452533042.png","300-백엔드개발/assets/spring-mvc-1748452533042.html","300-백엔드개발/assets/spring-mvc-1748447479487.png","300-백엔드개발/assets/spring-mvc-1748447479487.html","300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","300-백엔드개발/자바에서의-컨테이너.html","300-백엔드개발/스프링-프레임워크-기본(spring).html","100-데이터분석-&-ai/runnable.html","100-데이터분석-&-ai/callback-,함수-체이닝-차이.html","300-백엔드개발/assets/아키텍처-1747921913860.png","300-백엔드개발/assets/아키텍처-1747921913860.html","400-인프라-&-아키텍처/assets/cloud-1747744250912.png","400-인프라-&-아키텍처/assets/cloud-1747744250912.html","400-인프라-&-아키텍처/test.html","600-알고리즘-&-코딩테스트/java.html","600-알고리즘-&-코딩테스트/작성형식.html","100-데이터분석-&-ai/평가.html","100-데이터분석-&-ai/ai-기본-코드.html","100-데이터분석-&-ai/딥러닝.html","100-데이터분석-&-ai/개발-방법론.html","100-데이터분석-&-ai/모델성능최적화.html","100-데이터분석-&-ai/데이터모델링.html","100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.png","100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html","100-데이터분석-&-ai/자료-형태에-따른분석.html","100-데이터분석-&-ai/인공신경망(ann).html","100-데이터분석-&-ai/연관성-분석.html","100-데이터분석-&-ai/의사결정나무.html","100-데이터분석-&-ai/카이제곱.html","100-데이터분석-&-ai/p-value.html","200-웹개발/next.js.html","200-웹개발/hook-렌더링-최적화.html","200-웹개발/웹-렌더링-형태.html","500-모바일개발/앱에서의-데이터-사용과-구현.html","600-알고리즘-&-코딩테스트/python.html","600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.png","600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html","600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html","600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.png","600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html","200-웹개발/suspense.html","200-웹개발/공식문서/vite.html","500-모바일개발/android/4_화면-구성.html","500-모바일개발/android/1_setting.html","500-모바일개발/android/assets/4_화면-구성-20241224000559232.png","500-모바일개발/android/assets/4_화면-구성-20241224000559232.html","500-모바일개발/android/assets/4_화면-구성-20241223010710073.png","500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","500-모바일개발/android/5_미래.html","500-모바일개발/android/3_코틀린.html","500-모바일개발/android/assets/3_코틀린-20241221220802352.png","500-모바일개발/android/assets/3_코틀린-20241221220802352.html","500-모바일개발/android/2_안드로이드-이해.html","500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png","500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html","700-컴퓨터과학/디자인패턴.html","500-모바일개발/android/assets/1_setting-20241221035822530.png","500-모바일개발/android/assets/1_setting-20241221035822530.html","500-모바일개발/android/assets/2_기본구조-20241221031505580.png","500-모바일개발/android/assets/2_기본구조-20241221031505580.html","500-모바일개발/android/assets/2_기본구조-20241221031015594.png","500-모바일개발/android/assets/2_기본구조-20241221031015594.html","500-모바일개발/android/assets/2_기본구조-20241221025557132.png","500-모바일개발/android/assets/2_기본구조-20241221025557132.html","500-모바일개발/android/assets/1_setting-20241221013449422.png","500-모바일개발/android/assets/1_setting-20241221013449422.html","500-모바일개발/android/assets/1_setting-20241221011941321.png","500-모바일개발/android/assets/1_setting-20241221011941321.html","500-모바일개발/android/assets/setting-20241219232030173.png","500-모바일개발/android/assets/setting-20241219232030173.html","500-모바일개발/키스토어-명령어들.html","200-웹개발/공식문서/react_공식문서를-나의-말로...html","500-모바일개발/빌드-관련명령어.html","600-알고리즘-&-코딩테스트/g_개미집합의지름.html","600-알고리즘-&-코딩테스트/p_석유시추.html","700-컴퓨터과학/db.html","100-데이터분석-&-ai/인공지능(ai).html","100-데이터분석-&-ai/신경망.html","600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html","600-알고리즘-&-코딩테스트/site.html","600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png","600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html","600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.png","600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html","200-웹개발/vue/assets/pasted-image-20240821112059.png","200-웹개발/vue/assets/pasted-image-20240821112059.html","200-웹개발/vue/assets/pasted-image-20240821112757.png","200-웹개발/vue/assets/pasted-image-20240821112757.html","200-웹개발/vue/햇갈렷던것..-반응성관련.html","700-컴퓨터과학/합성데이터(synthetic-data).html","200-웹개발/vue/무제-파일.html","200-웹개발/vue/할일.html","200-웹개발/vue/vue_test_jest.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html","600-알고리즘-&-코딩테스트/lis.html","200-웹개발/vue/vue_기록.html","200-웹개발/vue/vue3_composition.html","200-웹개발/vue/vue_재사용성.html","200-웹개발/vue/vue의-상태관리툴.html","200-웹개발/vue/vue_ref,reactive.html","200-웹개발/vue/vue_router.html","200-웹개발/vue/vue_sfc-기본구조.html","200-웹개발/vue/vue2_기본정리.html","200-웹개발/vue/assets/pasted-image-20240702135541.png","200-웹개발/vue/assets/pasted-image-20240702135541.html","200-웹개발/vue/assets/pasted-image-20240702135910.png","200-웹개발/vue/assets/pasted-image-20240702135910.html","200-웹개발/vue/vue-문서들.html","200-웹개발/js_-proxy&defineproperty.html","200-웹개발/assets/pasted-image-20240702095610.png","200-웹개발/assets/pasted-image-20240702095610.html","200-웹개발/react_ref.html","200-웹개발/assets/pasted-image-20240701114052.png","200-웹개발/assets/pasted-image-20240701114052.html","200-웹개발/웹팩.html","200-웹개발/assets/pasted-image-20240701114022.png","200-웹개발/assets/pasted-image-20240701114022.html","200-웹개발/assets/pasted-image-20240701112747.png","200-웹개발/assets/pasted-image-20240701112747.html","200-웹개발/assets/pasted-image-20240628175728.png","200-웹개발/assets/pasted-image-20240628175728.html","200-웹개발/assets/vue_정리-20240627140705844.png","200-웹개발/assets/vue_정리-20240627140705844.html","200-웹개발/assets/vue-20240627101400036.png","200-웹개발/assets/vue-20240627101400036.html","200-웹개발/3d.html","500-모바일개발/flavor-빌드-변형.html","700-컴퓨터과학/네트워크.html","700-컴퓨터과학/해시.html","500-모바일개발/annotion.html","500-모바일개발/asyncvalue-vs-asyncdata.html","500-모바일개발/riverpod-annotation.html","500-모바일개발/enum.html","500-모바일개발/만들면서한-고민.html","700-컴퓨터과학/it기초-과제2.html","700-컴퓨터과학/assets/pasted-image-20240323173037.png","700-컴퓨터과학/assets/pasted-image-20240323173037.html","500-모바일개발/flutter-mvvm.html","500-모바일개발/riverpod-read-listen.html","500-모바일개발/freezed,jsonserialiable.html","200-웹개발/react-폴더-구조.html","500-모바일개발/결과처리.html","500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png","500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html","500-모바일개발/네트워크-환경-체크.html","700-컴퓨터과학/여러가지-상속.html","500-모바일개발/live-templete.html","500-모바일개발/dart-3.0.html","500-모바일개발/user에-로딩-state가-있어야하는가!.html","500-모바일개발/gorouter-기본사용법.html","200-웹개발/디자인-라이브러리.html","500-모바일개발/flutter-future.html","200-웹개발/defer.html","200-웹개발/headless-컴포넌트.html","700-컴퓨터과학/scale-up-&-scale-out.html","700-컴퓨터과학/폰노이만구조.html","700-컴퓨터과학/assets/pasted-image-20240310204859.png","700-컴퓨터과학/assets/pasted-image-20240310204859.html","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","700-컴퓨터과학/assets/pasted-image-20240310204327.png","700-컴퓨터과학/assets/pasted-image-20240310204327.html","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html","700-컴퓨터과학/assets/pasted-image-20240310203122.png","700-컴퓨터과학/assets/pasted-image-20240310203122.html","700-컴퓨터과학/assets/pasted-image-20240310202225.png","700-컴퓨터과학/assets/pasted-image-20240310202225.html","700-컴퓨터과학/의존성-주입.html","200-웹개발/electron-vs-tauri.html","600-알고리즘-&-코딩테스트/p42897-도둑질.html","600-알고리즘-&-코딩테스트/p42895-n으로-표현.html","600-알고리즘-&-코딩테스트/1613-역사.html","700-컴퓨터과학/알고리즘.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.png","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","700-컴퓨터과학/assets/pasted-image-20240214193456.png","700-컴퓨터과학/assets/pasted-image-20240214193456.html","200-웹개발/css.html","700-컴퓨터과학/보안프로토콜.html","700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png","700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html","700-컴퓨터과학/assets/pasted-image-20240120190703.png","700-컴퓨터과학/assets/pasted-image-20240120190703.html","700-컴퓨터과학/면접-노트.html","200-웹개발/좋은말.html","200-웹개발/상태처리-리액트&뷰.html","daily/assets/pasted-image-20231129141201.png","200-웹개발/vanilla-js.html","daily/assets/스크린샷-2023-11-25-오후-7.13.54.png","200-웹개발/react-query.html","200-웹개발/assets/pasted-image-20231114151038.png","200-웹개발/assets/pasted-image-20231114151038.html","200-웹개발/js)-math.html","200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png","200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html","site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/293fd13dbca5a3e450ef.woff2","site-lib/fonts/085cb93e613ba3d40d2b.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/6155340132a851f6089e.svg","site-lib/media/2308ab1944a6bfa5c5b8.svg","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.png","site-lib/styles/snippets.css","site-lib/styles/obsidian.css","site-lib/styles/theme.css","site-lib/styles/global-variable-styles.css","site-lib/styles/supported-plugins.css","site-lib/styles/main-styles.css"],"webpages":{"home.html":{"title":"home","icon":"","description":"this is home","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"home.html","pathToRoot":".","attachments":[],"createdTime":1756573499169,"modifiedTime":1756573506710,"sourceSize":12,"sourcePath":"home.md","exportPath":"home.html","showInTree":true,"treeOrder":903,"backlinks":[],"type":"markdown"},"99-settings/1-topics/📖-100-데이터-분석-&-ai.html":{"title":"📖 100 데이터 분석 & AI","icon":"","description":"데이터 분석과 인공지능 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 101 머신러닝\" href=\"99-settings/1-topics/📚-101-머신러닝.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 101 머신러닝</a>\n<br><a data-href=\"📚 102 딥러닝\" href=\"99-settings/1-topics/📚-102-딥러닝.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 102 딥러닝</a>\n<br><a data-href=\"📚 103 데이터 모델링\" href=\"99-settings/1-topics/📚-103-데이터-모델링.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 103 데이터 모델링</a>\n<br><a data-href=\"📚 104 통계 분석\" href=\"99-settings/1-topics/📚-104-통계-분석.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 104 통계 분석</a>\n<br><a data-href=\"📚 105 캐글\" href=\"99-settings/1-topics/📚-105-캐글.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 105 캐글</a>\n<br><a data-href=\"📚 106 LLM &amp; AI\" href=\"99-settings/1-topics/📚-106-llm-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 106 LLM &amp; AI</a>\n<br><a data-href=\"📚 107 인공신경망\" href=\"99-settings/1-topics/📚-107-인공신경망.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 107 인공신경망</a>\n<br><a data-href=\"📚 108 의사결정나무\" href=\"99-settings/1-topics/📚-108-의사결정나무.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 108 의사결정나무</a>\n<br><a data-href=\"📚 109 연관성 분석\" href=\"99-settings/1-topics/📚-109-연관성-분석.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 109 연관성 분석</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 100 데이터 분석 &amp; AI","level":1,"id":"📖_100_데이터_분석_&_AI_0"},{"heading":"📖 100 데이터 분석 &amp; AI","level":1,"id":"📖_100_데이터_분석_&_AI_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-101-머신러닝.html","99-settings/1-topics/📚-102-딥러닝.html","99-settings/1-topics/📚-103-데이터-모델링.html","99-settings/1-topics/📚-104-통계-분석.html","99-settings/1-topics/📚-105-캐글.html","99-settings/1-topics/📚-106-llm-&-ai.html","99-settings/1-topics/📚-107-인공신경망.html","99-settings/1-topics/📚-108-의사결정나무.html","99-settings/1-topics/📚-109-연관성-분석.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-100-데이터-분석-&-ai.html","pathToRoot":"../..","attachments":[],"createdTime":1756579218952,"modifiedTime":1757340459924,"sourceSize":393,"sourcePath":"99-Settings/1-Topics/📖 100 데이터 분석 & AI.md","exportPath":"99-settings/1-topics/📖-100-데이터-분석-&-ai.html","showInTree":true,"treeOrder":2,"backlinks":["99-settings/1-topics/📚-101-머신러닝.html","99-settings/1-topics/📚-102-딥러닝.html","99-settings/1-topics/📚-103-데이터-모델링.html","99-settings/1-topics/📚-104-통계-분석.html","99-settings/1-topics/📚-105-캐글.html","99-settings/1-topics/📚-106-llm-&-ai.html","99-settings/1-topics/📚-107-인공신경망.html","99-settings/1-topics/📚-108-의사결정나무.html","99-settings/1-topics/📚-109-연관성-분석.html"],"type":"markdown"},"99-settings/1-topics/📖-200-웹-개발.html":{"title":"📖 200 웹 개발","icon":"","description":"웹 개발 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 201 React\" href=\"99-settings/1-topics/📚-201-react.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 201 React</a>\n<br><a data-href=\"📚 202 Vue.js\" href=\"99-settings/1-topics/📚-202-vue.js.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 202 Vue.js</a>\n<br><a data-href=\"📚 203 Next.js\" href=\"99-settings/1-topics/📚-203-next.js.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 203 Next.js</a>\n<br><a data-href=\"📚 204 Node.js\" href=\"99-settings/1-topics/📚-204-node.js.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 204 Node.js</a>\n<br><a data-href=\"📚 205 웹팩 &amp; 빌드\" href=\"99-settings/1-topics/📚-205-웹팩-&amp;-빌드.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 205 웹팩 &amp; 빌드</a>\n<br><a data-href=\"📚 206 상태관리\" href=\"99-settings/1-topics/📚-206-상태관리.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 206 상태관리</a>\n<br><a data-href=\"📚 207 CSS &amp; 스타일링\" href=\"99-settings/1-topics/📚-207-css-&amp;-스타일링.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 207 CSS &amp; 스타일링</a>\n<br><a data-href=\"📚 208 웹 렌더링\" href=\"99-settings/1-topics/📚-208-웹-렌더링.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 208 웹 렌더링</a>\n<br><a data-href=\"📚 209 3D 웹\" href=\"99-settings/1-topics/📚-209-3d-웹.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 209 3D 웹</a>\n<br><a data-href=\"📚 210 Electron &amp; Tauri\" href=\"99-settings/1-topics/📚-210-electron-&amp;-tauri.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 210 Electron &amp; Tauri</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 200 웹 개발","level":1,"id":"📖_200_웹_개발_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-201-react.html","99-settings/1-topics/📚-202-vue.js.html","99-settings/1-topics/📚-203-next.js.html","99-settings/1-topics/📚-204-node.js.html","99-settings/1-topics/📚-205-웹팩-&-빌드.html","99-settings/1-topics/📚-206-상태관리.html","99-settings/1-topics/📚-207-css-&-스타일링.html","99-settings/1-topics/📚-208-웹-렌더링.html","99-settings/1-topics/📚-209-3d-웹.html","99-settings/1-topics/📚-210-electron-&-tauri.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-200-웹-개발.html","pathToRoot":"../..","attachments":[],"createdTime":1756579254926,"modifiedTime":1757340459925,"sourceSize":365,"sourcePath":"99-Settings/1-Topics/📖 200 웹 개발.md","exportPath":"99-settings/1-topics/📖-200-웹-개발.html","showInTree":true,"treeOrder":3,"backlinks":["99-settings/1-topics/📚-201-react.html","99-settings/1-topics/📚-202-vue.js.html","99-settings/1-topics/📚-203-next.js.html","99-settings/1-topics/📚-204-node.js.html","99-settings/1-topics/📚-205-웹팩-&-빌드.html","99-settings/1-topics/📚-206-상태관리.html","99-settings/1-topics/📚-207-css-&-스타일링.html","99-settings/1-topics/📚-208-웹-렌더링.html","99-settings/1-topics/📚-209-3d-웹.html","99-settings/1-topics/📚-210-electron-&-tauri.html"],"type":"markdown"},"99-settings/1-topics/📖-300-백엔드-개발.html":{"title":"📖 300 백엔드 개발","icon":"","description":"백엔드 개발 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 301 Spring\" href=\"99-settings/1-topics/📚-301-spring.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 301 Spring</a>\n<br><a data-href=\"📚 302 Django\" href=\"99-settings/1-topics/📚-302-django.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 302 Django</a>\n<br><a data-href=\"📚 303 FastAPI\" href=\"99-settings/1-topics/📚-303-fastapi.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 303 FastAPI</a>\n<br><a data-href=\"📚 304 Express.js\" href=\"99-settings/1-topics/📚-304-express.js.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 304 Express.js</a>\n<br><a data-href=\"📚 305 데이터베이스\" href=\"99-settings/1-topics/📚-305-데이터베이스.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 305 데이터베이스</a>\n<br><a data-href=\"📚 306 API 설계\" href=\"99-settings/1-topics/📚-306-api-설계.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 306 API 설계</a>\n<br><a data-href=\"📚 307 인증 &amp; 보안\" href=\"99-settings/1-topics/📚-307-인증-&amp;-보안.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 307 인증 &amp; 보안</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 300 백엔드 개발","level":1,"id":"📖_300_백엔드_개발_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-301-spring.html","99-settings/1-topics/📚-302-django.html","99-settings/1-topics/📚-303-fastapi.html","99-settings/1-topics/📚-304-express.js.html","99-settings/1-topics/📚-305-데이터베이스.html","99-settings/1-topics/📚-306-api-설계.html","99-settings/1-topics/📚-307-인증-&-보안.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-300-백엔드-개발.html","pathToRoot":"../..","attachments":[],"createdTime":1756579298665,"modifiedTime":1757340459924,"sourceSize":296,"sourcePath":"99-Settings/1-Topics/📖 300 백엔드 개발.md","exportPath":"99-settings/1-topics/📖-300-백엔드-개발.html","showInTree":true,"treeOrder":4,"backlinks":["99-settings/1-topics/📚-301-spring.html","99-settings/1-topics/📚-302-django.html","99-settings/1-topics/📚-303-fastapi.html","99-settings/1-topics/📚-304-express.js.html","99-settings/1-topics/📚-305-데이터베이스.html","99-settings/1-topics/📚-306-api-설계.html","99-settings/1-topics/📚-307-인증-&-보안.html"],"type":"markdown"},"99-settings/1-topics/📖-400-인프라-&-아키텍처.html":{"title":"📖 400 인프라 & 아키텍처","icon":"","description":"인프라 &amp; 아키텍처 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 401 Docker &amp; Kubernetes\" href=\"99-settings/1-topics/📚-401-docker-&amp;-kubernetes.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 401 Docker &amp; Kubernetes</a>\n<br><a data-href=\"📚 402 AWS &amp; 클라우드\" href=\"99-settings/1-topics/📚-402-aws-&amp;-클라우드.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 402 AWS &amp; 클라우드</a>\n<br><a data-href=\"📚 403 시스템 설계\" href=\"99-settings/1-topics/📚-403-시스템-설계.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 403 시스템 설계</a>\n<br><a data-href=\"📚 404 마이크로서비스\" href=\"99-settings/1-topics/📚-404-마이크로서비스.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 404 마이크로서비스</a>\n<br><a data-href=\"📚 405 모니터링 &amp; 로깅\" href=\"99-settings/1-topics/📚-405-모니터링-&amp;-로깅.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 405 모니터링 &amp; 로깅</a>\n<br><a data-href=\"📚 406 CI/CD\" href=\".html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 406 CI/CD</a>\n<br><a data-href=\"📚 407 네트워크 &amp; 보안\" href=\"99-settings/1-topics/📚-407-네트워크-&amp;-보안.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 407 네트워크 &amp; 보안</a>\n<br><a data-href=\"📚 408 스케일링\" href=\"99-settings/1-topics/📚-408-스케일링.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 408 스케일링</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 400 인프라 &amp; 아키텍처","level":1,"id":"📖_400_인프라_&_아키텍처_0"},{"heading":"📖 400 인프라 &amp; 아키텍처","level":1,"id":"📖_400_인프라_&_아키텍처_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-401-docker-&-kubernetes.html","99-settings/1-topics/📚-402-aws-&-클라우드.html","99-settings/1-topics/📚-403-시스템-설계.html","99-settings/1-topics/📚-404-마이크로서비스.html","99-settings/1-topics/📚-405-모니터링-&-로깅.html",".html","99-settings/1-topics/📚-407-네트워크-&-보안.html","99-settings/1-topics/📚-408-스케일링.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-400-인프라-&-아키텍처.html","pathToRoot":"../..","attachments":[],"createdTime":1756579338312,"modifiedTime":1757340457449,"sourceSize":389,"sourcePath":"99-Settings/1-Topics/📖 400 인프라 & 아키텍처.md","exportPath":"99-settings/1-topics/📖-400-인프라-&-아키텍처.html","showInTree":true,"treeOrder":5,"backlinks":["99-settings/1-topics/📚-401-docker-&-kubernetes.html","99-settings/1-topics/📚-402-aws-&-클라우드.html","99-settings/1-topics/📚-403-시스템-설계.html","99-settings/1-topics/📚-404-마이크로서비스.html","99-settings/1-topics/📚-405-모니터링-&-로깅.html","99-settings/1-topics/📚-406-ci-cd.html","99-settings/1-topics/📚-407-네트워크-&-보안.html","99-settings/1-topics/📚-408-스케일링.html"],"type":"markdown"},"99-settings/1-topics/📖-500-모바일-개발.html":{"title":"📖 500 모바일 개발","icon":"","description":"모바일 개발 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 501 Flutter\" href=\"99-settings/1-topics/📚-501-flutter.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 501 Flutter</a>\n<br><a data-href=\"📚 502 Android\" href=\"99-settings/1-topics/📚-502-android.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 502 Android</a>\n<br><a data-href=\"📚 503 Dart\" href=\"99-settings/1-topics/📚-503-dart.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 503 Dart</a>\n<br><a data-href=\"📚 504 Riverpod\" href=\"99-settings/1-topics/📚-504-riverpod.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 504 Riverpod</a>\n<br><a data-href=\"📚 505 상태관리\" href=\"99-settings/1-topics/📚-505-상태관리.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 505 상태관리</a>\n<br><a data-href=\"📚 506 네트워킹\" href=\"99-settings/1-topics/📚-506-네트워킹.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 506 네트워킹</a>\n<br><a data-href=\"📚 507 빌드 &amp; 배포\" href=\"99-settings/1-topics/📚-507-빌드-&amp;-배포.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 507 빌드 &amp; 배포</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 500 모바일 개발","level":1,"id":"📖_500_모바일_개발_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-501-flutter.html","99-settings/1-topics/📚-502-android.html","99-settings/1-topics/📚-503-dart.html","99-settings/1-topics/📚-504-riverpod.html","99-settings/1-topics/📚-505-상태관리.html","99-settings/1-topics/📚-506-네트워킹.html","99-settings/1-topics/📚-507-빌드-&-배포.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-500-모바일-개발.html","pathToRoot":"../..","attachments":[],"createdTime":1756579382845,"modifiedTime":1757340457447,"sourceSize":289,"sourcePath":"99-Settings/1-Topics/📖 500 모바일 개발.md","exportPath":"99-settings/1-topics/📖-500-모바일-개발.html","showInTree":true,"treeOrder":6,"backlinks":["99-settings/1-topics/📚-501-flutter.html","99-settings/1-topics/📚-502-android.html","99-settings/1-topics/📚-503-dart.html","99-settings/1-topics/📚-504-riverpod.html","99-settings/1-topics/📚-505-상태관리.html","99-settings/1-topics/📚-506-네트워킹.html","99-settings/1-topics/📚-507-빌드-&-배포.html"],"type":"markdown"},"99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html":{"title":"📖 600 알고리즘 & 코딩테스트","icon":"","description":"알고리즘 &amp; 코딩테스트 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 601 구현 &amp; 완전탐색\" href=\"99-settings/1-topics/📚-601-구현-&amp;-완전탐색.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 601 구현 &amp; 완전탐색</a>\n<br><a data-href=\"📚 602 그리디\" href=\"99-settings/1-topics/📚-602-그리디.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 602 그리디</a>\n<br><a data-href=\"📚 603 다이나믹프로그래밍\" href=\"99-settings/1-topics/📚-603-다이나믹프로그래밍.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 603 다이나믹프로그래밍</a>\n<br><a data-href=\"📚 604 최단경로\" href=\"99-settings/1-topics/📚-604-최단경로.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 604 최단경로</a>\n<br><a data-href=\"📚 605 비트연산 &amp; 비트마스킹\" href=\"99-settings/1-topics/📚-605-비트연산-&amp;-비트마스킹.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 605 비트연산 &amp; 비트마스킹</a>\n<br><a data-href=\"📚 606 세그먼트트리\" href=\"99-settings/1-topics/📚-606-세그먼트트리.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 606 세그먼트트리</a>\n<br><a data-href=\"📚 607 슬라이딩윈도우\" href=\"99-settings/1-topics/📚-607-슬라이딩윈도우.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 607 슬라이딩윈도우</a>\n<br><a data-href=\"📚 608 위상정렬\" href=\"99-settings/1-topics/📚-608-위상정렬.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 608 위상정렬</a>\n<br><a data-href=\"📚 609 유니온파인드\" href=\"99-settings/1-topics/📚-609-유니온파인드.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 609 유니온파인드</a>\n<br><a data-href=\"📚 610 이진탐색\" href=\"99-settings/1-topics/📚-610-이진탐색.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 610 이진탐색</a>\n<br><a data-href=\"📚 611 정렬\" href=\"99-settings/1-topics/📚-611-정렬.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 611 정렬</a>\n<br><a data-href=\"📚 612 최소신장트리\" href=\"99-settings/1-topics/📚-612-최소신장트리.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 612 최소신장트리</a>\n<br><a data-href=\"📚 613 BFS &amp; DFS\" href=\"99-settings/1-topics/📚-613-bfs-&amp;-dfs.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 613 BFS &amp; DFS</a>\n<br><a data-href=\"📚 614 그래프\" href=\"99-settings/1-topics/📚-614-그래프.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 614 그래프</a>\n<br><a data-href=\"📚 615 정렬알고리즘\" href=\"99-settings/1-topics/📚-615-정렬알고리즘.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 615 정렬알고리즘</a>\n<br><a data-href=\"📚 616 Python\" href=\"99-settings/1-topics/📚-616-python.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 616 Python</a>\n<br><a data-href=\"📚 617 Java\" href=\"99-settings/1-topics/📚-617-java.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 617 Java</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 600 알고리즘 &amp; 코딩테스트","level":1,"id":"📖_600_알고리즘_&_코딩테스트_0"},{"heading":"📖 600 알고리즘 &amp; 코딩테스트","level":1,"id":"📖_600_알고리즘_&_코딩테스트_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-601-구현-&-완전탐색.html","99-settings/1-topics/📚-602-그리디.html","99-settings/1-topics/📚-603-다이나믹프로그래밍.html","99-settings/1-topics/📚-604-최단경로.html","99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","99-settings/1-topics/📚-606-세그먼트트리.html","99-settings/1-topics/📚-607-슬라이딩윈도우.html","99-settings/1-topics/📚-608-위상정렬.html","99-settings/1-topics/📚-609-유니온파인드.html","99-settings/1-topics/📚-610-이진탐색.html","99-settings/1-topics/📚-611-정렬.html","99-settings/1-topics/📚-612-최소신장트리.html","99-settings/1-topics/📚-613-bfs-&-dfs.html","99-settings/1-topics/📚-614-그래프.html","99-settings/1-topics/📚-615-정렬알고리즘.html","99-settings/1-topics/📚-616-python.html","99-settings/1-topics/📚-617-java.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html","pathToRoot":"../..","attachments":[],"createdTime":1756579422754,"modifiedTime":1757345670353,"sourceSize":662,"sourcePath":"99-Settings/1-Topics/📖 600 알고리즘 & 코딩테스트.md","exportPath":"99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html","showInTree":true,"treeOrder":7,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📚-601-구현-&-완전탐색.html","99-settings/1-topics/📚-602-그리디.html","99-settings/1-topics/📚-603-다이나믹프로그래밍.html","99-settings/1-topics/📚-604-최단경로.html","99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","99-settings/1-topics/📚-606-세그먼트트리.html","99-settings/1-topics/📚-607-슬라이딩윈도우.html","99-settings/1-topics/📚-608-위상정렬.html","99-settings/1-topics/📚-609-유니온파인드.html","99-settings/1-topics/📚-610-이진탐색.html","99-settings/1-topics/📚-611-정렬.html","99-settings/1-topics/📚-612-최소신장트리.html","99-settings/1-topics/📚-613-bfs-&-dfs.html","99-settings/1-topics/📚-614-그래프.html","99-settings/1-topics/📚-615-정렬알고리즘.html","99-settings/1-topics/📚-616-python.html","99-settings/1-topics/📚-617-java.html"],"type":"markdown"},"99-settings/1-topics/📖-700-컴퓨터-과학.html":{"title":"📖 700 컴퓨터 과학","icon":"","description":"컴퓨터 과학 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📚 701 디자인패턴\" href=\"99-settings/1-topics/📚-701-디자인패턴.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 701 디자인패턴</a>\n<br><a data-href=\"📚 702 네트워크\" href=\"99-settings/1-topics/📚-702-네트워크.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 702 네트워크</a>\n<br><a data-href=\"📚 703 데이터베이스\" href=\"99-settings/1-topics/📚-703-데이터베이스.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 703 데이터베이스</a>\n<br><a data-href=\"📚 704 운영체제\" href=\"99-settings/1-topics/📚-704-운영체제.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 704 운영체제</a>\n<br><a data-href=\"📚 705 보안\" href=\"99-settings/1-topics/📚-705-보안.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 705 보안</a>\n<br><a data-href=\"📚 706 시스템 설계\" href=\"99-settings/1-topics/📚-706-시스템-설계.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📚 706 시스템 설계</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 700 컴퓨터 과학","level":1,"id":"📖_700_컴퓨터_과학_1"},{"heading":"하위 토픽","level":2,"id":"하위_토픽_0"}],"links":["99-settings/1-topics/📚-701-디자인패턴.html","99-settings/1-topics/📚-702-네트워크.html","99-settings/1-topics/📚-703-데이터베이스.html","99-settings/1-topics/📚-704-운영체제.html","99-settings/1-topics/📚-705-보안.html","99-settings/1-topics/📚-706-시스템-설계.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-700-컴퓨터-과학.html","pathToRoot":"../..","attachments":[],"createdTime":1756579505212,"modifiedTime":1757340457449,"sourceSize":287,"sourcePath":"99-Settings/1-Topics/📖 700 컴퓨터 과학.md","exportPath":"99-settings/1-topics/📖-700-컴퓨터-과학.html","showInTree":true,"treeOrder":8,"backlinks":["99-settings/1-topics/📚-701-디자인패턴.html","99-settings/1-topics/📚-702-네트워크.html","99-settings/1-topics/📚-703-데이터베이스.html","99-settings/1-topics/📚-704-운영체제.html","99-settings/1-topics/📚-705-보안.html","99-settings/1-topics/📚-706-시스템-설계.html"],"type":"markdown"},"99-settings/1-topics/📖-800-프로젝트.html":{"title":"📖 800 프로젝트","icon":"","description":"진행한 프로젝트 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 800 프로젝트","level":1,"id":"📖_800_프로젝트_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-800-프로젝트.html","pathToRoot":"../..","attachments":[],"createdTime":1757342228257,"modifiedTime":1757342240987,"sourceSize":62,"sourcePath":"99-Settings/1-Topics/📖 800 프로젝트.md","exportPath":"99-settings/1-topics/📖-800-프로젝트.html","showInTree":true,"treeOrder":9,"backlinks":["99-settings/1-topics/📚-801-다-맡게팅.html"],"type":"markdown"},"99-settings/1-topics/📖-900-기타.html":{"title":"📖 900 기타","icon":"","description":"어디에도 분류되지 않는 기타 토픽들","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📖 800 기타","level":1,"id":"📖_800_기타_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📖-900-기타.html","pathToRoot":"../..","attachments":[],"createdTime":1757341960279,"modifiedTime":1757342000625,"sourceSize":69,"sourcePath":"99-Settings/1-Topics/📖 900 기타.md","exportPath":"99-settings/1-topics/📖-900-기타.html","showInTree":true,"treeOrder":10,"backlinks":[],"type":"markdown"},"99-settings/1-topics/📚-101-머신러닝.html":{"title":"📚 101 머신러닝","icon":"","description":"머신러닝 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 101 머신러닝","level":1,"id":"📚_101_머신러닝_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-101-머신러닝.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446876,"modifiedTime":1757340457473,"sourceSize":141,"sourcePath":"99-Settings/1-Topics/📚 101 머신러닝.md","exportPath":"99-settings/1-topics/📚-101-머신러닝.html","showInTree":true,"treeOrder":11,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-102-딥러닝.html":{"title":"📚 102 딥러닝","icon":"","description":"딥러닝 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 102 딥러닝","level":1,"id":"📚_102_딥러닝_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-102-딥러닝.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446833,"modifiedTime":1757340459925,"sourceSize":135,"sourcePath":"99-Settings/1-Topics/📚 102 딥러닝.md","exportPath":"99-settings/1-topics/📚-102-딥러닝.html","showInTree":true,"treeOrder":12,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-103-데이터-모델링.html":{"title":"📚 103 데이터 모델링","icon":"","description":"데이터 모델링 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 103 데이터 모델링","level":1,"id":"📚_103_데이터_모델링_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-103-데이터-모델링.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446899,"modifiedTime":1757340446900,"sourceSize":156,"sourcePath":"99-Settings/1-Topics/📚 103 데이터 모델링.md","exportPath":"99-settings/1-topics/📚-103-데이터-모델링.html","showInTree":true,"treeOrder":13,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-104-통계-분석.html":{"title":"📚 104 통계 분석","icon":"","description":"통계 분석 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 104 통계 분석","level":1,"id":"📚_104_통계_분석_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-104-통계-분석.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446897,"modifiedTime":1757340446897,"sourceSize":144,"sourcePath":"99-Settings/1-Topics/📚 104 통계 분석.md","exportPath":"99-settings/1-topics/📚-104-통계-분석.html","showInTree":true,"treeOrder":14,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-105-캐글.html":{"title":"📚 105 캐글","icon":"","description":"캐글 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 105 캐글","level":1,"id":"📚_105_캐글_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-105-캐글.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446894,"modifiedTime":1757340446894,"sourceSize":130,"sourcePath":"99-Settings/1-Topics/📚 105 캐글.md","exportPath":"99-settings/1-topics/📚-105-캐글.html","showInTree":true,"treeOrder":15,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-106-llm-&-ai.html":{"title":"📚 106 LLM & AI","icon":"","description":"LLM &amp; AI 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 106 LLM &amp; AI","level":1,"id":"📚_106_LLM_&_AI_0"},{"heading":"📚 106 LLM &amp; AI","level":1,"id":"📚_106_LLM_&_AI_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-106-llm-&-ai.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446905,"modifiedTime":1757340446905,"sourceSize":134,"sourcePath":"99-Settings/1-Topics/📚 106 LLM & AI.md","exportPath":"99-settings/1-topics/📚-106-llm-&-ai.html","showInTree":true,"treeOrder":16,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-107-인공신경망.html":{"title":"📚 107 인공신경망","icon":"","description":"인공신경망 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 107 인공신경망","level":1,"id":"📚_107_인공신경망_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-107-인공신경망.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446836,"modifiedTime":1757340446836,"sourceSize":148,"sourcePath":"99-Settings/1-Topics/📚 107 인공신경망.md","exportPath":"99-settings/1-topics/📚-107-인공신경망.html","showInTree":true,"treeOrder":17,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-108-의사결정나무.html":{"title":"📚 108 의사결정나무","icon":"","description":"의사결정나무 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 108 의사결정나무","level":1,"id":"📚_108_의사결정나무_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-108-의사결정나무.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446977,"modifiedTime":1757340446977,"sourceSize":154,"sourcePath":"99-Settings/1-Topics/📚 108 의사결정나무.md","exportPath":"99-settings/1-topics/📚-108-의사결정나무.html","showInTree":true,"treeOrder":18,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-109-연관성-분석.html":{"title":"📚 109 연관성 분석","icon":"","description":"연관성 분석 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 100 데이터 분석 &amp; AI\" href=\"99-settings/1-topics/📖-100-데이터-분석-&amp;-ai.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 100 데이터 분석 &amp; AI</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 109 연관성 분석","level":1,"id":"📚_109_연관성_분석_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-109-연관성-분석.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446973,"modifiedTime":1757340446973,"sourceSize":150,"sourcePath":"99-Settings/1-Topics/📚 109 연관성 분석.md","exportPath":"99-settings/1-topics/📚-109-연관성-분석.html","showInTree":true,"treeOrder":19,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown"},"99-settings/1-topics/📚-201-react.html":{"title":"📚 201 React","icon":"","description":"React 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 201 React","level":1,"id":"📚_201_React_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-201-react.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446966,"modifiedTime":1757340457449,"sourceSize":116,"sourcePath":"99-Settings/1-Topics/📚 201 React.md","exportPath":"99-settings/1-topics/📚-201-react.html","showInTree":true,"treeOrder":20,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-202-vue.js.html":{"title":"📚 202 Vue.js","icon":"","description":"Vue.js 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 202 Vue.js","level":1,"id":"📚_202_Vue.js_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-202-vue.js.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446843,"modifiedTime":1757340457485,"sourceSize":118,"sourcePath":"99-Settings/1-Topics/📚 202 Vue.js.md","exportPath":"99-settings/1-topics/📚-202-vue.js.html","showInTree":true,"treeOrder":21,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-203-next.js.html":{"title":"📚 203 Next.js","icon":"","description":"Next.js 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 203 Next.js","level":1,"id":"📚_203_Next.js_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-203-next.js.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446969,"modifiedTime":1757340446970,"sourceSize":121,"sourcePath":"99-Settings/1-Topics/📚 203 Next.js.md","exportPath":"99-settings/1-topics/📚-203-next.js.html","showInTree":true,"treeOrder":22,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-204-node.js.html":{"title":"📚 204 Node.js","icon":"","description":"Node.js 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 204 Node.js","level":1,"id":"📚_204_Node.js_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-204-node.js.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446873,"modifiedTime":1757340446873,"sourceSize":121,"sourcePath":"99-Settings/1-Topics/📚 204 Node.js.md","exportPath":"99-settings/1-topics/📚-204-node.js.html","showInTree":true,"treeOrder":23,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-205-웹팩-&-빌드.html":{"title":"📚 205 웹팩 & 빌드","icon":"","description":"웹팩 &amp; 빌드 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 205 웹팩 &amp; 빌드","level":1,"id":"📚_205_웹팩_&_빌드_0"},{"heading":"📚 205 웹팩 &amp; 빌드","level":1,"id":"📚_205_웹팩_&_빌드_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-205-웹팩-&-빌드.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446921,"modifiedTime":1757340446922,"sourceSize":137,"sourcePath":"99-Settings/1-Topics/📚 205 웹팩 & 빌드.md","exportPath":"99-settings/1-topics/📚-205-웹팩-&-빌드.html","showInTree":true,"treeOrder":24,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-206-상태관리.html":{"title":"📚 206 상태관리","icon":"","description":"상태관리 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 206 상태관리","level":1,"id":"📚_206_상태관리_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-206-상태관리.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446855,"modifiedTime":1757340446855,"sourceSize":131,"sourcePath":"99-Settings/1-Topics/📚 206 상태관리.md","exportPath":"99-settings/1-topics/📚-206-상태관리.html","showInTree":true,"treeOrder":25,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-207-css-&-스타일링.html":{"title":"📚 207 CSS & 스타일링","icon":"","description":"CSS &amp; 스타일링 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 207 CSS &amp; 스타일링","level":1,"id":"📚_207_CSS_&_스타일링_0"},{"heading":"📚 207 CSS &amp; 스타일링","level":1,"id":"📚_207_CSS_&_스타일링_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-207-css-&-스타일링.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446951,"modifiedTime":1757340446951,"sourceSize":143,"sourcePath":"99-Settings/1-Topics/📚 207 CSS & 스타일링.md","exportPath":"99-settings/1-topics/📚-207-css-&-스타일링.html","showInTree":true,"treeOrder":26,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-208-웹-렌더링.html":{"title":"📚 208 웹 렌더링","icon":"","description":"웹 렌더링 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 208 웹 렌더링","level":1,"id":"📚_208_웹_렌더링_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-208-웹-렌더링.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446956,"modifiedTime":1757340446956,"sourceSize":133,"sourcePath":"99-Settings/1-Topics/📚 208 웹 렌더링.md","exportPath":"99-settings/1-topics/📚-208-웹-렌더링.html","showInTree":true,"treeOrder":27,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-209-3d-웹.html":{"title":"📚 209 3D 웹","icon":"","description":"3D 웹 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 209 3D 웹","level":1,"id":"📚_209_3D_웹_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-209-3d-웹.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446852,"modifiedTime":1757340446852,"sourceSize":119,"sourcePath":"99-Settings/1-Topics/📚 209 3D 웹.md","exportPath":"99-settings/1-topics/📚-209-3d-웹.html","showInTree":true,"treeOrder":28,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-210-electron-&-tauri.html":{"title":"📚 210 Electron & Tauri","icon":"","description":"Electron &amp; Tauri 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 200 웹 개발\" href=\"99-settings/1-topics/📖-200-웹-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 200 웹 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 210 Electron &amp; Tauri","level":1,"id":"📚_210_Electron_&_Tauri_0"},{"heading":"📚 210 Electron &amp; Tauri","level":1,"id":"📚_210_Electron_&_Tauri_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-200-웹-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-210-electron-&-tauri.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446823,"modifiedTime":1757340446824,"sourceSize":139,"sourcePath":"99-Settings/1-Topics/📚 210 Electron & Tauri.md","exportPath":"99-settings/1-topics/📚-210-electron-&-tauri.html","showInTree":true,"treeOrder":29,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-301-spring.html":{"title":"📚 301 Spring","icon":"","description":"Spring 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 301 Spring","level":1,"id":"📚_301_Spring_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-301-spring.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446925,"modifiedTime":1757340457481,"sourceSize":124,"sourcePath":"99-Settings/1-Topics/📚 301 Spring.md","exportPath":"99-settings/1-topics/📚-301-spring.html","showInTree":true,"treeOrder":30,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-302-django.html":{"title":"📚 302 Django","icon":"","description":"Django 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 302 Django","level":1,"id":"📚_302_Django_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-302-django.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446910,"modifiedTime":1757340457481,"sourceSize":124,"sourcePath":"99-Settings/1-Topics/📚 302 Django.md","exportPath":"99-settings/1-topics/📚-302-django.html","showInTree":true,"treeOrder":31,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-303-fastapi.html":{"title":"📚 303 FastAPI","icon":"","description":"FastAPI 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 303 FastAPI","level":1,"id":"📚_303_FastAPI_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-303-fastapi.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446865,"modifiedTime":1757340446865,"sourceSize":127,"sourcePath":"99-Settings/1-Topics/📚 303 FastAPI.md","exportPath":"99-settings/1-topics/📚-303-fastapi.html","showInTree":true,"treeOrder":32,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-304-express.js.html":{"title":"📚 304 Express.js","icon":"","description":"Express.js 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 304 Express.js","level":1,"id":"📚_304_Express.js_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-304-express.js.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446947,"modifiedTime":1757340446947,"sourceSize":133,"sourcePath":"99-Settings/1-Topics/📚 304 Express.js.md","exportPath":"99-settings/1-topics/📚-304-express.js.html","showInTree":true,"treeOrder":33,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-305-데이터베이스.html":{"title":"📚 305 데이터베이스","icon":"","description":"데이터베이스 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 305 데이터베이스","level":1,"id":"📚_305_데이터베이스_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-305-데이터베이스.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446936,"modifiedTime":1757340446936,"sourceSize":149,"sourcePath":"99-Settings/1-Topics/📚 305 데이터베이스.md","exportPath":"99-settings/1-topics/📚-305-데이터베이스.html","showInTree":true,"treeOrder":34,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-306-api-설계.html":{"title":"📚 306 API 설계","icon":"","description":"API 설계 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 306 API 설계","level":1,"id":"📚_306_API_설계_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-306-api-설계.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446821,"modifiedTime":1757340446821,"sourceSize":133,"sourcePath":"99-Settings/1-Topics/📚 306 API 설계.md","exportPath":"99-settings/1-topics/📚-306-api-설계.html","showInTree":true,"treeOrder":35,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown"},"99-settings/1-topics/📚-307-인증-&-보안.html":{"title":"📚 307 인증 & 보안","icon":"","description":"인증 &amp; 보안 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 300 백엔드 개발\" href=\"99-settings/1-topics/📖-300-백엔드-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 300 백엔드 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 307 인증 &amp; 보안","level":1,"id":"📚_307_인증_&_보안_0"},{"heading":"📚 307 인증 &amp; 보안","level":1,"id":"📚_307_인증_&_보안_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-300-백엔드-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-307-인증-&-보안.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446814,"modifiedTime":1757340446814,"sourceSize":143,"sourcePath":"99-Settings/1-Topics/📚 307 인증 & 보안.md","exportPath":"99-settings/1-topics/📚-307-인증-&-보안.html","showInTree":true,"treeOrder":36,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-401-docker-&-kubernetes.html":{"title":"📚 401 Docker & Kubernetes","icon":"","description":"Docker &amp; Kubernetes 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 401 Docker &amp; Kubernetes","level":1,"id":"📚_401_Docker_&_Kubernetes_0"},{"heading":"📚 401 Docker &amp; Kubernetes","level":1,"id":"📚_401_Docker_&_Kubernetes_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-401-docker-&-kubernetes.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446944,"modifiedTime":1757340457488,"sourceSize":158,"sourcePath":"99-Settings/1-Topics/📚 401 Docker & Kubernetes.md","exportPath":"99-settings/1-topics/📚-401-docker-&-kubernetes.html","showInTree":true,"treeOrder":37,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown"},"99-settings/1-topics/📚-402-aws-&-클라우드.html":{"title":"📚 402 AWS & 클라우드","icon":"","description":"AWS &amp; 클라우드 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 402 AWS &amp; 클라우드","level":1,"id":"📚_402_AWS_&_클라우드_0"},{"heading":"📚 402 AWS &amp; 클라우드","level":1,"id":"📚_402_AWS_&_클라우드_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-402-aws-&-클라우드.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446959,"modifiedTime":1757340446959,"sourceSize":157,"sourcePath":"99-Settings/1-Topics/📚 402 AWS & 클라우드.md","exportPath":"99-settings/1-topics/📚-402-aws-&-클라우드.html","showInTree":true,"treeOrder":38,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown"},"99-settings/1-topics/📚-403-시스템-설계.html":{"title":"📚 403 시스템 설계","icon":"","description":"시스템 설계 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 403 시스템 설계","level":1,"id":"📚_403_시스템_설계_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-403-시스템-설계.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446817,"modifiedTime":1757340446817,"sourceSize":153,"sourcePath":"99-Settings/1-Topics/📚 403 시스템 설계.md","exportPath":"99-settings/1-topics/📚-403-시스템-설계.html","showInTree":true,"treeOrder":39,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown"},"99-settings/1-topics/📚-404-마이크로서비스.html":{"title":"📚 404 마이크로서비스","icon":"","description":"마이크로서비스 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 404 마이크로서비스","level":1,"id":"📚_404_마이크로서비스_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-404-마이크로서비스.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446929,"modifiedTime":1757340446929,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 404 마이크로서비스.md","exportPath":"99-settings/1-topics/📚-404-마이크로서비스.html","showInTree":true,"treeOrder":40,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown"},"99-settings/1-topics/📚-405-모니터링-&-로깅.html":{"title":"📚 405 모니터링 & 로깅","icon":"","description":"모니터링 &amp; 로깅 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 405 모니터링 &amp; 로깅","level":1,"id":"📚_405_모니터링_&_로깅_0"},{"heading":"📚 405 모니터링 &amp; 로깅","level":1,"id":"📚_405_모니터링_&_로깅_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-405-모니터링-&-로깅.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446953,"modifiedTime":1757340446954,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 405 모니터링 & 로깅.md","exportPath":"99-settings/1-topics/📚-405-모니터링-&-로깅.html","showInTree":true,"treeOrder":41,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown"},"99-settings/1-topics/📚-406-ci-cd.html":{"title":"📚 406 CI-CD","icon":"","description":"CI/CD 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 406 CI/CD","level":1,"id":"📚_406_CI/CD_0"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-406-ci-cd.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446809,"modifiedTime":1757340446809,"sourceSize":131,"sourcePath":"99-Settings/1-Topics/📚 406 CI-CD.md","exportPath":"99-settings/1-topics/📚-406-ci-cd.html","showInTree":true,"treeOrder":42,"backlinks":[],"type":"markdown"},"99-settings/1-topics/📚-407-네트워크-&-보안.html":{"title":"📚 407 네트워크 & 보안","icon":"","description":"네트워크 &amp; 보안 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 407 네트워크 &amp; 보안","level":1,"id":"📚_407_네트워크_&_보안_0"},{"heading":"📚 407 네트워크 &amp; 보안","level":1,"id":"📚_407_네트워크_&_보안_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-407-네트워크-&-보안.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446964,"modifiedTime":1757340446964,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 407 네트워크 & 보안.md","exportPath":"99-settings/1-topics/📚-407-네트워크-&-보안.html","showInTree":true,"treeOrder":43,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown"},"99-settings/1-topics/📚-408-스케일링.html":{"title":"📚 408 스케일링","icon":"","description":"스케일링 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 400 인프라 &amp; 아키텍처\" href=\"99-settings/1-topics/📖-400-인프라-&amp;-아키텍처.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 400 인프라 &amp; 아키텍처</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 408 스케일링","level":1,"id":"📚_408_스케일링_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-408-스케일링.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446933,"modifiedTime":1757340446933,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 408 스케일링.md","exportPath":"99-settings/1-topics/📚-408-스케일링.html","showInTree":true,"treeOrder":44,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown"},"99-settings/1-topics/📚-501-flutter.html":{"title":"📚 501 Flutter","icon":"","description":"Flutter 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 501 Flutter","level":1,"id":"📚_501_Flutter_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-501-flutter.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446883,"modifiedTime":1757340457485,"sourceSize":126,"sourcePath":"99-Settings/1-Topics/📚 501 Flutter.md","exportPath":"99-settings/1-topics/📚-501-flutter.html","showInTree":true,"treeOrder":45,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-502-android.html":{"title":"📚 502 Android","icon":"","description":"Android 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 502 Android","level":1,"id":"📚_502_Android_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-502-android.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446826,"modifiedTime":1757340446826,"sourceSize":127,"sourcePath":"99-Settings/1-Topics/📚 502 Android.md","exportPath":"99-settings/1-topics/📚-502-android.html","showInTree":true,"treeOrder":46,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-503-dart.html":{"title":"📚 503 Dart","icon":"","description":"Dart 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 503 Dart","level":1,"id":"📚_503_Dart_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-503-dart.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446862,"modifiedTime":1757340446862,"sourceSize":121,"sourcePath":"99-Settings/1-Topics/📚 503 Dart.md","exportPath":"99-settings/1-topics/📚-503-dart.html","showInTree":true,"treeOrder":47,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-504-riverpod.html":{"title":"📚 504 Riverpod","icon":"","description":"Riverpod 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 504 Riverpod","level":1,"id":"📚_504_Riverpod_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-504-riverpod.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446812,"modifiedTime":1757340446812,"sourceSize":129,"sourcePath":"99-Settings/1-Topics/📚 504 Riverpod.md","exportPath":"99-settings/1-topics/📚-504-riverpod.html","showInTree":true,"treeOrder":48,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-505-상태관리.html":{"title":"📚 505 상태관리","icon":"","description":"모바일 상태관리 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 505 상태관리","level":1,"id":"📚_505_상태관리_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-505-상태관리.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446850,"modifiedTime":1757340446850,"sourceSize":147,"sourcePath":"99-Settings/1-Topics/📚 505 상태관리.md","exportPath":"99-settings/1-topics/📚-505-상태관리.html","showInTree":true,"treeOrder":49,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-506-네트워킹.html":{"title":"📚 506 네트워킹","icon":"","description":"모바일 네트워킹 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 506 네트워킹","level":1,"id":"📚_506_네트워킹_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-506-네트워킹.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446867,"modifiedTime":1757340446867,"sourceSize":147,"sourcePath":"99-Settings/1-Topics/📚 506 네트워킹.md","exportPath":"99-settings/1-topics/📚-506-네트워킹.html","showInTree":true,"treeOrder":50,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-507-빌드-&-배포.html":{"title":"📚 507 빌드 & 배포","icon":"","description":"모바일 빌드 &amp; 배포 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 500 모바일 개발\" href=\"99-settings/1-topics/📖-500-모바일-개발.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 500 모바일 개발</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 507 빌드 &amp; 배포","level":1,"id":"📚_507_빌드_&_배포_0"},{"heading":"📚 507 빌드 &amp; 배포","level":1,"id":"📚_507_빌드_&_배포_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-500-모바일-개발.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-507-빌드-&-배포.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446838,"modifiedTime":1757340446839,"sourceSize":153,"sourcePath":"99-Settings/1-Topics/📚 507 빌드 & 배포.md","exportPath":"99-settings/1-topics/📚-507-빌드-&-배포.html","showInTree":true,"treeOrder":51,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown"},"99-settings/1-topics/📚-601-구현-&-완전탐색.html":{"title":"📚 601 구현 & 완전탐색","icon":"","description":"구현 &amp; 완전탐색 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 601 구현 &amp; 완전탐색","level":1,"id":"📚_601_구현_&_완전탐색_0"},{"heading":"📚 601 구현 &amp; 완전탐색","level":1,"id":"📚_601_구현_&_완전탐색_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-601-구현-&-완전탐색.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446831,"modifiedTime":1757340446831,"sourceSize":169,"sourcePath":"99-Settings/1-Topics/📚 601 구현 & 완전탐색.md","exportPath":"99-settings/1-topics/📚-601-구현-&-완전탐색.html","showInTree":true,"treeOrder":52,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-602-그리디.html":{"title":"📚 602 그리디","icon":"","description":"그리디 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 602 그리디","level":1,"id":"📚_602_그리디_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-602-그리디.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446961,"modifiedTime":1757340446961,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 602 그리디.md","exportPath":"99-settings/1-topics/📚-602-그리디.html","showInTree":true,"treeOrder":53,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/theory/그리디.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-603-다이나믹프로그래밍.html":{"title":"📚 603 다이나믹프로그래밍","icon":"","description":"다이나믹프로그래밍 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 603 다이나믹프로그래밍","level":1,"id":"📚_603_다이나믹프로그래밍_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-603-다이나믹프로그래밍.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446907,"modifiedTime":1757340446908,"sourceSize":181,"sourcePath":"99-Settings/1-Topics/📚 603 다이나믹프로그래밍.md","exportPath":"99-settings/1-topics/📚-603-다이나믹프로그래밍.html","showInTree":true,"treeOrder":54,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-604-최단경로.html":{"title":"📚 604 최단경로","icon":"","description":"최단경로 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 604 최단경로","level":1,"id":"📚_604_최단경로_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-604-최단경로.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446859,"modifiedTime":1757340446859,"sourceSize":151,"sourcePath":"99-Settings/1-Topics/📚 604 최단경로.md","exportPath":"99-settings/1-topics/📚-604-최단경로.html","showInTree":true,"treeOrder":55,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html":{"title":"📚 605 비트연산 & 비트마스킹","icon":"","description":"비트연산 &amp; 비트마스킹 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 605 비트연산 &amp; 비트마스킹","level":1,"id":"📚_605_비트연산_&_비트마스킹_0"},{"heading":"📚 605 비트연산 &amp; 비트마스킹","level":1,"id":"📚_605_비트연산_&_비트마스킹_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446840,"modifiedTime":1757340446841,"sourceSize":187,"sourcePath":"99-Settings/1-Topics/📚 605 비트연산 & 비트마스킹.md","exportPath":"99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","showInTree":true,"treeOrder":56,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-606-세그먼트트리.html":{"title":"📚 606 세그먼트트리","icon":"","description":"세그먼트트리 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 606 세그먼트트리","level":1,"id":"📚_606_세그먼트트리_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-606-세그먼트트리.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446848,"modifiedTime":1757340446848,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 606 세그먼트트리.md","exportPath":"99-settings/1-topics/📚-606-세그먼트트리.html","showInTree":true,"treeOrder":57,"backlinks":["600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-607-슬라이딩윈도우.html":{"title":"📚 607 슬라이딩윈도우","icon":"","description":"슬라이딩윈도우 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 607 슬라이딩윈도우","level":1,"id":"📚_607_슬라이딩윈도우_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-607-슬라이딩윈도우.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446880,"modifiedTime":1757340446880,"sourceSize":169,"sourcePath":"99-Settings/1-Topics/📚 607 슬라이딩윈도우.md","exportPath":"99-settings/1-topics/📚-607-슬라이딩윈도우.html","showInTree":true,"treeOrder":58,"backlinks":["600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-608-위상정렬.html":{"title":"📚 608 위상정렬","icon":"","description":"위상정렬 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 608 위상정렬","level":1,"id":"📚_608_위상정렬_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-608-위상정렬.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446891,"modifiedTime":1757340446891,"sourceSize":151,"sourcePath":"99-Settings/1-Topics/📚 608 위상정렬.md","exportPath":"99-settings/1-topics/📚-608-위상정렬.html","showInTree":true,"treeOrder":59,"backlinks":["600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-609-유니온파인드.html":{"title":"📚 609 유니온파인드","icon":"","description":"유니온파인드 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 609 유니온파인드","level":1,"id":"📚_609_유니온파인드_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-609-유니온파인드.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446857,"modifiedTime":1757340446857,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 609 유니온파인드.md","exportPath":"99-settings/1-topics/📚-609-유니온파인드.html","showInTree":true,"treeOrder":60,"backlinks":["600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-610-이진탐색.html":{"title":"📚 610 이진탐색","icon":"","description":"이진탐색 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 610 이진탐색","level":1,"id":"📚_610_이진탐색_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-610-이진탐색.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446902,"modifiedTime":1757340446902,"sourceSize":151,"sourcePath":"99-Settings/1-Topics/📚 610 이진탐색.md","exportPath":"99-settings/1-topics/📚-610-이진탐색.html","showInTree":true,"treeOrder":61,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-611-정렬.html":{"title":"📚 611 정렬","icon":"","description":"정렬 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 611 정렬","level":1,"id":"📚_611_정렬_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-611-정렬.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446912,"modifiedTime":1757340446913,"sourceSize":139,"sourcePath":"99-Settings/1-Topics/📚 611 정렬.md","exportPath":"99-settings/1-topics/📚-611-정렬.html","showInTree":true,"treeOrder":62,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/theory/정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-612-최소신장트리.html":{"title":"📚 612 최소신장트리","icon":"","description":"최소신장트리 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 612 최소신장트리","level":1,"id":"📚_612_최소신장트리_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-612-최소신장트리.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446915,"modifiedTime":1757340446915,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 612 최소신장트리.md","exportPath":"99-settings/1-topics/📚-612-최소신장트리.html","showInTree":true,"treeOrder":63,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-613-bfs-&-dfs.html":{"title":"📚 613 BFS & DFS","icon":"","description":"BFS &amp; DFS 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 613 BFS &amp; DFS","level":1,"id":"📚_613_BFS_&_DFS_0"},{"heading":"📚 613 BFS &amp; DFS","level":1,"id":"📚_613_BFS_&_DFS_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-613-bfs-&-dfs.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446807,"modifiedTime":1757340446807,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 613 BFS & DFS.md","exportPath":"99-settings/1-topics/📚-613-bfs-&-dfs.html","showInTree":true,"treeOrder":64,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-614-그래프.html":{"title":"📚 614 그래프","icon":"","description":"그래프 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 614 그래프","level":1,"id":"📚_614_그래프_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-614-그래프.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446845,"modifiedTime":1757340446845,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 614 그래프.md","exportPath":"99-settings/1-topics/📚-614-그래프.html","showInTree":true,"treeOrder":65,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-615-정렬알고리즘.html":{"title":"📚 615 정렬알고리즘","icon":"","description":"계수정렬, 위상정렬 등 일반적인 정렬 알고리즘 관련 내용\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 615 정렬알고리즘","level":1,"id":"📚_615_정렬알고리즘_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-615-정렬알고리즘.html","pathToRoot":"../..","attachments":[],"createdTime":1757345585891,"modifiedTime":1757345670353,"sourceSize":173,"sourcePath":"99-Settings/1-Topics/📚 615 정렬알고리즘.md","exportPath":"99-settings/1-topics/📚-615-정렬알고리즘.html","showInTree":true,"treeOrder":66,"backlinks":["600-알고리즘-&-코딩테스트/theory/정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-616-python.html":{"title":"📚 616 Python","icon":"","description":"Python 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 615 Python","level":1,"id":"📚_615_Python_0"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-616-python.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446941,"modifiedTime":1757340446941,"sourceSize":139,"sourcePath":"99-Settings/1-Topics/📚 616 Python.md","exportPath":"99-settings/1-topics/📚-616-python.html","showInTree":true,"treeOrder":67,"backlinks":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-617-java.html":{"title":"📚 617 Java","icon":"","description":"Java 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 600 알고리즘 &amp; 코딩테스트\" href=\"99-settings/1-topics/📖-600-알고리즘-&amp;-코딩테스트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 600 알고리즘 &amp; 코딩테스트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 616 Java","level":1,"id":"📚_616_Java_0"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-617-java.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446828,"modifiedTime":1757340446828,"sourceSize":135,"sourcePath":"99-Settings/1-Topics/📚 617 Java.md","exportPath":"99-settings/1-topics/📚-617-java.html","showInTree":true,"treeOrder":68,"backlinks":["600-알고리즘-&-코딩테스트/problem/kt_누적합.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown"},"99-settings/1-topics/📚-701-디자인패턴.html":{"title":"📚 701 디자인패턴","icon":"","description":"디자인패턴 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 700 컴퓨터 과학\" href=\"99-settings/1-topics/📖-700-컴퓨터-과학.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 700 컴퓨터 과학</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 701 디자인패턴","level":1,"id":"📚_701_디자인패턴_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-701-디자인패턴.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446888,"modifiedTime":1757340446888,"sourceSize":143,"sourcePath":"99-Settings/1-Topics/📚 701 디자인패턴.md","exportPath":"99-settings/1-topics/📚-701-디자인패턴.html","showInTree":true,"treeOrder":69,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown"},"99-settings/1-topics/📚-702-네트워크.html":{"title":"📚 702 네트워크","icon":"","description":"네트워크 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 700 컴퓨터 과학\" href=\"99-settings/1-topics/📖-700-컴퓨터-과학.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 700 컴퓨터 과학</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 702 네트워크","level":1,"id":"📚_702_네트워크_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-702-네트워크.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446939,"modifiedTime":1757340446939,"sourceSize":137,"sourcePath":"99-Settings/1-Topics/📚 702 네트워크.md","exportPath":"99-settings/1-topics/📚-702-네트워크.html","showInTree":true,"treeOrder":70,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown"},"99-settings/1-topics/📚-703-데이터베이스.html":{"title":"📚 703 데이터베이스","icon":"","description":"데이터베이스 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 700 컴퓨터 과학\" href=\"99-settings/1-topics/📖-700-컴퓨터-과학.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 700 컴퓨터 과학</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 703 데이터베이스","level":1,"id":"📚_703_데이터베이스_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-703-데이터베이스.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446918,"modifiedTime":1757340446918,"sourceSize":149,"sourcePath":"99-Settings/1-Topics/📚 703 데이터베이스.md","exportPath":"99-settings/1-topics/📚-703-데이터베이스.html","showInTree":true,"treeOrder":71,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown"},"99-settings/1-topics/📚-704-운영체제.html":{"title":"📚 704 운영체제","icon":"","description":"운영체제 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 700 컴퓨터 과학\" href=\"99-settings/1-topics/📖-700-컴퓨터-과학.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 700 컴퓨터 과학</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 704 운영체제","level":1,"id":"📚_704_운영체제_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-704-운영체제.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446804,"modifiedTime":1757340446804,"sourceSize":137,"sourcePath":"99-Settings/1-Topics/📚 704 운영체제.md","exportPath":"99-settings/1-topics/📚-704-운영체제.html","showInTree":true,"treeOrder":72,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown"},"99-settings/1-topics/📚-705-보안.html":{"title":"📚 705 보안","icon":"","description":"보안 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 700 컴퓨터 과학\" href=\"99-settings/1-topics/📖-700-컴퓨터-과학.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 700 컴퓨터 과학</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 705 보안","level":1,"id":"📚_705_보안_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-705-보안.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446949,"modifiedTime":1757340446949,"sourceSize":125,"sourcePath":"99-Settings/1-Topics/📚 705 보안.md","exportPath":"99-settings/1-topics/📚-705-보안.html","showInTree":true,"treeOrder":73,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown"},"99-settings/1-topics/📚-706-시스템-설계.html":{"title":"📚 706 시스템 설계","icon":"","description":"시스템 설계 관련 학습 내용을 담는 토픽입니다.\n<a data-href=\"📖 700 컴퓨터 과학\" href=\"99-settings/1-topics/📖-700-컴퓨터-과학.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 700 컴퓨터 과학</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 706 시스템 설계","level":1,"id":"📚_706_시스템_설계_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-706-시스템-설계.html","pathToRoot":"../..","attachments":[],"createdTime":1757340446870,"modifiedTime":1757340446870,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 706 시스템 설계.md","exportPath":"99-settings/1-topics/📚-706-시스템-설계.html","showInTree":true,"treeOrder":74,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown"},"99-settings/1-topics/📚-801-다-맡게팅.html":{"title":"📚 801 다 맡게팅","icon":"","description":"다 맡게팅 관련 내용을 담는 토픽입니다.\n<a data-href=\"📖 800 프로젝트\" href=\"99-settings/1-topics/📖-800-프로젝트.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">📖 800 프로젝트</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"📚 801 다 맡게팅","level":1,"id":"📚_801_다_맡게팅_1"},{"heading":"상위 토픽","level":2,"id":"상위_토픽_0"}],"links":["99-settings/1-topics/📖-800-프로젝트.html"],"author":"","coverImageURL":"","fullURL":"99-settings/1-topics/📚-801-다-맡게팅.html","pathToRoot":"../..","attachments":[],"createdTime":1757776860491,"modifiedTime":1757776887614,"sourceSize":128,"sourcePath":"99-Settings/1-Topics/📚 801 다 맡게팅.md","exportPath":"99-settings/1-topics/📚-801-다-맡게팅.html","showInTree":true,"treeOrder":75,"backlinks":["400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown"},"99-settings/2-index/🏷️-데일리-노트.html":{"title":"🏷️ 데일리 노트","icon":"","description":"Daily note related contents","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 데일리 노트","level":1,"id":"🏷️_데일리_노트_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-데일리-노트.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450504,"modifiedTime":1757340450504,"sourceSize":57,"sourcePath":"99-Settings/2-Index/🏷️ 데일리 노트.md","exportPath":"99-settings/2-index/🏷️-데일리-노트.html","showInTree":true,"treeOrder":77,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-도구.html":{"title":"🏷️ 도구","icon":"","description":"개발 도구, IDE, 라이브러리, 프레임워크 사용법 등","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 도구","level":1,"id":"🏷️_도구_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-도구.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450481,"modifiedTime":1757340450482,"sourceSize":86,"sourcePath":"99-Settings/2-Index/🏷️ 도구.md","exportPath":"99-settings/2-index/🏷️-도구.html","showInTree":true,"treeOrder":78,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-레퍼런스.html":{"title":"🏷️ 레퍼런스","icon":"","description":"명령어, API, 문법 정리 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 레퍼런스","level":1,"id":"🏷️_레퍼런스_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-레퍼런스.html","pathToRoot":"../..","attachments":[],"createdTime":1757341259060,"modifiedTime":1757341270974,"sourceSize":68,"sourcePath":"99-Settings/2-Index/🏷️ 레퍼런스.md","exportPath":"99-settings/2-index/🏷️-레퍼런스.html","showInTree":true,"treeOrder":79,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-리뷰.html":{"title":"🏷️ 리뷰","icon":"","description":"코드 리뷰, 기술 리뷰, 도서 리뷰 등","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 리뷰","level":1,"id":"🏷️_리뷰_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-리뷰.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450492,"modifiedTime":1757340450492,"sourceSize":67,"sourcePath":"99-Settings/2-Index/🏷️ 리뷰.md","exportPath":"99-settings/2-index/🏷️-리뷰.html","showInTree":true,"treeOrder":80,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-실습.html":{"title":"🏷️ 실습","icon":"","description":"코딩, 구현, 실제 적용 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 실습","level":1,"id":"🏷️_실습_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-실습.html","pathToRoot":"../..","attachments":[],"createdTime":1757341258208,"modifiedTime":1757341270974,"sourceSize":62,"sourcePath":"99-Settings/2-Index/🏷️ 실습.md","exportPath":"99-settings/2-index/🏷️-실습.html","showInTree":true,"treeOrder":81,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html"],"type":"markdown"},"99-settings/2-index/🏷️-에러-해결.html":{"title":"🏷️ 에러 해결","icon":"","description":"Error solving related contents","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 에러 해결","level":1,"id":"🏷️_에러_해결_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-에러-해결.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450510,"modifiedTime":1757340450510,"sourceSize":57,"sourcePath":"99-Settings/2-Index/🏷️ 에러 해결.md","exportPath":"99-settings/2-index/🏷️-에러-해결.html","showInTree":true,"treeOrder":82,"backlinks":["400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown"},"99-settings/2-index/🏷️-이론.html":{"title":"🏷️ 이론","icon":"","description":"개념, 원리, 이론적 배경 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 이론","level":1,"id":"🏷️_이론_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-이론.html","pathToRoot":"../..","attachments":[],"createdTime":1757341257135,"modifiedTime":1757341270974,"sourceSize":65,"sourcePath":"99-Settings/2-Index/🏷️ 이론.md","exportPath":"99-settings/2-index/🏷️-이론.html","showInTree":true,"treeOrder":83,"backlinks":["600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html"],"type":"markdown"},"99-settings/2-index/🏷️-자격증.html":{"title":"🏷️ 자격증","icon":"","description":"Certificate related contents (빅분기, SQLD, ADSP, DA 등)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 자격증","level":1,"id":"🏷️_자격증_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-자격증.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450474,"modifiedTime":1757340450475,"sourceSize":83,"sourcePath":"99-Settings/2-Index/🏷️ 자격증.md","exportPath":"99-settings/2-index/🏷️-자격증.html","showInTree":true,"treeOrder":84,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-최적화.html":{"title":"🏷️ 최적화","icon":"","description":"성능 최적화, 코드 최적화, 시스템 최적화 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 최적화","level":1,"id":"🏷️_최적화_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-최적화.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450499,"modifiedTime":1757340450499,"sourceSize":92,"sourcePath":"99-Settings/2-Index/🏷️ 최적화.md","exportPath":"99-settings/2-index/🏷️-최적화.html","showInTree":true,"treeOrder":85,"backlinks":["400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown"},"99-settings/2-index/🏷️-취업.html":{"title":"🏷️ 취업","icon":"","description":"Job hunting related contents (면접, 자기소개서, 프로젝트 분석 등)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 취업","level":1,"id":"🏷️_취업_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-취업.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450479,"modifiedTime":1757340450479,"sourceSize":99,"sourcePath":"99-Settings/2-Index/🏷️ 취업.md","exportPath":"99-settings/2-index/🏷️-취업.html","showInTree":true,"treeOrder":86,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-프로젝트.html":{"title":"🏷️ 프로젝트","icon":"","description":"Project related contents (사이드 프로젝트, 블로그, 오픈소스 등)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 프로젝트","level":1,"id":"🏷️_프로젝트_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-프로젝트.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450489,"modifiedTime":1757340450489,"sourceSize":104,"sourcePath":"99-Settings/2-Index/🏷️ 프로젝트.md","exportPath":"99-settings/2-index/🏷️-프로젝트.html","showInTree":true,"treeOrder":87,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-학교.html":{"title":"🏷️ 학교","icon":"","description":"학교 수업, 과제, 시험, 학업 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 학교","level":1,"id":"🏷️_학교_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-학교.html","pathToRoot":"../..","attachments":[],"createdTime":1757340977347,"modifiedTime":1757340984650,"sourceSize":70,"sourcePath":"99-Settings/2-Index/🏷️ 학교.md","exportPath":"99-settings/2-index/🏷️-학교.html","showInTree":true,"treeOrder":88,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-학습.html":{"title":"🏷️ 학습","icon":"","description":"개발 학습 과정, 강의, 튜토리얼, 실습 등","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 학습","level":1,"id":"🏷️_학습_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-학습.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450496,"modifiedTime":1757340450496,"sourceSize":74,"sourcePath":"99-Settings/2-Index/🏷️ 학습.md","exportPath":"99-settings/2-index/🏷️-학습.html","showInTree":true,"treeOrder":89,"backlinks":["600-알고리즘-&-코딩테스트/theory/bfs,dfs.html"],"type":"markdown"},"99-settings/2-index/🏷️-회사.html":{"title":"🏷️ 회사","icon":"","description":"Company work related contents","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ 회사","level":1,"id":"🏷️_회사_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-회사.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450507,"modifiedTime":1757340450507,"sourceSize":49,"sourcePath":"99-Settings/2-Index/🏷️ 회사.md","exportPath":"99-settings/2-index/🏷️-회사.html","showInTree":true,"treeOrder":90,"backlinks":[],"type":"markdown"},"99-settings/2-index/🏷️-todo.html":{"title":"🏷️ TODO","icon":"","description":"할 일 관리 및 작업 계획 관련 내용","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"🏷️ TODO","level":1,"id":"🏷️_TODO_1"}],"links":[],"author":"","coverImageURL":"","fullURL":"99-settings/2-index/🏷️-todo.html","pathToRoot":"../..","attachments":[],"createdTime":1757340450484,"modifiedTime":1757340450484,"sourceSize":64,"sourcePath":"99-Settings/2-Index/🏷️ TODO.md","exportPath":"99-settings/2-index/🏷️-todo.html","showInTree":true,"treeOrder":91,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html":{"title":"주식,코인 시계열 데이터 분석에서 Ridge, XGBoost 추천 옵션 및 전략","icon":"","description":"주식이나 코인 등 시계열(financial time series) 데이터 분석에 Ridge 회귀와 XGBoost, 그리고 이 두 모델의 앙상블을 사용할 때 유용한 옵션과 실전 팁을 정리합니다.\n특징 생성 과거 값(lag), 이동평균, 변화율 등 시계열 특성 반영 피처 생성이 중요함. 예: lag_1, lag_7, rolling_mean_5 등 정규화/표준화 Ridge는 가중치 페널티 특성상 표준화(StandardScaler) 필수<a data-tooltip-position=\"top\" aria-label=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://abouttrading.substack.com/p/lets-use-ridge-regression-to-predict\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://abouttrading.substack.com/p/lets-use-ridge-regression-to-predict\" target=\"_self\">2</a>. 윈도우 학습(rolling/expanding window) <br>일정 기간의 과거 데이터만으로 반복 학습(rolling window) 권장<a data-tooltip-position=\"top\" aria-label=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" target=\"_self\">1</a>. 데이터가 시간 흐름에 따라 변화한다면 \"online/rolling fitting\" 추천. 타깃(종속변수) 분포 주가/코인 수익률(returns)로 예측하는 것이 일반적. 시계열 교차검증 순서 지키는 TimeSeriesSplit 지원. 옵션 예시\nalpha(정규화 강도): 옵티마이즈(Tuning) 필요 fit_intercept=True (기본값) solver='auto' 피처 엔지니어링 <br>시계열 데이터를 Supervised Learning 형태(슬라이딩 윈도우, lag, 이동평균 등)로 변환해야 함<a data-tooltip-position=\"top\" aria-label=\"https://www.machinelearningmastery.com/xgboost-for-time-series-forecasting/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.machinelearningmastery.com/xgboost-for-time-series-forecasting/\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html\" target=\"_self\">5</a>. <br>기술적 지표(예: EMA, MACD, RSI 등) 활용 효과적<a data-tooltip-position=\"top\" aria-label=\"https://arxiv.org/html/2407.11786v1\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2407.11786v1\" target=\"_self\">6</a>. Objective objective='reg:squarederror' (회귀용, 평균제곱오차 최소화) 시간순서 준수 훈련·검증 데이터 분할시 미래 데이터로 예측하지 않게 순서를 지킬 것 Validation 방식 <br>KFold보다 Walk-Forward Validation(rolling forecast origin) 권장<a data-tooltip-position=\"top\" aria-label=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" target=\"_self\">4</a>. 중요 하이퍼파라미터 n_estimators, max_depth, learning_rate, subsample, colsample_bytree, gamma, lambda, alpha 등 과적합 방지 early_stopping_rounds 사용 <br>Regularization(lambda, alpha) 조정<a data-tooltip-position=\"top\" aria-label=\"https://arxiv.org/html/2407.11786v1\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2407.11786v1\" target=\"_self\">6</a> Ridge와 XGBoost의 출력 스케일이 다르면 표준화 필요 (Ridge는 표준화된 입력 권장, XGBoost는 중요하지 않지만 맞춰주면 해로울 것 없음) 두 모델 예측값 단순 평균(soft voting) 혹은 가중 평균 동일 특징 파생(같은 피처 엔지니어링 중요) 시간누적 예측 등에서는 첫출력 → 다음 입력 반복 방식(autoregressive)도 고려 <br>Ridge: 경향성(Trend)·선형 특성 추출에 강점<a data-tooltip-position=\"top\" aria-label=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://abouttrading.substack.com/p/lets-use-ridge-regression-to-predict\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://abouttrading.substack.com/p/lets-use-ridge-regression-to-predict\" target=\"_self\">2</a> XGBoost: 복잡/비선형 구조·급격한 변동(Spike)에 대응 가능 <br>둘의 앙상블: 장기 트렌드와 단기 변동성을 모두 반영할 수 있어 금융 시계열에 적합<a data-tooltip-position=\"top\" aria-label=\"https://arxiv.org/html/2506.22055v1\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2506.22055v1\" target=\"_self\">7</a> <br>검증 방법은 반드시 시간 순서를 지키는 방식(Walk-Forward, Expanding Window) 사용해야 예측 성능이 실제에 가깝게 평가됨<a data-tooltip-position=\"top\" aria-label=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" target=\"_self\">4</a>. <br>다양한 기술적 지표 및 외부 요인(뉴스, 거래량 등) 추가 시 성능 향상 가능<a data-tooltip-position=\"top\" aria-label=\"https://arxiv.org/html/2407.11786v1\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2407.11786v1\" target=\"_self\">6</a><a data-tooltip-position=\"top\" aria-label=\"https://dl.acm.org/doi/fullHtml/10.1145/3605423.3605462\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dl.acm.org/doi/fullHtml/10.1145/3605423.3605462\" target=\"_self\">8</a>. 주가/코인 같이 예측의 난이도가 높은 시계열에서는 feature engineering, 하이퍼파라미터 튜닝, 선형+비선형 모델 앙상블이 모두 중요합니다. <br>XGBoost + LSTM 등 하이브리드 모델, explainable AI 적용 사례도 최근 연구에서 많이 활용되고 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://arxiv.org/html/2506.22055v1\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2506.22055v1\" target=\"_self\">7</a>. <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471\" target=\"_self\">https://wire.insiderfinance.io/adaptive-time-series-forecasting-with-rolling-ridge-regression-a82f4a718471</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://abouttrading.substack.com/p/lets-use-ridge-regression-to-predict\" target=\"_self\">https://abouttrading.substack.com/p/lets-use-ridge-regression-to-predict</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.machinelearningmastery.com/xgboost-for-time-series-forecasting/\" target=\"_self\">https://www.machinelearningmastery.com/xgboost-for-time-series-forecasting/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://machinelearningmastery.com/xgboost-for-time-series-forecasting/\" target=\"_self\">https://machinelearningmastery.com/xgboost-for-time-series-forecasting/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html\" target=\"_self\">https://www.kdnuggets.com/2023/08/leveraging-xgboost-timeseries-forecasting.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2407.11786v1\" target=\"_self\">https://arxiv.org/html/2407.11786v1</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2506.22055v1\" target=\"_self\">https://arxiv.org/html/2506.22055v1</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dl.acm.org/doi/fullHtml/10.1145/3605423.3605462\" target=\"_self\">https://dl.acm.org/doi/fullHtml/10.1145/3605423.3605462</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://arxiv.org/html/2411.18339v1\" target=\"_self\">https://arxiv.org/html/2411.18339v1</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.sciencedirect.com/science/article/pii/S1568494625006544\" target=\"_self\">https://www.sciencedirect.com/science/article/pii/S1568494625006544</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/MunjPatel/Adaptive-Time-Series-Forecasting-with-Rolling-Ridge-Regression\" target=\"_self\">https://github.com/MunjPatel/Adaptive-Time-Series-Forecasting-with-Rolling-Ridge-Regression</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://elib.bsu.by/bitstream/123456789/306226/1/176-179.pdf\" target=\"_self\">https://elib.bsu.by/bitstream/123456789/306226/1/176-179.pdf</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.linkedin.com/posts/sofienkaabar_lets-use-ridge-regression-to-predict-time-activity-7170908443690680320-8ZaC\" target=\"_self\">https://www.linkedin.com/posts/sofienkaabar_lets-use-ridge-regression-to-predict-time-activity-7170908443690680320-8ZaC</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.astesj.com/v06/i02/p80/\" target=\"_self\">https://www.astesj.com/v06/i02/p80/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html\" target=\"_self\">https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://cienciadedatos.net/documentos/py56-forecasting-time-series-with-xgboost\" target=\"_self\">https://cienciadedatos.net/documentos/py56-forecasting-time-series-with-xgboost</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.ibm.com/think/topics/ridge-regression\" target=\"_self\">https://www.ibm.com/think/topics/ridge-regression</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.reddit.com/r/MachineLearning/comments/1aoo7gc/d_how_does_xgboost_work_with_time_series/\" target=\"_self\">https://www.reddit.com/r/MachineLearning/comments/1aoo7gc/d_how_does_xgboost_work_with_time_series/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.mdpi.com/1911-8074/18/2/52\" target=\"_self\">https://www.mdpi.com/1911-8074/18/2/52</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://otexts.com/fpp2/regression.html\" target=\"_self\">https://otexts.com/fpp2/regression.html</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"1. Ridge 회귀 시계열 분석 추천 옵션","level":2,"id":"1._Ridge_회귀_시계열_분석_추천_옵션_0"},{"heading":"2. XGBoost 시계열 분석 추천 옵션","level":2,"id":"2._XGBoost_시계열_분석_추천_옵션_0"},{"heading":"3. 앙상블 시 주의 및 실전 팁","level":2,"id":"3._앙상블_시_주의_및_실전_팁_0"},{"heading":"추천 설정 요약 표","level":2,"id":"추천_설정_요약_표_0"},{"heading":"실전 참고 사항","level":2,"id":"실전_참고_사항_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","pathToRoot":"../..","attachments":[],"createdTime":1753273899693,"modifiedTime":1753273916632,"sourceSize":7948,"sourcePath":"100-데이터분석 & AI/캐글/주식,코인 시계열 데이터 분석에서 Ridge, XGBoost 추천 옵션 및 전략.md","exportPath":"100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","showInTree":true,"treeOrder":94,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/캐글/캐글준비.html":{"title":"캐글준비","icon":"","description":"대회명: DRW - Crypto Market Prediction\nURL: <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/competitions/drw-crypto-market-prediction\" target=\"_self\">https://www.kaggle.com/competitions/drw-crypto-market-prediction</a>\n기간: 2025.05.21 ~ 2025.07.25\n설명: 가상 화폐의 미래 가격 변동 예측 모델 개발데이터 소개:\n훈련 데이터: train.parquet\n테스트 데이터: test.parquet\n(훈련과 테스트 모두 단일 파일로 구성)\n수행 내용:\n전처리 (이게 제일 어렵습니다...) 대회 홈페이지 상단의 \"Code\" 버튼을 클릭하시면, 다른 사람들의 Kaggle 노트북을 확인할 수 있습니다. 많은 코드들을 리뷰하면서 EDA와 전처리를 수행합니다. 모델 설계 본 대회는 LGBM, XGBoost, CatBoost 등과 같은 트리 기반 앙상블 알고리즘를 활용하여 정확도가 높은 ML 모델을 설계해야 하는 대회입니다. 가장 스펙 쌓기 좋은 대회 중 하나라고 생각합니다!\n대부분 LGBM, XGBoost, CatBoost 중 하나의 알고리즘으로 ML 모델을 설계하는 사람들도 많은데, 그러면 높은 정확도 점수를 얻을 수 없습니다.\n상위권으로 가기 위해서는 LGBM + (Meta)DNN + XGBoost (수치형) 또는 CatBoost (범주형) 구조로 ML 모델을 설계해야 합니다. 모델 테스트 계속해서 모델을 테스트하면서 최대한 정확도 점수를 높여야 합니다.\n주로, 데이터 불균형 문제 해결(UpSampling &amp; UnderSampling), 높은 corr 값을 가진 features만을 이용하여 훈련, 파라미터 파인튜닝 등을 수행하며, 정확도 점수를 높입니다. 제출 파일 형식에 맞추기 이것도 마찬가지로 다른 사람들의 Kaggle 노트북을 참고하면 금방 합니다.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/캐글/캐글준비.html","pathToRoot":"../..","attachments":[],"createdTime":1748714935709,"modifiedTime":1748714940252,"sourceSize":1694,"sourcePath":"100-데이터분석 & AI/캐글/캐글준비.md","exportPath":"100-데이터분석-&-ai/캐글/캐글준비.html","showInTree":true,"treeOrder":95,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/캐글/eda.html":{"title":"eda","icon":"","description":"target : 'label'\nTrain columns: ['bid_qty', 'ask_qty', 'buy_qty', 'sell_qty', 'volume', 'X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7', 'X8', 'X9', 'X10', 'X11', 'X12', 'X13', 'X14', 'X15', 'X16', 'X17', 'X18', 'X19', 'X20', 'X21', 'X22', 'X23', 'X24', 'X25', 'X26', 'X27', 'X28', 'X29', 'X30', 'X31', 'X32', 'X33', 'X34', 'X35', 'X36', 'X37', 'X38', 'X39', 'X40', 'X41', 'X42', 'X43', 'X44', 'X45', 'X46', 'X47', 'X48', 'X49', 'X50', 'X51', 'X52', 'X53', 'X54', 'X55', 'X56', 'X57', 'X58', 'X59', 'X60', 'X61', 'X62', 'X63', 'X64', 'X65', 'X66', 'X67', 'X68', 'X69', 'X70', 'X71', 'X72', 'X73', 'X74', 'X75', 'X76', 'X77', 'X78', 'X79', 'X80', 'X81', 'X82', 'X83', 'X84', 'X85', 'X86', 'X87', 'X88', 'X89', 'X90', 'X91', 'X92', 'X93', 'X94', 'X95', 'X96', 'X97', 'X98', 'X99', 'X100', 'X101', 'X102', 'X103', 'X104', 'X105', 'X106', 'X107', 'X108', 'X109', 'X110', 'X111', 'X112', 'X113', 'X114', 'X115', 'X116', 'X117', 'X118', 'X119', 'X120', 'X121', 'X122', 'X123', 'X124', 'X125', 'X126', 'X127', 'X128', 'X129', 'X130', 'X131', 'X132', 'X133', 'X134', 'X135', 'X136', 'X137', 'X138', 'X139', 'X140', 'X141', 'X142', 'X143', 'X144', 'X145', 'X146', 'X147', 'X148', 'X149', 'X150', 'X151', 'X152', 'X153', 'X154', 'X155', 'X156', 'X157', 'X158', 'X159', 'X160', 'X161', 'X162', 'X163', 'X164', 'X165', 'X166', 'X167', 'X168', 'X169', 'X170', 'X171', 'X172', 'X173', 'X174', 'X175', 'X176', 'X177', 'X178', 'X179', 'X180', 'X181', 'X182', 'X183', 'X184', 'X185', 'X186', 'X187', 'X188', 'X189', 'X190', 'X191', 'X192', 'X193', 'X194', 'X195', 'X196', 'X197', 'X198', 'X199', 'X200', 'X201', 'X202', 'X203', 'X204', 'X205', 'X206', 'X207', 'X208', 'X209', 'X210', 'X211', 'X212', 'X213', 'X214', 'X215', 'X216', 'X217', 'X218', 'X219', 'X220', 'X221', 'X222', 'X223', 'X224', 'X225', 'X226', 'X227', 'X228', 'X229', 'X230', 'X231', 'X232', 'X233', 'X234', 'X235', 'X236', 'X237', 'X238', 'X239', 'X240', 'X241', 'X242', 'X243', 'X244', 'X245', 'X246', 'X247', 'X248', 'X249', 'X250', 'X251', 'X252', 'X253', 'X254', 'X255', 'X256', 'X257', 'X258', 'X259', 'X260', 'X261', 'X262', 'X263', 'X264', 'X265', 'X266', 'X267', 'X268', 'X269', 'X270', 'X271', 'X272', 'X273', 'X274', 'X275', 'X276', 'X277', 'X278', 'X279', 'X280', 'X281', 'X282', 'X283', 'X284', 'X285', 'X286', 'X287', 'X288', 'X289', 'X290', 'X291', 'X292', 'X293', 'X294', 'X295', 'X296', 'X297', 'X298', 'X299', 'X300', 'X301', 'X302', 'X303', 'X304', 'X305', 'X306', 'X307', 'X308', 'X309', 'X310', 'X311', 'X312', 'X313', 'X314', 'X315', 'X316', 'X317', 'X318', 'X319', 'X320', 'X321', 'X322', 'X323', 'X324', 'X325', 'X326', 'X327', 'X328', 'X329', 'X330', 'X331', 'X332', 'X333', 'X334', 'X335', 'X336', 'X337', 'X338', 'X339', 'X340', 'X341', 'X342', 'X343', 'X344', 'X345', 'X346', 'X347', 'X348', 'X349', 'X350', 'X351', 'X352', 'X353', 'X354', 'X355', 'X356', 'X357', 'X358', 'X359', 'X360', 'X361', 'X362', 'X363', 'X364', 'X365', 'X366', 'X367', 'X368', 'X369', 'X370', 'X371', 'X372', 'X373', 'X374', 'X375', 'X376', 'X377', 'X378', 'X379', 'X380', 'X381', 'X382', 'X383', 'X384', 'X385', 'X386', 'X387', 'X388', 'X389', 'X390', 'X391', 'X392', 'X393', 'X394', 'X395', 'X396', 'X397', 'X398', 'X399', 'X400', 'X401', 'X402', 'X403', 'X404', 'X405', 'X406', 'X407', 'X408', 'X409', 'X410', 'X411', 'X412', 'X413', 'X414', 'X415', 'X416', 'X417', 'X418', 'X419', 'X420', 'X421', 'X422', 'X423', 'X424', 'X425', 'X426', 'X427', 'X428', 'X429', 'X430', 'X431', 'X432', 'X433', 'X434', 'X435', 'X436', 'X437', 'X438', 'X439', 'X440', 'X441', 'X442', 'X443', 'X444', 'X445', 'X446', 'X447', 'X448', 'X449', 'X450', 'X451', 'X452', 'X453', 'X454', 'X455', 'X456', 'X457', 'X458', 'X459', 'X460', 'X461', 'X462', 'X463', 'X464', 'X465', 'X466', 'X467', 'X468', 'X469', 'X470', 'X471', 'X472', 'X473', 'X474', 'X475', 'X476', 'X477', 'X478', 'X479', 'X480', 'X481', 'X482', 'X483', 'X484', 'X485', 'X486', 'X487', 'X488', 'X489', 'X490', 'X491', 'X492', 'X493', 'X494', 'X495', 'X496', 'X497', 'X498', 'X499', 'X500', 'X501', 'X502', 'X503', 'X504', 'X505', 'X506', 'X507', 'X508', 'X509', 'X510', 'X511', 'X512', 'X513', 'X514', 'X515', 'X516', 'X517', 'X518', 'X519', 'X520', 'X521', 'X522', 'X523', 'X524', 'X525', 'X526', 'X527', 'X528', 'X529', 'X530', 'X531', 'X532', 'X533', 'X534', 'X535', 'X536', 'X537', 'X538', 'X539', 'X540', 'X541', 'X542', 'X543', 'X544', 'X545', 'X546', 'X547', 'X548', 'X549', 'X550', 'X551', 'X552', 'X553', 'X554', 'X555', 'X556', 'X557', 'X558', 'X559', 'X560', 'X561', 'X562', 'X563', 'X564', 'X565', 'X566', 'X567', 'X568', 'X569', 'X570', 'X571', 'X572', 'X573', 'X574', 'X575', 'X576', 'X577', 'X578', 'X579', 'X580', 'X581', 'X582', 'X583', 'X584', 'X585', 'X586', 'X587', 'X588', 'X589', 'X590', 'X591', 'X592', 'X593', 'X594', 'X595', 'X596', 'X597', 'X598', 'X599', 'X600', 'X601', 'X602', 'X603', 'X604', 'X605', 'X606', 'X607', 'X608', 'X609', 'X610', 'X611', 'X612', 'X613', 'X614', 'X615', 'X616', 'X617', 'X618', 'X619', 'X620', 'X621', 'X622', 'X623', 'X624', 'X625', 'X626', 'X627', 'X628', 'X629', 'X630', 'X631', 'X632', 'X633', 'X634', 'X635', 'X636', 'X637', 'X638', 'X639', 'X640', 'X641', 'X642', 'X643', 'X644', 'X645', 'X646', 'X647', 'X648', 'X649', 'X650', 'X651', 'X652', 'X653', 'X654', 'X655', 'X656', 'X657', 'X658', 'X659', 'X660', 'X661', 'X662', 'X663', 'X664', 'X665', 'X666', 'X667', 'X668', 'X669', 'X670', 'X671', 'X672', 'X673', 'X674', 'X675', 'X676', 'X677', 'X678', 'X679', 'X680', 'X681', 'X682', 'X683', 'X684', 'X685', 'X686', 'X687', 'X688', 'X689', 'X690', 'X691', 'X692', 'X693', 'X694', 'X695', 'X696', 'X697', 'X698', 'X699', 'X700', 'X701', 'X702', 'X703', 'X704', 'X705', 'X706', 'X707', 'X708', 'X709', 'X710', 'X711', 'X712', 'X713', 'X714', 'X715', 'X716', 'X717', 'X718', 'X719', 'X720', 'X721', 'X722', 'X723', 'X724', 'X725', 'X726', 'X727', 'X728', 'X729', 'X730', 'X731', 'X732', 'X733', 'X734', 'X735', 'X736', 'X737', 'X738', 'X739', 'X740', 'X741', 'X742', 'X743', 'X744', 'X745', 'X746', 'X747', 'X748', 'X749', 'X750', 'X751', 'X752', 'X753', 'X754', 'X755', 'X756', 'X757', 'X758', 'X759', 'X760', 'X761', 'X762', 'X763', 'X764', 'X765', 'X766', 'X767', 'X768', 'X769', 'X770', 'X771', 'X772', 'X773', 'X774', 'X775', 'X776', 'X777', 'X778', 'X779', 'X780', 'label']\n주요 선생님들이 셀랙한 feature main feature 'bid_qty', 'volume', 'buy_qty', 'sell_qty'\n'ask_qty'\n'X598', 'X344'\nX363, X405, X321, X175, X179, X197, X22, X181, X28, X169, X198, X173, X338, X587, X450, X97, X52, X444, X297, X138, X572, X343, X438, X459, X758, X25 <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/johndoe2011/anyone-can-win-on-public-lb\" target=\"_self\">https://www.kaggle.com/code/johndoe2011/anyone-can-win-on-public-lb</a> [ 'X363', 'X405', 'X321', 'X175', 'X179', 'X137', 'X197', 'X22', 'X40', 'X181', 'X28', 'X169', 'X198', 'X173', 'X338', 'X288', 'X385', 'X344', 'X427', 'X587', 'X450', 'X97', 'X52', 'X444', 'X598', 'X379', 'X696', 'X297', 'X138', 'X572', 'X343', 'X586', 'X466', 'X438', 'X452', 'X459', 'X435', 'X386', 'X55', 'X341', 'X683', 'X428', 'X605', 'X445', 'X272', 'X180', 'X593', 'X680', 'X686', 'X692', 'X695', \"X603\", \"X674\", \"X421\", \"X333\", \"X415\", \"X345\", \"X174\", \"X302\", \"X178\", \"X168\", \"X612\", \"buy_qty\", \"sell_qty\", \"volume\", \"bid_qty\", \"ask_qty\", ] 기억안나시는누군가\n\"\"\" 상호작용 및 기본 관계 지표\n거래활성도랑, 실제로 내놨을때 얼마나팔렷나를 평가하는 척도들\n\"\"\"\n# 매수/매도 호가 수량의 곱. 주문서 유동성의 쌍방향 규모 예상\ndf['bid_ask_interaction'] = df['bid_qty'] * df['ask_qty'] # 매수 호가수량 × 실제 매수 체결량. 호가잔량과 실제 매수간 상호작용 지표\ndf['bid_buy_interaction'] = df['bid_qty'] * df['buy_qty']\n# 매수 호가수량 × 실제 매도 체결량. 미체결 매수와 매도 거래간 연결도\ndf['bid_sell_interaction'] = df['bid_qty'] * df['sell_qty']\n# 매도 호가수량 × 실제 매수 체결량. 미체결 매도와 매수 거래간 연결도\ndf['ask_buy_interaction'] = df['ask_qty'] * df['buy_qty']\n# 매도 호가수량 × 실제 매도 체결량. 호가잔량과 실제 매도간 상호작용 지표\ndf['ask_sell_interaction'] = df['ask_qty'] * df['sell_qty']\n# 실제 매수·매도 체결량의 곱. 거래 활성도의 상대 척도\ndf['buy_sell_interaction'] = df['buy_qty'] * df['sell_qty']\n# (매도호가수량-매수호가수량)/(양 호가잔량 누적)로 유동성 불균형 지표\ndf['spread_indicator'] = (df['ask_qty'] - df['bid_qty']) / (df['ask_qty'] + df['bid_qty'] + 1e-8)\n# 실시간 매수 체결량/매도 체결량 비율\ndf['buy_sell_ratio'] = df['buy_qty'] / (df['sell_qty'] + 1e-8)\n# 매수호가잔량/매도호가잔량 비율\ndf['bid_ask_ratio'] = df['bid_qty'] / (df['ask_qty'] + 1e-8)\n# 유동성\ndf['total_liquidity'] = df['bid_qty'] + df['ask_qty'] # 유동성 불균형도\ndf['liquidity_imbalance'] = (df['bid_qty'] - df['ask_qty']) / (df['total_liquidity'] + 1e-8)\n# 매수 체결량/매수호가. 매수세가 호가잔량 대비 얼마나 큰지\ndf['normalized_buy_volume'] = df['buy_qty'] / (df['bid_qty'] + 1e-8)\n# 매도 체결량/매도호가. 매도세가 호가잔량 대비 얼마나 큰지\ndf['normalized_sell_volume'] = df['sell_qty'] / (df['ask_qty'] + 1e-8) \"\"\"\n거래강도를 포함한 지표\n각 매수매도의 힘과 전체 시장의 방향성과 힘이 얼마인지를 확인할 수 있음\n\"\"\"\n# 매도호가수량-매수호가수량)/총거래량. 유동성 대비 스프레드 지표\ndf['relative_spread'] = (df['ask_qty'] - df['bid_qty']) / (df['volume'] + 1e-8)\ndf['volume_weighted_buy'] = df['buy_qty'] * df['volume']\ndf['volume_weighted_sell'] = df['sell_qty'] * df['volume']\ndf['volume_weighted_bid'] = df['bid_qty'] * df['volume']\ndf['volume_weighted_ask'] = df['ask_qty'] * df['volume']\n# 실시간 매수·매도 힘 균형(\ndf['order_flow_imbalance'] = (df['buy_qty'] - df['sell_qty']) / (df['volume'] + 1e-8)\n# 볼륨을 반영한 유동성 불균형도인듯?\ndf['liquidity_adjusted_imbalance'] = df['order_flow_imbalance'] * df['depth_ratio']\n# 매수매도 하려는 힘\ndf['buying_pressure'] = df['buy_qty'] / (df['volume'] + 1e-8)\ndf['selling_pressure'] = df['sell_qty'] / (df['volume'] + 1e-8)\n# 전체 체결횟수/총거래량. 시장의 거래 활성 수준\ndf['trade_intensity'] = (df['buy_qty'] + df['sell_qty']) / (df['volume'] + 1e-8)\n# 평균 체결 단위. 한 번 거래당 평균 체결량\ndf['avg_trade_size'] = df['volume'] / (df['buy_qty'] + df['sell_qty'] + 1e-8)\n# 실질 순매수/매도 흐름. (매수-매도)/(매수+매도)\ndf['net_trade_flow'] = (df['buy_qty'] - df['sell_qty']) / (df['buy_qty'] + df['sell_qty'] + 1e-8)\n# 총유동성/총거래량. 시장 유동성 깊이 척도\ndf['depth_ratio'] = df['total_liquidity'] / (df['volume'] + 1e-8)\ndf['volume_participation'] = (df['buy_qty'] + df['sell_qty']) / (df['total_liquidity'] + 1e-8)\n# 시장활성지표 주문서-실제 거래의 복합 지표\ndf['market_activity'] = df['volume'] * df['total_liquidity'] # 체결량 차이/거래량. 시장 실효적 스프레드 근사치 df['effective_spread_proxy'] = np.abs(df['buy_qty'] - df['sell_qty']) / (df['volume'] + 1e-8)\ndf['realized_volatility_proxy'] = np.abs(df['order_flow_imbalance']) * df['volume'] # 매수압력 × 스프레드 지표. 매수세와 유동성 스프레드의 복합 움직임\ndf['pressure_spread_interaction'] = df['buying_pressure'] * df['spread_indicator'] <br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/rosswade/drw-crypto-market-submission\" target=\"_self\">https://www.kaggle.com/code/rosswade/drw-crypto-market-submission</a> FEATURES = [ \"X863\", \"X856\", \"X344\", \"X598\", \"X862\", \"X385\", \"X852\", \"X603\", \"X860\", \"X674\", \"X415\", \"X345\", \"X137\", \"X855\", \"X174\", \"X302\", \"X178\", \"X532\", \"X168\", \"X612\", \"bid_qty\", \"ask_qty\", \"buy_qty\", \"sell_qty\", \"volume\",\"X888\", \"X421\", \"X333\"\n] # === NEW FEATURES ===\n# 기억안나시는 누군가파트에서 다한 부분임\ndf['volume_weighted_sell'] = df['sell_qty'] * df['volume']\ndf['buy_sell_ratio'] = df['buy_qty'] / (df['sell_qty'] + 1e-8)\ndf['selling_pressure'] = df['sell_qty'] / (df['volume'] + 1e-8)\ndf['effective_spread_proxy'] = np.abs(df['buy_qty'] - df['sell_qty']) / (df['volume'] + 1e-8)\ndf['log_volume'] = np.log1p(df['volume'])\ndf['bid_ask_imbalance'] = (df['bid_qty'] - df['ask_qty']) / (df['bid_qty'] + df['ask_qty'] + 1e-8)\ndf['order_flow_imbalance'] = (df['buy_qty'] - df['sell_qty']) / (df['buy_qty'] + df['sell_qty'] + 1e-8)\ndf['liquidity_ratio'] = (df['bid_qty'] + df['ask_qty']) / (df['volume'] + 1e-8) <br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/taylorsamarel/xgb-deep-learning-ensemble\" target=\"_self\">https://www.kaggle.com/code/taylorsamarel/xgb-deep-learning-ensemble</a> core_features = [ 'X363', 'X405', 'X321', 'X175', 'X179', 'X197', 'X22', 'X181', 'X28', 'X169', 'X198', 'X173', 'X338', 'X344', 'X587', 'X450', 'X97', 'X52', 'X444', 'X598', 'X297', 'X138', 'X572', 'X343', 'X438', 'X459', 'X758', 'X25', 'buy_qty', 'sell_qty', 'volume', 'bid_qty' ] <br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/vishalpainjane/drw-ensemble-0-72837\" target=\"_self\">https://www.kaggle.com/code/vishalpainjane/drw-ensemble-0-72837</a> cols = [ 'X363', 'X405', 'X321', 'X175', 'X179', 'X137', 'X197', 'X22', 'X40', 'X181', 'X28', 'X169', 'X198', 'X173', 'X338', 'X288', 'X385', 'X344', 'X427', 'X587', 'X450', 'X97', 'X52', 'X444', 'X598', 'X379', 'X696', 'X297', 'X138', 'X572', 'X343', 'X586', 'X466', 'X438', 'X452', 'X459', 'X435', 'X386', 'X55', 'X341', 'X683', 'X428', 'X605', 'X445', 'X272', 'X180', 'X593', 'X680', 'X686', 'X692', 'X695', \"X603\", \"X674\", \"X421\", \"X333\", \"X415\", \"X345\", \"X174\", \"X302\", \"X178\", \"X168\", \"X612\", 'X298', 'X45', 'X46', 'X39', 'X752', 'X759', 'X41', 'X42', \"buy_qty\", \"sell_qty\", \"volume\", \"bid_qty\", \"ask_qty\", ] # Add new top important features new_features = [ 'X758', 'X296', 'X611', 'X780', 'X451', 'X25', 'X591', ] <br>\n리지모델 : <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/152833\" target=\"_self\">https://wikidocs.net/152833</a> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"칼럼","level":2,"id":"칼럼_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/캐글/eda.html","pathToRoot":"../..","attachments":[],"createdTime":1752985440883,"modifiedTime":1752992747846,"sourceSize":16430,"sourcePath":"100-데이터분석 & AI/캐글/eda.md","exportPath":"100-데이터분석-&-ai/캐글/eda.html","showInTree":true,"treeOrder":96,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/캐글/result.html":{"title":"result","icon":"","description":"릿지, xgbm\nfeature , 앙상블기준선택feature : features = ['bid_qty', 'volume', 'buy_qty', 'sell_qty','ask_qty','X598', 'X344','X363', 'X405', 'X321', 'X175', 'X179', 'X197', 'X22', 'X181', 'X28', 'X169', 'X198', 'X173', 'X338', 'X587', 'X450', 'X97', 'X52', 'X444', 'X297', 'X138', 'X572', 'X343', 'X438', 'X459', 'X758', 'X25']전체다 &amp; 평균\nR2: 0.5544\nRMSE: 0.6757\n피어슨 상관계수: 0.8200선택 &amp; 평균\nR2: 0.4379\nRMSE: 0.7589\n피어슨 상관계수: 0.7980전체다 &amp; 평균 &amp; 시간순 split선택 &amp; 평균 &amp; 시간순 split","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/캐글/result.html","pathToRoot":"../..","attachments":[],"createdTime":1753273718111,"modifiedTime":1753275227113,"sourceSize":561,"sourcePath":"100-데이터분석 & AI/캐글/result.md","exportPath":"100-데이터분석-&-ai/캐글/result.html","showInTree":true,"treeOrder":97,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/캐글/untitled.html":{"title":"Untitled","icon":"","description":"\n설명:&nbsp;L2 정규화 강도를 조절하는 하이퍼파라미터. 역할:&nbsp;값을 높일수록 계수를 더 많이 패널티하여 모델이 단순해짐(과적합 방지). 값이 너무 크면 과소적합 위험. 기본값:&nbsp;1.0 설명:&nbsp;절편(Intercept)을 학습할지 정하는 옵션. 값:&nbsp;True(기본값, 절편 포함), False(절편 미포함) 설명:&nbsp;입력 데이터 피처를 정규화(평균0, 분산1)할지 여부(구버전). 주의:&nbsp;최근 버전에서는 사용 중단됨.&nbsp;StandardScaler&nbsp;사용 권장. 설명:&nbsp;최적화에 사용할 알고리즘 종류 선택. 값 예시:&nbsp;‘auto’, ‘svd’, ‘cholesky’, ‘lsqr’, ‘sparse_cg’, ‘sag’, ‘saga’, ‘lbfgs’ 특징:&nbsp;데이터 크기, 희소성 등에 따라 최적 solver가 다를 수 있음. 설명:&nbsp;반복 최적화 알고리즘의 최대 반복 횟수. 기본값:&nbsp;None(알고리즘마다 다름), 필요하면 명시적으로 설정.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"1. alpha (정규화 강도, 규제 계수)","level":2,"id":"1._alpha_(정규화_강도,_규제_계수)_0"},{"heading":"2. fit_intercept","level":2,"id":"2._fit_intercept_0"},{"heading":"3. normalize","level":2,"id":"3._normalize_0"},{"heading":"4. solver","level":2,"id":"4._solver_0"},{"heading":"5. max_iter","level":2,"id":"5._max_iter_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/캐글/untitled.html","pathToRoot":"../..","attachments":[],"createdTime":1753184181063,"modifiedTime":1753184182914,"sourceSize":1184,"sourcePath":"100-데이터분석 & AI/캐글/Untitled.md","exportPath":"100-데이터분석-&-ai/캐글/untitled.html","showInTree":true,"treeOrder":98,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/캐글/untitled-1.html":{"title":"Untitled 1","icon":"","description":"아래 코드는 주어진 X, Y 데이터(넘파이 배열 혹은 판다스 데이터프레임을 가정)에 대해 릿지(Ridge) 회귀와 XGBoost 회귀(XGBRegressor)를 각각 학습시키고, 두 모델의 예측값 평균을 앙상블하여 R2, RMSE, 피어슨 상관계수를 출력하는 가장 기본적인 예제입니다.pythonimport numpy as np from sklearn.linear_model import Ridge from xgboost import XGBRegressor from sklearn.metrics import r2_score, mean_squared_error from scipy.stats import pearsonr # X, Y 데이터 준비 (여기에 실제 데이터 입력) np.random.seed(42) X = np.random.rand(100, 5) Y = np.random.rand(100) # 모델 정의 및 학습 ridge = Ridge() xgb = XGBRegressor(objective='reg:squarederror', random_state=42) ridge.fit(X, Y) xgb.fit(X, Y) # 예측 ridge_pred = ridge.predict(X) xgb_pred = xgb.predict(X) # 앙상블(평균) ensemble_pred = (ridge_pred + xgb_pred) / 2 # 성능 평가 r2 = r2_score(Y, ensemble_pred) rmse = mean_squared_error(Y, ensemble_pred) ** 0.5 pearson_corr, _ = pearsonr(Y, ensemble_pred) print(f'R2: {r2:.4f}') print(f'RMSE: {rmse:.4f}') print(f'피어슨 상관계수: {pearson_corr:.4f}')\n실제 캐글 대회에서는 train/test 분할, 교차검증 등도 반드시 진행하세요. XGBoost 설치가 필요할 수 있습니다: pip install xgboost Ridge, XGBoost에 대한 앙상블과 대표적 평가지표 활용법은 여러 캐글 및 블로그, 공식 문서에서 확인할 수 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://www.kaggle.com/code/bashkeel/eda-to-ensemble-model-lasso-ridge-xgboost\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/bashkeel/eda-to-ensemble-model-lasso-ridge-xgboost\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@kupulau/Regression-model-%EC%BD%94%EB%93%9C\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@kupulau/Regression-model-%EC%BD%94%EB%93%9C\" target=\"_self\">2</a>. <br>성능 개선을 원한다면 그리드 서치, 스태킹 등 다양한 앙상블 기법도 활용해보세요<a data-tooltip-position=\"top\" aria-label=\"https://www.kaggle.com/code/bashkeel/eda-to-ensemble-model-lasso-ridge-xgboost\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/bashkeel/eda-to-ensemble-model-lasso-ridge-xgboost\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.kaggle.com/code/abhishek1aa/stacking-ensemble-roberta-xgboost-ridge\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/abhishek1aa/stacking-ensemble-roberta-xgboost-ridge\" target=\"_self\">3</a>. 이 코드는 앙상블과 성능 평가의 가장 기본적인 골격을 보여줍니다. 데이터셋 특성에 따라 하이퍼파라미터 튜닝, 교차검증, 예측값 후처리 등을 추가해 실전에 맞게 최적화해주세요.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/bashkeel/eda-to-ensemble-model-lasso-ridge-xgboost\" target=\"_self\">https://www.kaggle.com/code/bashkeel/eda-to-ensemble-model-lasso-ridge-xgboost</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@kupulau/Regression-model-%EC%BD%94%EB%93%9C\" target=\"_self\">https://velog.io/@kupulau/Regression-model-%EC%BD%94%EB%93%9C</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/abhishek1aa/stacking-ensemble-roberta-xgboost-ridge\" target=\"_self\">https://www.kaggle.com/code/abhishek1aa/stacking-ensemble-roberta-xgboost-ridge</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://riverzayden.tistory.com/17\" target=\"_self\">https://riverzayden.tistory.com/17</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://scikit-learn.org/stable/modules/ensemble.html\" target=\"_self\">https://scikit-learn.org/stable/modules/ensemble.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/theintegratedguy/ensemble-regression\" target=\"_self\">https://www.kaggle.com/code/theintegratedguy/ensemble-regression</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.csdn.net/weixin_39889597/article/details/110776483\" target=\"_self\">https://blog.csdn.net/weixin_39889597/article/details/110776483</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://xgboosting.com/xgboost-stable-predictions-via-ensemble-of-final-models/\" target=\"_self\">https://xgboosting.com/xgboost-stable-predictions-via-ensemble-of-final-models/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.machinelearningmastery.com/xgboost-for-regression/\" target=\"_self\">https://www.machinelearningmastery.com/xgboost-for-regression/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/20115272/calculate-coefficient-of-determination-r2-and-root-mean-square-error-rmse-fo/20115859\" target=\"_self\">https://stackoverflow.com/questions/20115272/calculate-coefficient-of-determination-r2-and-root-mean-square-error-rmse-fo/20115859</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://jaylala.tistory.com/entry/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-with-Python-%EC%95%99%EC%83%81%EB%B8%94Ensemble-%ED%95%99%EC%8A%B5-4-XGBoost\" target=\"_self\">https://jaylala.tistory.com/entry/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-with-Python-%EC%95%99%EC%83%81%EB%B8%94Ensemble-%ED%95%99%EC%8A%B5-4-XGBoost</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.geeksforgeeks.org/machine-learning/ensemble-methods-in-python/\" target=\"_self\">https://www.geeksforgeeks.org/machine-learning/ensemble-methods-in-python/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datatechnotes.com/2019/10/accuracy-check-in-python-mae-mse-rmse-r.html\" target=\"_self\">https://www.datatechnotes.com/2019/10/accuracy-check-in-python-mae-mse-rmse-r.html</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=ujKt3JdI2B8\" target=\"_self\">https://www.youtube.com/watch?v=ujKt3JdI2B8</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.datacamp.com/tutorial/rmse\" target=\"_self\">https://www.datacamp.com/tutorial/rmse</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.mdpi.com/2079-8954/12/7/254\" target=\"_self\">https://www.mdpi.com/2079-8954/12/7/254</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://tyami.github.io/machine%20learning/ensemble-6-boosting-XGBoost-regression/\" target=\"_self\">https://tyami.github.io/machine%20learning/ensemble-6-boosting-XGBoost-regression/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/893657/how-do-i-calculate-r-squared-using-python-and-numpy\" target=\"_self\">https://stackoverflow.com/questions/893657/how-do-i-calculate-r-squared-using-python-and-numpy</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.sciencedirect.com/science/article/abs/pii/S0306261922003555\" target=\"_self\">https://www.sciencedirect.com/science/article/abs/pii/S0306261922003555</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.ml.ensemble.XGBRegressor\" target=\"_self\">https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.ml.ensemble.XGBRegressor</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"캐글 회귀 앙상블: Ridge + XGBoost 코드 예제 및 성능 평가","level":1,"id":"캐글_회귀_앙상블_Ridge_+_XGBoost_코드_예제_및_성능_평가_0"},{"heading":"1. 앙상블 코드 예제 (Python)","level":2,"id":"1._앙상블_코드_예제_(Python)_0"},{"heading":"2. 주요 지표 설명","level":2,"id":"2._주요_지표_설명_0"},{"heading":"3. 참고 자료 및 실전 팁","level":2,"id":"3._참고_자료_및_실전_팁_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/캐글/untitled-1.html","pathToRoot":"../..","attachments":[],"createdTime":1753271943032,"modifiedTime":1753271971050,"sourceSize":5809,"sourcePath":"100-데이터분석 & AI/캐글/Untitled 1.md","exportPath":"100-데이터분석-&-ai/캐글/untitled-1.html","showInTree":true,"treeOrder":99,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html":{"title":"데이터모델링-20250407100415854","icon":"","description":"<img src=\"100-데이터분석-&amp;-ai/assets/데이터모델링-20250407100415854.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html","pathToRoot":"../..","attachments":["100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html"],"createdTime":1743987855818,"modifiedTime":1743987855875,"sourceSize":369579,"sourcePath":"100-데이터분석 & AI/assets/데이터모델링-20250407100415854.png","exportPath":"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html","showInTree":true,"treeOrder":101,"backlinks":["100-데이터분석-&-ai/데이터모델링.html"],"type":"attachment"},"100-데이터분석-&-ai/개발-방법론.html":{"title":"개발 방법론","icon":"","description":"행 분석단위 예측 데이터다","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/개발-방법론.html","pathToRoot":"..","attachments":[],"createdTime":1744160000983,"modifiedTime":1744160057842,"sourceSize":38,"sourcePath":"100-데이터분석 & AI/개발 방법론.md","exportPath":"100-데이터분석-&-ai/개발-방법론.html","showInTree":true,"treeOrder":102,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/데이터모델링.html":{"title":"데이터모델링","icon":"","description":"결측치\n날리거나\n채우거나가변수화 : 범주를숫자로\n모든값은 숫자여야만해서\n스케일링 :숫자의 범위가 일치해야함<img alt=\"assets/데이터모델링-20250407100415854.png\" src=\"100-데이터분석-&amp;-ai/assets/데이터모델링-20250407100415854.png\" target=\"_self\" style=\"width: 300px; max-width: 100%;\">\n전처리2는딥러닝이면하는거학습단위일때만 미니배치씀보통오차줄일때 도구 : 옵티마이저\n어케확인함?미분해서그레디언트\nadam\n오차기반으로확인하는거 백프로파게이션(피드백같은거)\u001d\n딥러닝 손실함수 mse\n주가 예측할땐 회귀\n주가 등락만확인할땐 분류각에포크 마다 학습에러와검증에러가줄어고 있는지확인정규화는 짜부하는거고\nsoftmax는 오차기반으로 가중치를둠레이어와 노드수도 하이퍼파라미터라고할 수 있음\n에포크 반복횟수컴퓨전메트릭스를 히트맥으로 표현가능","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"100-데이터분석-&-ai/데이터모델링.html","pathToRoot":"..","attachments":["100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html"],"createdTime":1743987541647,"modifiedTime":1744077058281,"sourceSize":869,"sourcePath":"100-데이터분석 & AI/데이터모델링.md","exportPath":"100-데이터분석-&-ai/데이터모델링.html","showInTree":true,"treeOrder":103,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/딥러닝.html":{"title":"딥러닝","icon":"","description":"배치단위로 가중치가 업데이트 된다.\n가중치 업뎃수 배치수 * epoch궁금한게 있습니다. y를 tensor로 바꿀 때 .view(-1,1)을 붙이지 않는 이유가 뭔가요? 맞다 원래 이차원으로 바꿔야한다 but 현재는 이미 데이터가 2차원이다.n_class = 10 model = nn.Sequential( nn.Conv2d(3, 32, kernel_size=3, stride=1, padding=1), # input = 33232, output = 323232\nnn.ReLU(),\nnn.MaxPool2d(kernel_size=2), # input = 323232, output = 321616 nn.Conv2d(32, 64, kernel_size=3, stride=1, padding=1), # input = 321616, output = 641616\nnn.ReLU(),\nnn.MaxPool2d(kernel_size=2), # input = 641616, output = 6488 nn.Flatten(),\nnn.Linear( 6488, 128), # 이전 레이어에서의 출력 수를 계산해서 입력으로 넣어야 함.\nnn.ReLU(),\nnn.Linear(128, n_class)\n).to(device)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"모델 구조 설계","level":1,"id":"모델_구조_설계_0"},{"heading":"첫번째, CNN + Maxpool","level":1,"id":"첫번째,_CNN_+_Maxpool_0"},{"heading":"두번째, CNN + Maxpool","level":1,"id":"두번째,_CNN_+_Maxpool_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/딥러닝.html","pathToRoot":"..","attachments":[],"createdTime":1744160881954,"modifiedTime":1744169208874,"sourceSize":947,"sourcePath":"100-데이터분석 & AI/딥러닝.md","exportPath":"100-데이터분석-&-ai/딥러닝.html","showInTree":true,"treeOrder":104,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/모델성능최적화.html":{"title":"모델성능최적화","icon":"","description":"최근경향가능한복잡한모델을설계해라\n과적합을방지하는규제기법을사용하자\n3가지가잇음용\n미리멈춤\n쿠다 프로세스를 사용하려면 데이터를 gpu 메모리에 먼저 올려야 합니다cnn 지역적인 특징을 이용해서 탐색\n즉 필터링한단소리임\n그걸우리는 특징추출기라고함딥러닝특 백프로파게이션을 이용해서 가중치를 업데이트함필터 = 체널","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/모델성능최적화.html","pathToRoot":"..","attachments":[],"createdTime":1744077075662,"modifiedTime":1744096607513,"sourceSize":455,"sourcePath":"100-데이터분석 & AI/모델성능최적화.md","exportPath":"100-데이터분석-&-ai/모델성능최적화.html","showInTree":true,"treeOrder":105,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/분석.html":{"title":"분석","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.kaggle.com/code/yehqysns/xgb-lgbm-ensemble\" target=\"_self\">https://www.kaggle.com/code/yehqysns/xgb-lgbm-ensemble</a>\nparquet : (Column) 기반으로 데이터를 저장하는 오픈소스 파일 포맷 주로 빅데이터 분석, 분산 처리 환경(Hadoop, Spark 등)에서 많이 사용 k-fold 사용 : k = 3 OOF라고도함 (kfold가 oof기법중에 하난가봄) Fold 1: 훈련[0,1,2,3,4,5,6] 검증[7,8,9]\nFold 2: 훈련[0,1,2,7,8,9] 검증[3,4,5,6]\nFold 3: 훈련[3,4,5,6,7,8,9] 검증[0,1,2] RMSE : 예측값과 실제값의 오차 성능 평가: 실제&nbsp;테스트&nbsp;데이터 없이도&nbsp;모델 성능을&nbsp;정확히 측정 앙상블:&nbsp;여러 모델의 예측을 조합할&nbsp;때 사용 과적합&nbsp;방지: 훈련&nbsp;데이터로&nbsp;직접&nbsp;평가하지&nbsp;않음 각 fold 별로 모델학습 XGBoost, LightGBM 사용 시계열 데이터 특성 : shuffle=False(시간도 중요한 데이터일수잇기에) 지점별 cutoff 사용 (지점별로 패턴이 다르 수 있음, 시장특성이 다를 수 있음) FULL : 장기\n50 : 최근 패턴에 최적화 슬라이스 별 앙상블사용 단순평균 ,가중평균 해서 비교함\n평가는 pearsonr 사용 pearsonr : 패턴이 유사한가 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"데이터 로딩","level":2,"id":"데이터_로딩_0"},{"heading":"모델 학습 , 예측","level":2,"id":"모델_학습_,_예측_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/분석.html","pathToRoot":"..","attachments":[],"createdTime":1751544157871,"modifiedTime":1751545929144,"sourceSize":1249,"sourcePath":"100-데이터분석 & AI/분석.md","exportPath":"100-데이터분석-&-ai/분석.html","showInTree":true,"treeOrder":106,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/신경망.html":{"title":"신경망","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://namu.wiki/w/%EC%9D%B8%EA%B3%B5%EC%8B%A0%EA%B2%BD%EB%A7%9D\" target=\"_self\">https://namu.wiki/w/%EC%9D%B8%EA%B3%B5%EC%8B%A0%EA%B2%BD%EB%A7%9D</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/신경망.html","pathToRoot":"..","attachments":[],"createdTime":1729242555432,"modifiedTime":1729242572598,"sourceSize":65,"sourcePath":"100-데이터분석 & AI/신경망.md","exportPath":"100-데이터분석-&-ai/신경망.html","showInTree":true,"treeOrder":107,"backlinks":["100-데이터분석-&-ai/인공지능(ai).html"],"type":"markdown"},"100-데이터분석-&-ai/연관성-분석.html":{"title":"연관성 분석","icon":"","description":"\n기준 지지도 : 전체서 특정사건이 나타날 확률\n신뢰도 : 특정사건이 다른사건에 대하여 나타는ㄴ 확률\n향상도(lift) : 두규칙의 상관관계 1이면독림\n1이상 같이일어날확률높음 이하 안일어날확률높음 향상도 = 신뢰도 / 지지도 알고리즘 apriori : 최소지지도 이상의 빈발항목집합만 찾아서 연관규칙을 계산 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/연관성-분석.html","pathToRoot":"..","attachments":[],"createdTime":1743786411366,"modifiedTime":1743786646588,"sourceSize":427,"sourcePath":"100-데이터분석 & AI/연관성 분석.md","exportPath":"100-데이터분석-&-ai/연관성-분석.html","showInTree":true,"treeOrder":108,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/의사결정나무.html":{"title":"의사결정나무","icon":"","description":"\n노드내는 동질성커지고 외부는 이질성 커지는 방향으로\n시장조사 광고조사\n불순도가 낮을수록 좋다. 이 불순도 차이를 낮추는 것(순도를 높이는것)을 정보획득이라 함\n이게 곧 분리 기준임\n측정 방식에 따라 나뉨 분류나무 : 목표변수가 이산형 분리 기준 카이제곱통계량 <a class=\"internal-link\" data-href=\"p-value.md\" href=\"100-데이터분석-&amp;-ai/p-value.html\" target=\"_self\" rel=\"noopener nofollow\">p-value</a> 커야지 불순도가 낮음 지니지수 특정집합에서 한항목을 뽑아 무작위로 라벨추정시 틀릴확률 엔트로피 지수 무질서 정도에 대한 측도\n로그들어가잇음 회귀나무 : 목표변수가 연속형 분리 기준 분산분석 F-통계량의 p값 커야지 불순도 낮음 분산 감소량 감소량이 최대화 되면 불순도가 낮음 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"종류","level":3,"id":"종류_0"},{"heading":"대표알고리즘","level":3,"id":"대표알고리즘_0"}],"links":["100-데이터분석-&-ai/p-value.html"],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/의사결정나무.html","pathToRoot":"..","attachments":[],"createdTime":1743783600547,"modifiedTime":1743785059601,"sourceSize":996,"sourcePath":"100-데이터분석 & AI/의사결정나무.md","exportPath":"100-데이터분석-&-ai/의사결정나무.html","showInTree":true,"treeOrder":109,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/인공신경망(ann).html":{"title":"인공신경망(ANN)","icon":"","description":"\n구성요소 퍼셉트론 선형분류알고리즘\n층을 이룰수 있음 여러층이면 CNN 활성화함수 입력신호의 총합을 출력신호로 변환\n기존 : 계단함수 사용 0or 1 딥러닝 Sigmoid : 참에 가까워지면 0.5- 1 , 거짓 0-0.5\nRelu : 0보다 크면 그대로 이하 0로 출력 가중치 : 노드와의 연결계수\n학습순서 미니배치\n가중치매개변수기울기산출\n매개변수 갱신 오차역 전파 : 오차를 출력 &gt; 입력층으로 전달 가중치 매개변수 기울기를 미분 진행하지않고\n연쇄법칙을 활용한 역전파를 통해 가중치 편향계싼 과적합의 문제 가중치 감소\n드롭아웃: 은닉층뉴런 삭제\n초 매계변수 최적화 심층 신경망(DNN) : 입력층과 출력층 사이에 여러 개의 은닉층들로 이루어진 인공 신경망\n합성곱 신경망(CNN) : 최소한의 전처리를 사용하도록 설계된 다계층 퍼셉트론의 한 종류\n순환 신경망(RNN) : 인공 신경망을 구성하는 유닛 사이의 연결이 directed cycle 을 구성\n심층 신뢰 신경망(DBN) : 잠재변수의 다중계층으로 이루어진 심층 신경망\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"종류","level":3,"id":"종류_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/인공신경망(ann).html","pathToRoot":"..","attachments":[],"createdTime":1743785553403,"modifiedTime":1743786847890,"sourceSize":1266,"sourcePath":"100-데이터분석 & AI/인공신경망(ANN).md","exportPath":"100-데이터분석-&-ai/인공신경망(ann).html","showInTree":true,"treeOrder":110,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/인공지능(ai).html":{"title":"인공지능(AI)","icon":"","description":"머신러닝 ⊂ AI\n지도학습 입력데이터와 정답이 주어짐\n분류\n회귀 비지도학습 레이블이 없는 데이터로 학습, 패턴이나 구조를 찾아냄\n군집화\n차원축소 강화학습 에이전트와 환경과 상호작용하면서 보상을 최대화 하기위해 행동\n강화학습은 기술적 기법알고리즘을 포함하므로 학습에따른 , 기법에따른 분류 두가지 모두 성립가능하다. 한가지기법만쓰지 않고 기법이 속해있을수잇다.\n딥러닝 다층 신경망기법이용\n딥러닝 ⊂ <a class=\"internal-link\" data-href=\"신경망.md\" href=\"100-데이터분석-&amp;-ai/신경망.html\" target=\"_self\" rel=\"noopener nofollow\">신경망</a>\n주요모델 : CNN, RNN, LSTM\n자연어처리(NLP) transformer 모델 이미지 인식 등에 사용 전통적인 머신러닝 회귀\n결정트리 강화학습 Q-learning 군집화 k-평균, 계층적군집화 차원축소\n생성모델 거의다 딥러닝씀 아래 예시 둘다 딥러닝\nVAE(Autoencoder)\nGAN gpt NLP(자연어처리)\n기법 : 딥러닝\n학습방법 : 지도학습 &amp; 자연어처리방법 transformer기법 알파고 기법 : 강화학습 + 약간의 딥러닝(CNN) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"학습방식 따른 분류","level":3,"id":"학습방식_따른_분류_0"},{"heading":"기법 (기술적 접근)","level":3,"id":"기법_(기술적_접근)_0"},{"heading":"대중적인 ai","level":3,"id":"대중적인_ai_0"}],"links":["100-데이터분석-&-ai/신경망.html"],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/인공지능(ai).html","pathToRoot":"..","attachments":[],"createdTime":1729236545469,"modifiedTime":1729318532998,"sourceSize":1258,"sourcePath":"100-데이터분석 & AI/인공지능(AI).md","exportPath":"100-데이터분석-&-ai/인공지능(ai).html","showInTree":true,"treeOrder":111,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/자료-형태에-따른분석.html":{"title":"자료 형태에 따른분석","icon":"","description":"\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/자료-형태에-따른분석.html","pathToRoot":"..","attachments":[],"createdTime":1743787283186,"modifiedTime":1743787738303,"sourceSize":319,"sourcePath":"100-데이터분석 & AI/자료 형태에 따른분석.md","exportPath":"100-데이터분석-&-ai/자료-형태에-따른분석.html","showInTree":true,"treeOrder":112,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/카이제곱.html":{"title":"카이제곱","icon":"","description":"신뢰구간이나 가설검정의 모델에서 자주 등장","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/카이제곱.html","pathToRoot":"..","attachments":[],"createdTime":1743784222077,"modifiedTime":1743784285875,"sourceSize":62,"sourcePath":"100-데이터분석 & AI/카이제곱.md","exportPath":"100-데이터분석-&-ai/카이제곱.html","showInTree":true,"treeOrder":113,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/평가.html":{"title":"평가","icon":"","description":"precision - recall curve\nroc curve","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/평가.html","pathToRoot":"..","attachments":[],"createdTime":1744181515843,"modifiedTime":1744181542191,"sourceSize":35,"sourcePath":"100-데이터분석 & AI/평가.md","exportPath":"100-데이터분석-&-ai/평가.html","showInTree":true,"treeOrder":114,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/ai-기본-코드.html":{"title":"ai 기본 코드","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/ai-기본-코드.html","pathToRoot":"..","attachments":[],"createdTime":1744174496956,"modifiedTime":1744174496956,"sourceSize":0,"sourcePath":"100-데이터분석 & AI/ai 기본 코드.md","exportPath":"100-데이터분석-&-ai/ai-기본-코드.html","showInTree":true,"treeOrder":115,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/callback-,함수-체이닝-차이.html":{"title":"callback ,함수 체이닝 차이","icon":"","description":"\n콜백 함수(callback function)는 \"다른 함수의 인자로 전달되어, 그 함수 내부에서 호출되는 함수\"입니다<a data-tooltip-position=\"top\" aria-label=\"https://1sangcoder.tistory.com/228\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://1sangcoder.tistory.com/228\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@dbstjrwnekd/callbackfunction\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@dbstjrwnekd/callbackfunction\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://dodo-itstory.tistory.com/2\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dodo-itstory.tistory.com/2\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://dbdj.tistory.com/15\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dbdj.tistory.com/15\" target=\"_self\">9</a>. <br>콜백 함수는 주로 특정 시점이나 이벤트가 발생했을 때 실행되도록 설계됩니다. 예를 들어, 반복문에서 각 요소마다 실행할 작업, 비동기 작업이 끝났을 때 실행할 함수 등이 콜백 함수입니다<a data-tooltip-position=\"top\" aria-label=\"https://sungmin93.tistory.com/87\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://sungmin93.tistory.com/87\" target=\"_self\">7</a><a data-tooltip-position=\"top\" aria-label=\"https://strap.tistory.com/entry/%EB%B9%84%EA%B5%90-Callback%ED%95%A8%EC%88%98-Promise%ED%95%A8%EC%88%98\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://strap.tistory.com/entry/%EB%B9%84%EA%B5%90-Callback%ED%95%A8%EC%88%98-Promise%ED%95%A8%EC%88%98\" target=\"_self\">8</a>. <br>함수 합성(Composition)은 여러 함수를 조합해 새로운 함수를 만드는 방식입니다. 한 함수의 결과를 다음 함수의 입력으로 넘기는 구조죠<a data-tooltip-position=\"top\" aria-label=\"https://www.jaenung.net/tree/1438\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.jaenung.net/tree/1438\" target=\"_self\">6</a>. 체이닝(Chaining)은 여러 함수를 연속적으로 호출해, 각 결과를 다음 함수에 넘기는 패턴입니다. 파이프라인처럼 동작합니다. <br>콜백 함수는 \"내가 이 함수(콜백)를 너(고차 함수)에게 줄 테니, 네가 필요할 때 불러줘\"라는 구조입니다. 즉, 제어권이 고차 함수에 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://1sangcoder.tistory.com/228\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://1sangcoder.tistory.com/228\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@dbstjrwnekd/callbackfunction\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@dbstjrwnekd/callbackfunction\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://dodo-itstory.tistory.com/2\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dodo-itstory.tistory.com/2\" target=\"_self\">5</a>. 함수 합성/체이닝은 \"이 함수의 결과를 다음 함수에 넘기고, 그 결과를 또 다음 함수에 넘긴다\"는 식으로, 데이터가 함수들을 따라 순차적으로 흘러갑니다. 제어권은 합성된 함수의 실행 흐름에 있습니다. 콜백 함수 예시pythondef repeat(n, callback): for i in range(n): callback(i) def print_num(x): print(x) repeat(3, print_num) # print_num이 repeat의 콜백함수 합성/체이닝 예시pythondef f(x): return x + 1 def g(x): return x * 2 def compose(f, g): return lambda x: f(g(x)) h = compose(f, g) print(h(3)) # 7 (3*2=6, 6+1=7)\n콜백 함수는 \"내가 언제 불릴지 몰라, 네가 필요할 때 불러줘!\" (제어권이 외부에 있음) 함수 합성/체이닝은 \"내 결과를 다음 함수에 넘길게, 쭉쭉 연결해서 실행해!\" (데이터가 함수들을 따라 흐름) <br>이처럼, 콜백은 실행 시점의 제어권과 이벤트 중심이고, 합성/체이닝은 데이터 흐름과 함수 연결에 초점을 둡니다<a data-tooltip-position=\"top\" aria-label=\"https://1sangcoder.tistory.com/228\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://1sangcoder.tistory.com/228\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@dbstjrwnekd/callbackfunction\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@dbstjrwnekd/callbackfunction\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://www.jaenung.net/tree/1438\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.jaenung.net/tree/1438\" target=\"_self\">6</a>.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@hayeooooon/%EC%A4%91%EC%B2%A9-%ED%95%A8%EC%88%98-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98\" target=\"_self\">https://velog.io/@hayeooooon/%EC%A4%91%EC%B2%A9-%ED%95%A8%EC%88%98-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://1sangcoder.tistory.com/228\" target=\"_self\">https://1sangcoder.tistory.com/228</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@dbstjrwnekd/callbackfunction\" target=\"_self\">https://velog.io/@dbstjrwnekd/callbackfunction</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/\" target=\"_self\">https://saengmotmi.netlify.app/javascript-study/2021-08-23-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dodo-itstory.tistory.com/2\" target=\"_self\">https://dodo-itstory.tistory.com/2</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.jaenung.net/tree/1438\" target=\"_self\">https://www.jaenung.net/tree/1438</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://sungmin93.tistory.com/87\" target=\"_self\">https://sungmin93.tistory.com/87</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://strap.tistory.com/entry/%EB%B9%84%EA%B5%90-Callback%ED%95%A8%EC%88%98-Promise%ED%95%A8%EC%88%98\" target=\"_self\">https://strap.tistory.com/entry/%EB%B9%84%EA%B5%90-Callback%ED%95%A8%EC%88%98-Promise%ED%95%A8%EC%88%98</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dbdj.tistory.com/15\" target=\"_self\">https://dbdj.tistory.com/15</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://jeongeuni.tistory.com/109\" target=\"_self\">https://jeongeuni.tistory.com/109</a>\n<br>Perplexity로부터의 답변: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"함수 합성/체이닝과 콜백 함수의 차이","level":2,"id":"함수_합성/체이닝과_콜백_함수의_차이_0"},{"heading":"콜백 함수란?","level":2,"id":"콜백_함수란?_0"},{"heading":"함수 합성/체이닝이란?","level":2,"id":"함수_합성/체이닝이란?_0"},{"heading":"핵심 차이점","level":2,"id":"핵심_차이점_0"},{"heading":"예시 코드 비교","level":2,"id":"예시_코드_비교_0"},{"heading":"요약","level":2,"id":"요약_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/callback-,함수-체이닝-차이.html","pathToRoot":"..","attachments":[],"createdTime":1748170092828,"modifiedTime":1748170122636,"sourceSize":4877,"sourcePath":"100-데이터분석 & AI/callback ,함수 체이닝 차이.md","exportPath":"100-데이터분석-&-ai/callback-,함수-체이닝-차이.html","showInTree":true,"treeOrder":116,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html":{"title":"LLM이 복잡해질수록 정답률이 0에 가까워진다는 논문 설명","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://news.hada.io/topic?id=21333\" target=\"_self\">https://news.hada.io/topic?id=21333</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","pathToRoot":"..","attachments":[],"createdTime":1749431917544,"modifiedTime":1749431920276,"sourceSize":35,"sourcePath":"100-데이터분석 & AI/LLM이 복잡해질수록 정답률이 0에 가까워진다는 논문 설명.md","exportPath":"100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","showInTree":true,"treeOrder":117,"backlinks":[],"type":"markdown"},"100-데이터분석-&-ai/p-value.html":{"title":"p-value","icon":"","description":"\np값: 이 값이 우연히 일어날 가능성 크다 : 우연히 일어날 가능성이 크다\n작다 : 우연히 일어날 가능성이 작다\n여기서 주어는 귀무가설임 차이가 유의(유의미)하다고 판단하는 지표\n보통 0.05 나 0.01기준\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/p-value.html","pathToRoot":"..","attachments":[],"createdTime":1743783888343,"modifiedTime":1743784080848,"sourceSize":280,"sourcePath":"100-데이터분석 & AI/p-value.md","exportPath":"100-데이터분석-&-ai/p-value.html","showInTree":true,"treeOrder":118,"backlinks":["100-데이터분석-&-ai/의사결정나무.html"],"type":"markdown"},"100-데이터분석-&-ai/runnable.html":{"title":"runnable","icon":"","description":"Runnable은 LangChain에서 실행 가능한 컴포넌트를 의미합니다. 즉, 입력을 받아서 어떤 처리를 수행한 뒤, 결과를 반환하거나 다음 컴포넌트로 넘기는 역할을 하는 객체입니다. LangChain에서 체인(chain)이나 에이전트(agent) 등 다양한 구성 요소를 만들 때, 각 단계를 캡슐화하여 독립적으로 실행하거나 조합할 수 있도록 해주는 핵심 개념입니다<a data-tooltip-position=\"top\" aria-label=\"https://digitalbourgeois.tistory.com/393\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://digitalbourgeois.tistory.com/393\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://recording-it.tistory.com/109\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://recording-it.tistory.com/109\" target=\"_self\">6</a>.주요 특징 및 역할\n<br>표준화된 인터페이스: 모든 Runnable 객체는 invoke라는 메서드를 통해 실행됩니다. 이로써 다양한 컴포넌트(프롬프트, 모델, 파서 등)를 일관된 방식으로 다룰 수 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://wikidocs.net/231187\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/231187\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://recording-it.tistory.com/109\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://recording-it.tistory.com/109\" target=\"_self\">6</a>. <br>조합 가능성: 여러 Runnable 객체를 파이프라인처럼 연결(예: | 연산자 사용)하여 복잡한 워크플로우를 손쉽게 구성할 수 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://mobicon.tistory.com/624\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mobicon.tistory.com/624\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://recording-it.tistory.com/109\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://recording-it.tistory.com/109\" target=\"_self\">6</a>. <br>유연성: 동기/비동기, 배치, 스트리밍 등 다양한 실행 방식을 지원합니다. 예를 들어, invoke(단일 입력), batch(여러 입력), stream(스트리밍) 메서드를 제공합니다<a data-tooltip-position=\"top\" aria-label=\"https://wikidocs.net/231187\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/231187\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://mobicon.tistory.com/624\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mobicon.tistory.com/624\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@jjlee6496/Functions-Tools-and-agents-with-Langchain-2\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@jjlee6496/Functions-Tools-and-agents-with-Langchain-2\" target=\"_self\">8</a>. <br>재사용성: Runnable 객체는 독립적으로 정의하고, 여러 곳에서 재사용할 수 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://recording-it.tistory.com/109\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://recording-it.tistory.com/109\" target=\"_self\">6</a>. Runnable의 주요 메서드\ninvoke(input): 입력을 받아 결과를 반환(동기 실행) batch(inputs): 여러 입력을 한 번에 처리 stream(input): 결과를 스트리밍 방식으로 반환 ainvoke, abatch, astream: 각각의 비동기 버전 Runnable의 종류 예시\n간단한 예시 코드pythonfrom langchain_core.runnables import RunnableLambda # 숫자에 1 더하고, 2 곱하는 두 Runnable 정의 r1 = RunnableLambda(lambda x: x + 1) r2 = RunnableLambda(lambda x: x * 2) # 순차적으로 연결 sequence = r1 | r2 print(sequence.invoke(1)) # 결과: 4 (1+1=2, 2*2=4)정리\nRunnable은 LangChain에서 데이터 흐름의 각 단계를 담당하는 실행 단위입니다. 입력을 받아 처리한 뒤 결과를 반환하거나, 다음 단계로 넘기는 역할을 합니다. 다양한 실행 방식(동기/비동기, 배치, 스트림)과 조합, 재사용이 가능합니다. <br>복잡한 LLM 워크플로우를 간결하고 효율적으로 구성할 수 있게 해주는 LangChain의 핵심 개념입니다<a data-tooltip-position=\"top\" aria-label=\"https://wikidocs.net/231187\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/231187\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://digitalbourgeois.tistory.com/393\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://digitalbourgeois.tistory.com/393\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://mobicon.tistory.com/624\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mobicon.tistory.com/624\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://recording-it.tistory.com/109\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://recording-it.tistory.com/109\" target=\"_self\">6</a>. <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://elyire.github.io/posts/LCEL%EA%B3%BC-runnable-%EB%B8%94%EB%A1%9C%EA%B7%B8/\" target=\"_self\">https://elyire.github.io/posts/LCEL%EA%B3%BC-runnable-%EB%B8%94%EB%A1%9C%EA%B7%B8/</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/231187\" target=\"_self\">https://wikidocs.net/231187</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://digitalbourgeois.tistory.com/393\" target=\"_self\">https://digitalbourgeois.tistory.com/393</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=0X4Ks_nJUt8\" target=\"_self\">https://www.youtube.com/watch?v=0X4Ks_nJUt8</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mobicon.tistory.com/624\" target=\"_self\">https://mobicon.tistory.com/624</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://recording-it.tistory.com/109\" target=\"_self\">https://recording-it.tistory.com/109</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://rfriend.tistory.com/827\" target=\"_self\">https://rfriend.tistory.com/827</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@jjlee6496/Functions-Tools-and-agents-with-Langchain-2\" target=\"_self\">https://velog.io/@jjlee6496/Functions-Tools-and-agents-with-Langchain-2</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=kP7hyU_idaM\" target=\"_self\">https://www.youtube.com/watch?v=kP7hyU_idaM</a>\n<br>Perplexity로부터의 답변: <a data-tooltip-position=\"top\" aria-label=\"https://www.perplexity.ai/search/pplx.ai/share\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.perplexity.ai/search/pplx.ai/share\" target=\"_self\">pplx.ai/share</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"LangChain에서 Runnable이란?","level":2,"id":"LangChain에서_Runnable이란?_0"},{"heading":"Citations:","level":3,"id":"Citations_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"100-데이터분석-&-ai/runnable.html","pathToRoot":"..","attachments":[],"createdTime":1748170187069,"modifiedTime":1748170201713,"sourceSize":4565,"sourcePath":"100-데이터분석 & AI/runnable.md","exportPath":"100-데이터분석-&-ai/runnable.html","showInTree":true,"treeOrder":119,"backlinks":[],"type":"markdown"},"200-웹개발/공식문서/react_공식문서를-나의-말로...html":{"title":"react_공식문서를 나의 말로..","icon":"","description":"당연한것은 버릴예정\n여기도 컴포넌트 분리가 단일책임원칙을 반영하고자 나온 듯하다. props : 데이터를 넘겨주는 컴포넌트를 구현가능 정적임 계층구조 설계방향 top-down : in small project\nbottom-up : in large project 테스트 작성하면서 개발하기 쉬움 state는 앱이 기억해야하는 변경할 수 있는 데이터의 \"최소\" 집합 꼭 필요한것만 써라\n중복 배제원칙이 가장 중요하다 나머진 실시간으로 계산해라. ex) 쇼핑리스트, 상품개수를 둘다 state값으로 가지지말고 쇼핑리스트만 state값으로 가져라.\nstate인지 결정 하는 기준 시간이 지나도 변하지 않는가?\n부모로부터 props를 통해 전달되는가?\n다를 state와 props를 가지고 계산 가능한가? 모두다 No면 state. state의 위치 정하느기분 해당 state기반으로 렌더링 하는 모든 컴포넌트를 찾음\n가장 가까운 공통되는 부모컴포넌트 찾음 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"think reactful","level":1,"id":"think_reactful_0"},{"heading":"with ui","level":3,"id":"with_ui_0"},{"heading":"계층적","level":3,"id":"계층적_0"},{"heading":"상호작용(state)","level":3,"id":"상호작용(state)_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/공식문서/react_공식문서를-나의-말로...html","pathToRoot":"../..","attachments":[],"createdTime":1733229261242,"modifiedTime":1733640163177,"sourceSize":1128,"sourcePath":"200-웹개발/공식문서/react_공식문서를 나의 말로...md","exportPath":"200-웹개발/공식문서/react_공식문서를-나의-말로...html","showInTree":true,"treeOrder":122,"backlinks":[],"type":"markdown"},"200-웹개발/공식문서/vite.html":{"title":"vite","icon":"","description":"\n웹 개발경험에 초점을 맞춘 빌드 프로젝트\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"특징","level":1,"id":"특징_0"},{"heading":"다양한기능 제공","level":2,"id":"다양한기능_제공_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/공식문서/vite.html","pathToRoot":"../..","attachments":[],"createdTime":1735472884616,"modifiedTime":1735473186054,"sourceSize":95,"sourcePath":"200-웹개발/공식문서/vite.md","exportPath":"200-웹개발/공식문서/vite.html","showInTree":true,"treeOrder":123,"backlinks":[],"type":"markdown"},"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html":{"title":"스크린샷 2023-10-18 오후 8.12.58","icon":"","description":"<img src=\"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html","pathToRoot":"../..","attachments":["200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html"],"createdTime":1697627582146,"modifiedTime":1697627582146,"sourceSize":44919,"sourcePath":"200-웹개발/assets/스크린샷 2023-10-18 오후 8.12.58.png","exportPath":"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html","showInTree":true,"treeOrder":125,"backlinks":["200-웹개발/js)-math.html"],"type":"attachment"},"200-웹개발/assets/pasted-image-20231114151038.html":{"title":"Pasted image 20231114151038","icon":"","description":"<img src=\"200-웹개발/assets/pasted-image-20231114151038.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/pasted-image-20231114151038.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20231114151038.html"],"createdTime":1699942238650,"modifiedTime":1699942238650,"sourceSize":246475,"sourcePath":"200-웹개발/assets/Pasted image 20231114151038.png","exportPath":"200-웹개발/assets/pasted-image-20231114151038.html","showInTree":true,"treeOrder":126,"backlinks":["200-웹개발/react-query.html"],"type":"attachment"},"200-웹개발/assets/pasted-image-20240628175728.html":{"title":"Pasted image 20240628175728","icon":"","description":"<img src=\"200-웹개발/assets/pasted-image-20240628175728.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/pasted-image-20240628175728.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240628175728.html"],"createdTime":1719830763414,"modifiedTime":1719830763416,"sourceSize":250658,"sourcePath":"200-웹개발/assets/Pasted image 20240628175728.png","exportPath":"200-웹개발/assets/pasted-image-20240628175728.html","showInTree":true,"treeOrder":127,"backlinks":["200-웹개발/vue/vue3_composition.html"],"type":"attachment"},"200-웹개발/assets/pasted-image-20240701112747.html":{"title":"Pasted image 20240701112747","icon":"","description":"<img src=\"200-웹개발/assets/pasted-image-20240701112747.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/pasted-image-20240701112747.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240701112747.html"],"createdTime":1719830763416,"modifiedTime":1719830763417,"sourceSize":152978,"sourcePath":"200-웹개발/assets/Pasted image 20240701112747.png","exportPath":"200-웹개발/assets/pasted-image-20240701112747.html","showInTree":true,"treeOrder":128,"backlinks":["200-웹개발/웹팩.html"],"type":"attachment"},"200-웹개발/assets/pasted-image-20240701114022.html":{"title":"Pasted image 20240701114022","icon":"","description":"<img src=\"200-웹개발/assets/pasted-image-20240701114022.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/pasted-image-20240701114022.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240701114022.html"],"createdTime":1719830763417,"modifiedTime":1719830763418,"sourceSize":228394,"sourcePath":"200-웹개발/assets/Pasted image 20240701114022.png","exportPath":"200-웹개발/assets/pasted-image-20240701114022.html","showInTree":true,"treeOrder":129,"backlinks":["200-웹개발/웹팩.html"],"type":"attachment"},"200-웹개발/assets/pasted-image-20240701114052.html":{"title":"Pasted image 20240701114052","icon":"","description":"<img src=\"200-웹개발/assets/pasted-image-20240701114052.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/pasted-image-20240701114052.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240701114052.html"],"createdTime":1719830763419,"modifiedTime":1719830763420,"sourceSize":201623,"sourcePath":"200-웹개발/assets/Pasted image 20240701114052.png","exportPath":"200-웹개발/assets/pasted-image-20240701114052.html","showInTree":true,"treeOrder":130,"backlinks":["200-웹개발/웹팩.html"],"type":"attachment"},"200-웹개발/assets/pasted-image-20240702095610.html":{"title":"Pasted image 20240702095610","icon":"","description":"<img src=\"200-웹개발/assets/pasted-image-20240702095610.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/assets/pasted-image-20240702095610.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240702095610.html"],"createdTime":1720081060540,"modifiedTime":1720081060540,"sourceSize":36332,"sourcePath":"200-웹개발/assets/Pasted image 20240702095610.png","exportPath":"200-웹개발/assets/pasted-image-20240702095610.html","showInTree":true,"treeOrder":131,"backlinks":["200-웹개발/vue/vue의-상태관리툴.html"],"type":"attachment"},"200-웹개발/assets/vue_정리-20240627140705844.html":{"title":"vue_정리-20240627140705844","icon":"","description":"<img src=\"200-웹개발/assets/vue_정리-20240627140705844.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"200-웹개발/assets/vue_정리-20240627140705844.png","fullURL":"200-웹개발/assets/vue_정리-20240627140705844.html","pathToRoot":"../..","attachments":["200-웹개발/assets/vue_정리-20240627140705844.html"],"createdTime":1719464825786,"modifiedTime":1719464825786,"sourceSize":32654,"sourcePath":"200-웹개발/assets/vue_정리-20240627140705844.png","exportPath":"200-웹개발/assets/vue_정리-20240627140705844.html","showInTree":true,"treeOrder":132,"backlinks":["200-웹개발/vue/vue2_기본정리.html"],"type":"attachment"},"200-웹개발/assets/vue-20240627101400036.html":{"title":"vue-20240627101400036","icon":"","description":"<img src=\"200-웹개발/assets/vue-20240627101400036.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"200-웹개발/assets/vue-20240627101400036.png","fullURL":"200-웹개발/assets/vue-20240627101400036.html","pathToRoot":"../..","attachments":["200-웹개발/assets/vue-20240627101400036.html"],"createdTime":1719450839994,"modifiedTime":1719450839995,"sourceSize":129929,"sourcePath":"200-웹개발/assets/vue-20240627101400036.png","exportPath":"200-웹개발/assets/vue-20240627101400036.html","showInTree":true,"treeOrder":133,"backlinks":["200-웹개발/vue/vue2_기본정리.html"],"type":"attachment"},"200-웹개발/vue/assets/pasted-image-20240702135541.html":{"title":"Pasted image 20240702135541","icon":"","description":"<img src=\"200-웹개발/vue/assets/pasted-image-20240702135541.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/assets/pasted-image-20240702135541.html","pathToRoot":"../../..","attachments":["200-웹개발/vue/assets/pasted-image-20240702135541.html"],"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":1864,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240702135541.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240702135541.html","showInTree":true,"treeOrder":136,"backlinks":["200-웹개발/vue/vue_ref,reactive.html"],"type":"attachment"},"200-웹개발/vue/assets/pasted-image-20240702135910.html":{"title":"Pasted image 20240702135910","icon":"","description":"<img src=\"200-웹개발/vue/assets/pasted-image-20240702135910.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/assets/pasted-image-20240702135910.html","pathToRoot":"../../..","attachments":["200-웹개발/vue/assets/pasted-image-20240702135910.html"],"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":3348,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240702135910.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240702135910.html","showInTree":true,"treeOrder":137,"backlinks":["200-웹개발/vue/vue_ref,reactive.html"],"type":"attachment"},"200-웹개발/vue/assets/pasted-image-20240821112059.html":{"title":"Pasted image 20240821112059","icon":"","description":"<img src=\"200-웹개발/vue/assets/pasted-image-20240821112059.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/assets/pasted-image-20240821112059.html","pathToRoot":"../../..","attachments":["200-웹개발/vue/assets/pasted-image-20240821112059.html"],"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":25935,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240821112059.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240821112059.html","showInTree":true,"treeOrder":138,"backlinks":["200-웹개발/vue/햇갈렷던것..-반응성관련.html"],"type":"attachment"},"200-웹개발/vue/assets/pasted-image-20240821112757.html":{"title":"Pasted image 20240821112757","icon":"","description":"<img src=\"200-웹개발/vue/assets/pasted-image-20240821112757.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/assets/pasted-image-20240821112757.html","pathToRoot":"../../..","attachments":["200-웹개발/vue/assets/pasted-image-20240821112757.html"],"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":29615,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240821112757.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240821112757.html","showInTree":true,"treeOrder":139,"backlinks":["200-웹개발/vue/햇갈렷던것..-반응성관련.html"],"type":"attachment"},"200-웹개발/vue/무제-파일.html":{"title":"무제 파일","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://v2.ko.vuejs.org/v2/cookbook/adding-instance-properties.html\" target=\"_self\">https://v2.ko.vuejs.org/v2/cookbook/adding-instance-properties.html</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ko.vuejs.org/guide/reusability/plugins\" target=\"_self\">https://ko.vuejs.org/guide/reusability/plugins</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"인스턴스 프로퍼티 추가하기","level":1,"id":"인스턴스_프로퍼티_추가하기_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/무제-파일.html","pathToRoot":"../..","attachments":[],"createdTime":1721825613063,"modifiedTime":1721825613063,"sourceSize":160,"sourcePath":"200-웹개발/vue/무제 파일.md","exportPath":"200-웹개발/vue/무제-파일.html","showInTree":true,"treeOrder":140,"backlinks":[],"type":"markdown"},"200-웹개발/vue/할일.html":{"title":"할일","icon":"","description":"ㄴㄴ\n너무길어서표시가안되는것임。","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/할일.html","pathToRoot":"../..","attachments":[],"createdTime":1721825613063,"modifiedTime":1721825613063,"sourceSize":51,"sourcePath":"200-웹개발/vue/할일.md","exportPath":"200-웹개발/vue/할일.html","showInTree":true,"treeOrder":141,"backlinks":[],"type":"markdown"},"200-웹개발/vue/햇갈렷던것..-반응성관련.html":{"title":"햇갈렷던것.. 반응성관련","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://junglast.com/blog/vue3-props-reactive\" target=\"_self\">https://junglast.com/blog/vue3-props-reactive</a>const a = reactive({ count: 0, someObject: { someProperty: 'someValue', otherObject: { otherProperty: 'otherValue' } } }); const b = ref({ count: 0, someObject: { someProperty: 'someValue', otherObject: { otherProperty: 'otherValue' } } }); const c = toRefs(a); const d = reactive(a);\n<br><img src=\"200-웹개발/vue/assets/pasted-image-20240821112059.png\" target=\"_self\">=&gt; toRefs는 deep하게 반응성이 유지되지않는다.\n걍 toRef쓸바에는 reactive나 머그런거롤 덮어씌우자.const a = reactive({ count: 0, someObject: { someProperty: 'someValue', otherObject: { otherProperty: 'otherValue' } } }); const b = ref(a); const c = {...a}; const d = reactive(a);\n<br><img src=\"200-웹개발/vue/assets/pasted-image-20240821112757.png\" target=\"_self\">spread구문을 사용하여 복사했을때\n예상대로 count는 반응성이 유지되지않고 나머지는 유지되었다.count는 원자형이라 주소를 새로할당받는데 object는기존주소를 써서그렇다 ㅇㅇ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/햇갈렷던것..-반응성관련.html","pathToRoot":"../..","attachments":["200-웹개발/vue/assets/pasted-image-20240821112059.html","200-웹개발/vue/assets/pasted-image-20240821112757.html"],"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":1131,"sourcePath":"200-웹개발/vue/햇갈렷던것.. 반응성관련.md","exportPath":"200-웹개발/vue/햇갈렷던것..-반응성관련.html","showInTree":true,"treeOrder":142,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue-문서들.html":{"title":"vue 문서들","icon":"","description":"공식 v3\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://v3-docs.vuejs-korea.org/guide/introduction.html\" target=\"_self\">https://v3-docs.vuejs-korea.org/guide/introduction.html</a>공식 v2<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://v2.ko.vuejs.org/v2/guide/computed.html\" target=\"_self\">https://v2.ko.vuejs.org/v2/guide/computed.html</a>짐코딩<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gymcoding.notion.site/Vue-js-3-cd9bb8ec6fec4ba9b388c808caf61880\" target=\"_self\">https://gymcoding.notion.site/Vue-js-3-cd9bb8ec6fec4ba9b388c808caf61880</a>캡틴 판교<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://joshua1988.github.io/vue-camp/\" target=\"_self\">https://joshua1988.github.io/vue-camp/</a>공식 v3예제<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://v3-docs.vuejs-korea.org/examples/#hello-world\" target=\"_self\">https://v3-docs.vuejs-korea.org/examples/#hello-world</a>뷰 사용 예제<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/mutoe/vue3-realworld-example-app/blob/master/src/components/ArticleDetailComment.spec.ts\" target=\"_self\">https://github.com/mutoe/vue3-realworld-example-app/blob/master/src/components/ArticleDetailComment.spec.ts</a>\nTESTCODE까지 있음","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/vue-문서들.html","pathToRoot":"../..","attachments":[],"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":480,"sourcePath":"200-웹개발/vue/vue 문서들.md","exportPath":"200-웹개발/vue/vue-문서들.html","showInTree":true,"treeOrder":143,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue_기록.html":{"title":"vue_기록","icon":"","description":"이미지를 동적으로 바인딩export const getImgSource = (imgPath) =&gt; { return new URL(imgPath, import.meta.url).href }\nstyle 부분에도 변수를 넣을 수 있음\nv-bind(VARIABLE)기본적으로 id라던가 class등을 :속성 등을 통해 동적으로 바인딩된다. 이는 해당 속성의 최상단루트에 상속된다. 하지만 defineprops를 통해서 내려받을 props라고 정의를 하면 최상단루트에 상속되지 않고 변수로 값을 받아온다.\nEX 그냥 속성값추가&gt;&gt; App.vue\n&lt;Hi :id=\"mj\" /&gt; &gt;&gt; Hi.vue\n&lt;div&gt;\nhi\n&lt;/div&gt; &gt;&gt; render Html\n&lt;div id=mj&gt;\nhi\n&lt;/div&gt;\nEx 속성값을 defineProps로 지정&gt;&gt; App.vue\n&lt;Hi :id=\"mj\" /&gt; &gt;&gt; Hi.vue\nconst {id} = defineProps({id:String})\n&lt;div&gt;\nhi\n&lt;/div&gt; &gt;&gt; render Html\n&lt;div&gt;\nhi\n&lt;/div&gt; 자식에게 props를넘겨줄때 나는 주로 destructing을 많이쓴다. 선언한번더안해서 개꿀이니깐 ㅎ\n근데 vue에서는 state값에대해 destructing을 못쓴다. 이게 props를 넘겨줄때에도 고대로 적용된다.const {userTrendData, activeId} = defineProps({ userTrendData: Object, activeId: String })\n이러면 activeId의 추적이 안된다.const props = defineProps({ userTrendData: Object, activeId: String }) const {userTrendData, activeId} = toRefs(props);\n이렇게해줘야한다.\n상당히 귀찮은걸 ㅎ\n왜그럴꽈<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://joyhong-91.tistory.com/48\" target=\"_self\">https://joyhong-91.tistory.com/48</a>\nreactive는재할당시반응형을 잃어버린다.상위 state를 하위 state를 통해 다시선언할경우 하위 state를 바꿔도 상위 state가 따라서 바껴진다.\n실험하기.집가서 draggable찾아보기","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/vue_기록.html","pathToRoot":"../..","attachments":[],"createdTime":1720705758578,"modifiedTime":1720705758578,"sourceSize":1712,"sourcePath":"200-웹개발/vue/vue_기록.md","exportPath":"200-웹개발/vue/vue_기록.html","showInTree":true,"treeOrder":144,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue_재사용성.html":{"title":"vue_재사용성","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"컴포저블","level":2,"id":"컴포저블_0"},{"heading":"커스텀 디렉티브","level":2,"id":"커스텀_디렉티브_0"},{"heading":"플러그","level":2,"id":"플러그_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/vue_재사용성.html","pathToRoot":"../..","attachments":[],"createdTime":1720081060542,"modifiedTime":1720081060543,"sourceSize":54,"sourcePath":"200-웹개발/vue/vue_재사용성.md","exportPath":"200-웹개발/vue/vue_재사용성.html","showInTree":true,"treeOrder":145,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue_ref,reactive.html":{"title":"vue_ref,reactive","icon":"","description":"\nVue 2: defineproperty를 사용하여 각 속성에 대해 getter와 setter를 정의합니다. 이는 깊은 객체 구조에서 재귀적으로 동작하여 반응성을 제공합니다.\nVue 3: Proxy 객체를 사용하여 전체 객체에 대한 변화를 감지합니다. Proxy는 더 효율적이고 간결하게 반응성을 제공할 수 있으며, 새로운 기능을 추가하는 데 유연합니다.\n리액트의 상태관리와 머가다른가!!\n어떤값이든 가능하다\n단! 값이 원시값이 아니면 reactive로 전환된다.\ngetter, setter를 이용한다 왜 와이! 원시값은 프록시로 감쌀 수 없다!!!\n홀뤼몰뤼 과카몰뤼!~!~!~!\nvue2의 데이터도 Object.defineProperty를이용해서 getter와 setter를 정의함으로써 동작햇다고함 // 실제 구현이 아닌 유사 코드\nconst myRef = { _value: 0, get value() { track() return this._value }, set value(newValue) { this._value = newValue trigger() }\n}\nlet [num1,setNum1]=useState(1)\nlet num2 = num1*2;\nfunction increment(){ setNum1((before)=&gt;before+1);\n} //html부분\n&lt;h2&gt;{num1}&lt;/h2&gt;\n&lt;h2&gt;{num2}&lt;/h2&gt;\n&lt;button onClick={increment}&gt;up&lt;/button&gt; <img src=\"200-웹개발/vue/assets/pasted-image-20240702135541.png\" target=\"_self\">\nstate에 참조된 변수도 update된다.//script 부분\nconst num1 = ref(1);\nfunction increment() { num1.value++;\n}\nlet num2 = num1.value * 2;\nconst num3 = ref(num1.value * 3);\nconst num4 = computed(() =&gt; { return num1.value * 4;\n});\n//IF YOU WANT TO USE WATCH\nconst num5 = ref(0);\nwatch(num1,(value)=&gt;{ num5.value = num1.value**6\n}) //html부분\n&lt;h2&gt;{{ num1 }}&lt;/h2&gt;\n&lt;h2&gt;{{ num2 }}&lt;/h2&gt;\n&lt;h2&gt;{{ num3 }}&lt;/h2&gt;\n&lt;h2&gt;{{ num4 }}&lt;/h2&gt;\n&lt;button @click=\"increment\"&gt;up&lt;/button&gt;\n<br><img src=\"200-웹개발/vue/assets/pasted-image-20240702135910.png\" target=\"_self\">\n참조된 변수가 업데이트 되지 않는다.\n업데이트를 위해서는 watch 나 computed를 사용해야 한다.반응형 프록시\n원시값을 넣으면 안바뀜 웨?&gt; 프록시니깐^^\nref(객체)시 자동으로 이 reactive가 호출됨\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Vue 2와 Vue 3의 차이점","level":3,"id":"Vue_2와_Vue_3의_차이점_0"},{"heading":"ref","level":2,"id":"ref_0"},{"heading":"react","level":3,"id":"react_0"},{"heading":"vue","level":3,"id":"vue_0"},{"heading":"reactive","level":2,"id":"reactive_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/vue_ref,reactive.html","pathToRoot":"../..","attachments":["200-웹개발/vue/assets/pasted-image-20240702135541.html","200-웹개발/vue/assets/pasted-image-20240702135910.html"],"createdTime":1720081060542,"modifiedTime":1720081060542,"sourceSize":2135,"sourcePath":"200-웹개발/vue/vue_ref,reactive.md","exportPath":"200-웹개발/vue/vue_ref,reactive.html","showInTree":true,"treeOrder":146,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue_router.html":{"title":"vue_router","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/vue_router.html","pathToRoot":"../..","attachments":[],"createdTime":1720081060542,"modifiedTime":1720081060542,"sourceSize":0,"sourcePath":"200-웹개발/vue/vue_router.md","exportPath":"200-웹개발/vue/vue_router.html","showInTree":true,"treeOrder":147,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue_sfc-기본구조.html":{"title":"vue_SFC 기본구조","icon":"","description":"ㅍv3엣선는 Single File Component\n확장자가 .vue인 파일var appHeader = { template : '&lt;div&gt;header&lt;/div&gt;', methods : { addNum : function(){ } } data : { str: \"hi\" }, props : [],\n}\n&lt;template&gt; &lt;div&gt; &lt;div&gt;header&lt;/div&gt; &lt;div&gt;{{propsdata}}&lt;/div&gt; &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default { methods : { addNum : function(){ } } data : function(){ return { str: \"hi\" } }, props : ['propsdata']\n}\n&lt;/script&gt;\n&lt;style&gt;\n&lt;/style&gt; function으로 감싼건 스코프를 제한하기 위해서.템플릭태그의 상위루트 태그는 하나로 묶여야함\nv3에서는 안그래도됨 자체적으로 fragment를 생성해준다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"기존 js 에서의 코드","level":3,"id":"기존_js_에서의_코드_0"},{"heading":"SFC에서의 코드 &lt;&lt; v2","level":3,"id":"SFC에서의_코드_<<_v2_0"},{"heading":"template","level":3,"id":"template_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/vue_sfc-기본구조.html","pathToRoot":"../..","attachments":[],"createdTime":1720081060542,"modifiedTime":1720081060542,"sourceSize":756,"sourcePath":"200-웹개발/vue/vue_SFC 기본구조.md","exportPath":"200-웹개발/vue/vue_sfc-기본구조.html","showInTree":true,"treeOrder":148,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue_test_jest.html":{"title":"vue_test_jest","icon":"","description":"shallowmount","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vue/vue_test_jest.html","pathToRoot":"../..","attachments":[],"createdTime":1721825613063,"modifiedTime":1721825613063,"sourceSize":14,"sourcePath":"200-웹개발/vue/vue_test_jest.md","exportPath":"200-웹개발/vue/vue_test_jest.html","showInTree":true,"treeOrder":149,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue2_기본정리.html":{"title":"vue2_기본정리","icon":"","description":"MVVM 패턴\n<img alt=\"assets/vue-20240627101400036.png\" src=\"200-웹개발/assets/vue-20240627101400036.png\" target=\"_self\" style=\"width: 300px; max-width: 100%;\">\n가상돔 이동데이터 바인딩 감지하는것…그리고그것을화면에적용,,,..js에서는… 데이터바인딩감지를 다음과같은것으로할수있음.. Object.defineProperty , proxy… 즉시실행함수를 이용하여 스코프 관리컴포넌트 기반으로 관리 - 재사용성data = react의 state같은거\n변화를 감지해서 화면에 렌더링함let vm = new Vue({ el: \"#app\", //인스턴스 그려지는 시작점 data : { message : \"hi\" }, template:,// 화면에 표시할 요소 methods:,// 화면의 동작과 이벤트 로직을 제어하는 메서드 created:,// 마운트전.virtual dom사용 못함. 데이터초기화 mounted : //마운트 직후 돔접근가능 watch: , //data정의 속성 변화햇을때 추가동작 (useEffect같은거군.) components:,//지역컴포넌트 등록\n}) // 관습적으로 vm사용 // 전역 컴포넌트로 등록\nVue.component( 'app-header', { template: '&lt;h1&gt;&lt;/h1&gt;' }\n)\n// 지역컴포넌트 등록방법\nnew Vue({ el :\"#app\", components : { '컴포넌트 이름' : {컴포넌트 내용} }\n}) //랜더함수 이용 (루트 컴포넌)\nnew Vue({ render : h=&gt; h(App)\n}).$mount('#app); new Vue({ el :\"#app\", components : { 'app' : App }\n})\n//위아래 동작은 거의 같음\n사용할때는 컴포넌트 등록 이름을 이용하여 사용하면 됨\n&lt;app-header/&gt; <br><img alt=\"assets/vue_정리-20240627140705844.png\" src=\"200-웹개발/assets/vue_정리-20240627140705844.png\" target=\"_self\" style=\"width: 300px; max-width: 100%;\">\n리액트랑 비슷?동적 할당&lt;tag v-bind:propsname = \"varname\"/&gt;\n&lt;tag :propsname = \"varname\"/&gt;\n&lt;tag :name = \"{varname : boolean}\" /&gt; // 참일때만 varname //cumputed가 더나음 //위에 두개는 같다.\nvar tag = { template: '&lt;h1&gt;tag&lt;/h1&gt;', props : ['propsname']\n}\nnew Vue({ el :\"#app\", components : { 'tag' : tag }, data:{ varname:'varval' }\n}) //여러개\ndata:{ objectOfAttrs:{ id: 'con', class:'wrapper' }\n}\n&lt;div v-bind=\"objectOfAttrs\"&gt;&lt;/div&gt; //click\nvar tag = { template: '&lt;button v-on:click=\"passEvent\"&gt;click me&lt;/button&gt;', methods : { pathEvent: function(){ this.$emit('pass',{내보내고싶은값});//내보낸 이벤트 이름 } }\n}\nnew Vue({ el :\"#app\", components : { 'tag' : tag }, methods:{ logText: function(){ console.log('hi') } }\n})\n//tag태그에서 pass이벤트가 발생시 logText함수실행\n&lt;tag v-on:pass=\"logText\" /&gt; //단축문법\n&lt;tag @[pass]=\"logText\" /&gt; //계산식 사용불가\n&lt;a :['foo' + bar]=\"value&gt;... &lt;/a&gt;//makes error\n//computed 사용해야 //수식어 event.preventDefault 사용대신 &lt;a @click.prevent=\"handler\"/&gt; 이렇게 사용가능 해당 컴포넌트의 자식 루트 컴포넌트에게 속성이 상속됨\n이미 있을 경우 병합app.component('date-picker', { template: ` &lt;div class=\"date-picker\"&gt; &lt;input type=\"datetime\"&gt; &lt;/div&gt; `\n}) &lt;!-- non-prop 속성과 Date-picker 컴포넌트 --&gt;\n&lt;date-picker data-status=\"activated\"&gt;&lt;/date-picker&gt; &lt;!-- 렌더링된 date-picker 컴포넌트 --&gt;\n&lt;div class=\"date-picker\" data-status=\"activated\"&gt; &lt;input type=\"datetime\"&gt;\n&lt;/div&gt;\n&lt;script&gt; export default { inheritAttrs: false, }; &lt;/script&gt; &lt;template&gt; &lt;p&gt;Non-Prop 속성: {{ $attrs }}&lt;/p&gt; &lt;/template&gt;\nmethods : 화면의 동작과 이벤트 로직을 제어하는 메서드\ncomputed : 반복되고 단순계산을 실행할때 . (data값을 변경시키면안됨.)\n종속 대상을 따라 캐싱\ngetter전\nwatch : data정의 속성 변화햇을때 추가동작 (useEffect같은거군.무거운 동작)\n인자로 새값, 이전값을 받음\n데이터패칭 , 디바운싱등..액션을 취함 혹은 돔을 바꿀ㄸ\nwatchEffect\n두개 차이점 : watch는 명시적으로 관찰된 속성 추적\nwatch effect는 동기 실행중 액세스 되는 모든 반응 속성을 자동으로 추적.\nfilters :\ncreated : lifecycles관련 속성스타일을동적 바인딩할때 배열객체로도 받을 수 있다.&lt;div :style=\"{ color: activeColor, fontSize: fontSize + 'px' }\"&gt;&lt;/div&gt; &lt;div :style=\"[baseStyles, overridingStyles]\"&gt;&lt;/div&gt; v-어쩌구 형태인\nv-bind : 동적바인딩 &gt; :\nv-on :이벤트감지 &gt; @\nv-if:값 : 참일시실행\nv-else : 값이 거짓일시 실\nv-else-if : elseif\nv-for : 반복문&lt;li v-for=\"(item, index) in items\" :key=\"item.id\"&gt; {{ item.message }}\n&lt;/li&gt; v-show : 돔에 항상보여줌 거짓일시 CSS display 속성을 none으로\nv-model : input 값을 할당함, v-bind와&nbsp;v-on의 기능의 조합임\nv-slot : 리액트의 chidren&lt;FancyButton&gt;\n&lt;!-- 슬롯 콘텐츠 --&gt; Click!! &lt;/FancyButton&gt; &lt;!-- FancyButton.vue --&gt; &lt;template&gt; &lt;button class=\"fancy-btn\"&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/button&gt;\n&lt;/template&gt; &lt;!---랜더링----&gt;\n&lt;button class=\"fancy-btn\"&gt; Click!!\n&lt;/button&gt; 이름을 부여할 수도 있음 default는 태글ㄹ 생략가능\n&lt;!-- 부모 컴포넌트 사용 예시 --&gt;\n&lt;template&gt; &lt;BaseCard&gt; &lt;template v-slot:header&gt;제목&lt;/template&gt; &lt;template v-slot:default&gt;안녕하세요&lt;/template&gt; &lt;template v-slot:footer&gt;푸터&lt;/template&gt; &lt;/BaseCard&gt;\n&lt;/template&gt; &lt;!-- BaseCard.vue --&gt;\n&lt;template&gt; &lt;article&gt; &lt;div&gt; &lt;slot name=\"header\"&gt;&lt;/slot&gt; &lt;/div&gt; &lt;div&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;div\"&gt; &lt;slot name=\"footer\"&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/article&gt;\n&lt;/template&gt;\nconst routes = [ { path: '/', component: HomeView }, { path: '/about', component: AboutView }, ] //verson 2\nvar router = new VueRouter({ routes,\n})\nnew Vue({ el: '#app', router, }) &lt;div id=\"app\"&gt; &lt;router-link&gt;&lt;/router-link&gt; &lt;router-link&gt;&lt;/router-link&gt; &lt;router-view&gt;&lt;/router-view&gt;\n&lt;/div&gt;\n//verson 3\ncreateApp(App) .use(router) .mount('#app') const router = createRouter({ history: createMemoryHistory(), routes, }) router-links 는 걍 리액트의 link랑 같네염^^\ncallback\npromise\npromise + generator\nasync &amp; await\ncli 이용하여 세팅vue init vue create\nnpm create vue@latest\nnpm init vue@latest\n//위의 두개의 명령어는 같다. webpack vs vite 다양한 플러그인 지원 vs 오직 단순한 스캐풍딩도구(나머진 vite 한테 위임)\n데이터흐름 양방향 vs 단방향\n장단점<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@injoon2019/%EB%AA%85%EB%A0%B9%ED%98%95-vs-%EC%84%A0%EC%96%B8%ED%98%95-%ED%95%A8%EC%88%98%ED%98%95\" target=\"_self\">https://velog.io/@injoon2019/%EB%AA%85%EB%A0%B9%ED%98%95-vs-%EC%84%A0%EC%96%B8%ED%98%95-%ED%95%A8%EC%88%98%ED%98%95</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gymcoding.notion.site/acf439e5e4b04e079104439153a7f223\" target=\"_self\">https://gymcoding.notion.site/acf439e5e4b04e079104439153a7f223</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://joshua1988.github.io/vue-camp/\" target=\"_self\">https://joshua1988.github.io/vue-camp/</a> 검색자료 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"주요 개념","level":2,"id":"주요_개념_0"},{"heading":"reactivity 반응성","level":3,"id":"reactivity_반응성_0"},{"heading":"뷰 컴포넌트","level":3,"id":"뷰_컴포넌트_0"},{"heading":"기본 문법","level":2,"id":"기본_문법_0"},{"heading":"인스턴스 생성","level":3,"id":"인스턴스_생성_0"},{"heading":"컴포넌트","level":3,"id":"컴포넌트_0"},{"heading":"생성","level":4,"id":"생성_0"},{"heading":"통신","level":4,"id":"통신_0"},{"heading":"속성 문법","level":3,"id":"속성_문법_0"},{"heading":"props 전달","level":4,"id":"props_전달_0"},{"heading":"이벤트","level":4,"id":"이벤트_0"},{"heading":"속성 상속","level":4,"id":"속성_상속_0"},{"heading":"상속하기 싫거나 자식 루트 컴포넌트 말고 다른 요소에게 속성을 줄때","level":5,"id":"상속하기_싫거나_자식_루트_컴포넌트_말고_다른_요소에게_속성을_줄때_0"},{"heading":"템플릿 문법","level":2,"id":"템플릿_문법_0"},{"heading":"데이터바인딩","level":3,"id":"데이터바인딩_0"},{"heading":"디렉티브","level":3,"id":"디렉티브_0"},{"heading":"라우터","level":2,"id":"라우터_0"},{"heading":"비동기","level":2,"id":"비동기_0"},{"heading":"js의 비동기 처리 패턴변화","level":3,"id":"js의_비동기_처리_패턴변화_0"},{"heading":"vue 세팅","level":2,"id":"vue_세팅_0"},{"heading":"과거","level":3,"id":"과거_0"},{"heading":"현재 (vue v3)","level":3,"id":"현재_(vue_v3)_0"},{"heading":"과거 vs 현재","level":3,"id":"과거_vs_현재_0"},{"heading":"React와 차이점, 같은점","level":2,"id":"React와_차이점,_같은점_0"}],"links":[],"author":"","coverImageURL":"200-웹개발/assets/vue-20240627101400036.png","fullURL":"200-웹개발/vue/vue2_기본정리.html","pathToRoot":"../..","attachments":["200-웹개발/assets/vue-20240627101400036.html","200-웹개발/assets/vue_정리-20240627140705844.html"],"createdTime":1720081060541,"modifiedTime":1720081060542,"sourceSize":7054,"sourcePath":"200-웹개발/vue/vue2_기본정리.md","exportPath":"200-웹개발/vue/vue2_기본정리.html","showInTree":true,"treeOrder":150,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue3_composition.html":{"title":"vue3_Composition","icon":"","description":"마운트도 조금다름.\n`createApp(App).mount('#app')\nㅖㅏ 걍문법만다름script에선 여러번 인스턴트화되더라도 한번만 실행\nscript setup은 인스턴스가 생성될때 마다 실행\n따라서 script setup는 각 인스턴스마다 상태가 독립적으로 관리된다그러나\nSSR에서는 요청마다 새로운 vue인스턴스가 생성되기에 상태가 계속 새로 리셋됨.. 데이터 일관성도 깨질 수 있음.option는 데이터의속성 실행시점등과같이 나눴다면\ncomposition은 관심사별로 분리를 가능캐한다.\n좀더 함수형스러운듯?script setup\n혹은 export에 setup어쩌구 에만 있을 수 있음&lt;script&gt;\nexport default { // data()에서 반환된 속성들은 반응적인 상태가 되어 `this`에 노출됩니다. data() { return { count: 0 } }, methods: { increment() { this.count++ } }, mounted() { console.log(`숫자 세기의 초기값은 ${ this.count } 입니다.`) }\n}\n&lt;/script&gt; &lt;template&gt; &lt;button @click=\"increment\"&gt;숫자 세기: {{ count }}&lt;/button&gt;\n&lt;/template&gt; &lt;script setup&gt; 이용&lt;script setup&gt;\nimport { ref, onMounted } from 'vue' //toplevel 에서 비동기 사용가능 &gt; 자동으로 async로컴파일 // 반응적인 상태의 속성\nconst count = ref(0) // 속성 값을 변경하고 업데이트 할 수 있는 함수.\nfunction increment() { count.value++\n} // 생명 주기 훅\nonMounted(() =&gt; { console.log(`숫자 세기의 초기값은 ${ count.value } 입니다.`)\n})\n&lt;/script&gt; &lt;template&gt; &lt;button @click=\"increment\"&gt;숫자 세기: {{ count }}&lt;/button&gt;\n&lt;/template&gt; 이용하지 않을시&lt;script&gt;\nimport { ref, onMounted } from 'vue' export default{ setup(){ const count = ref(0) // 이어서 코드 작성 return { counter, increment } }\n}\n&lt;/script&gt;\n상속옵션을 끄던가 커스텀할때 script를 함께선언&lt;script&gt;\n// 일반 스크립트, 모듈 범위에서 한 번만 실행\nrunSideEffectOnce() // 옵션 선언\nexport default { inheritAttrs: false, customOptions: {}\n}\n&lt;/script&gt; &lt;script setup&gt;\n// 각 인스턴스 생성시 setup() 범위에서 실행\n&lt;/script&gt;\n(vue 공식 문서에 따르면...)\n더 적은 상용구로 더 간결한 코드\n순수 TypeScript를 사용하여 props 및 내보낼(emit) 이벤트를 선언하는 기능\n더 나은 런타임 성능(템플릿은 중간 프락시 없이 동일한 범위의 렌더 함수로 컴파일됨)\n더 나은 IDE 타입 추론 성능(언어 서버가 코드에서 타입을 추출하는 작업 감소)\n가 있다고 한다..\n내가생각한 단점..\n무조건 변수나 함수가 최상위 바인딩이 되는데 이에 따른 단점이 있을꺼 같음..\n응 아니야\n여기서 예외는&nbsp;&lt;script setup&gt;을 사용하는 컴포넌트가&nbsp;기본적으로 비공개라는 점입니다.&nbsp;&lt;script setup&gt;을 사용하는 자식 컴포넌트를 부모 컴포넌트에서 참조하려는 경우, 자식 컴포넌트가&nbsp;defineExpose&nbsp;컴파일러 매크로를 사용하여 선택한 인터페이스를 노출하지 않는 한 그 무엇에도 접근할 수 없습니다.\nscript &lt;-&gt; script setup\nscript : 모듈범위에서 한번만 실행\nscript setup : 각 인스턴스 생성시 setup범위 내에서 실&lt;script setup&gt;\nconst props = defineProps({ foo: String\n}) const emit = defineEmits(['change', 'delete'])\n// ... setup 코드\n&lt;/script&gt;\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://vuejs.org/api/\" target=\"_self\">https://vuejs.org/api/</a>\n총괄 API 정리도어있음\n주요한 것을정리.data &gt; ref(원시) , reactive(객체)\nreadonly option을 통해 특정 부분에서 객체 변경 방지 가능\nonMounted(), onUnmounted()<br>\n<img alt=\"Pasted image 20240628175728.png\" src=\"200-웹개발/assets/pasted-image-20240628175728.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">provide() inject()\nprovide(key,value) inject(key) : return value\n광범위한 상태관리 drilling 피함&lt;!-- 제공자 컴포넌트 내부 --&gt;\n&lt;script setup&gt;\nimport { provide, ref } from 'vue' const location = ref('북극') function updateLocation() { location.value = '남극'\n} provide('location', { location, updateLocation\n})\n&lt;/script&gt;\n&lt;!-- 제공자 컴포넌트 내부 --&gt;\n&lt;script setup&gt;\nimport { provide, ref } from 'vue' const location = ref('북극') function updateLocation() { location.value = '남극'\n} provide('location', { location, updateLocation\n})\n&lt;/script&gt;\nprovide값넣을때 readonly로 감싸면 일기만 가능^&amp;^대규모일때는 key를 symbol로 사용하기도","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Options와 차이점과 쓰임.","level":2,"id":"Options와_차이점과_쓰임._0"},{"heading":"개념과 등장이유","level":2,"id":"개념과_등장이유_0"},{"heading":"options","level":3,"id":"options_0"},{"heading":"composition","level":3,"id":"composition_0"},{"heading":"함께사용도 가능함.","level":4,"id":"함께사용도_가능함._0"},{"heading":"script setup의 장점 및 차이","level":4,"id":"script_setup의_장점_및_차이_0"},{"heading":"통신(props emit)","level":2,"id":"통신(props_emit)_0"},{"heading":"API 상세","level":2,"id":"API_상세_0"},{"heading":"반응형(Reactivity)","level":3,"id":"반응형(Reactivity)_0"},{"heading":"DI","level":3,"id":"DI_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/vue3_composition.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240628175728.html"],"createdTime":1720705758577,"modifiedTime":1720705758578,"sourceSize":4709,"sourcePath":"200-웹개발/vue/vue3_Composition.md","exportPath":"200-웹개발/vue/vue3_composition.html","showInTree":true,"treeOrder":151,"backlinks":[],"type":"markdown"},"200-웹개발/vue/vue의-상태관리툴.html":{"title":"vue의 상태관리툴","icon":"","description":"\nvuex pinia\npinia는 현재(vue3버전)에서 vue의 공식 상태관리 툴 vuex가 업그레이드 된형태로 vue개발 인원중한명이 만듬\npinia는 이전 버전인 vue2버전에서도 잘 작동함\nvuex는 actions, mutations, state 로 구성된 flux패턴\npinia는 여기서 mutation이 빠졌음.\npinia는 서버사이드 렌더링 지원\n리액트의 리덕스라고할수이따(리덕스도 FLUX패턴)MVC패턴에서 모델과 뷰가 서로 양방향으로 영향을 받다보니\n예측하기가 어려워짐\n<img alt=\"Pasted image 20240702095610.png\" src=\"200-웹개발/assets/pasted-image-20240702095610.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">\nTherefore Flux패턴 두두둥장\n단방향\n생각한 순환 순서 : (action)&gt;mutation&gt; state &gt; view state : 여러 컴포넌트에 공유되는 데이터 접근 방법 : this.$store.state.message getter : 연산된 state값을 접근하는 속성 접근 방법 : this.$store.getters.[method] mutation : state값을 변경하는 이벤트 로직 접근 방법 : this.$store.commit(\"function_name\",인자)\n사용이유 사실 걍 변경을 위해선 state값에 접근해도 됨.\n명시적으로 상태변화수행\n어느 컴포넌트에서 해당 state가 변경되었는지 확인가능\ndevtool에서 관찰가능\n이후에사실 없어짐ㅎ,ㅎ,ㅎ,ㅎㅎ\\ action : 비동기처리로직을 선언하는 메서드 접근 방법 : this.$store.dispatch(함수 명)\n사용이유 언제 호출햇는지확인하기위해\n동기 &gt; mutation, 비동기 &gt; action 앞에 map붙이면 됨\nthis.$store.어쩌구.변수(함수)명\n을 this.변수(함수)명\n으로 호출 가능케함computed(){ ...mapState('num;) //num(){ return this.$store.state.num;}\n} 스프레드 연산자를 앞에 붙여야함 Why? 안에잇는 변수함수를 바깥으로거내야하니깐 유연한문법\n배열 이름같을때 객체 이름다를\n// 메서드 명 그대로시에 배열로다가 하면됨\n...mapMutations([ 'clickBtn', 'addNumber'\n])\n//하지만 새로운 메서드이름으로 호출하고 싶다.\n...mapMutations({ popupMsg:'clickBtn'\n})\n32333322 <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pinia.vuejs.org\" target=\"_self\">https://pinia.vuejs.org</a>option api, composition api 둘다 사용 가능함. 순환 순서 : actions&gt; state &gt; view\n중앙저장소 : store 정의 : defineStore\n사용 : useStore 이건 내생각에는 optional이 더좋은듯 왜냐면 composition으로 사용하는 큰 이유중에하나가 주제별(도메인별로) 모아주기 위해서인데\n상태관리는 store을 이용하기에 이미 주제별로 모아진 후이다. // 전역에서 couter로 store에 접근 가능 // optional api\nexport const useCounterStore = defineStore('counter', { state: () =&gt; ({ count: 0, name: 'Eduardo' }), getters: { doubleCount: (state) =&gt; state.count * 2,, doubledoubleCount:()=&gt; this.doubleCount*2 }, actions: { increment() { this.count++ }, },\n}) // composition api\nexport const useCounterStore = defineStore('counter', () =&gt; { const count = ref(0) const name = ref('Eduardo') const doubleCount = computed(() =&gt; count.value * 2) function increment() { count.value++ }\n// ref &gt; state , computed &gt; getter, function() &gt; action return { count, name, doubleCount, increment }\n}) <br>피니아는 Vue의 스토어 라이브러리로 컴포넌트/페이지 간에 상태를 공유할 수 있습니다. 컴포지션 API에 익숙하다면 간단한&nbsp;export const state = reactive({})로 전역 상태를 공유할 수 있다고 생각할 수 있습니다. 이는 SPA에는 해당되지만 SSR의 경우,&nbsp;앱이&nbsp;<a data-tooltip-position=\"top\" aria-label=\"https://vuejs.kr/guide/scaling-up/ssr.html#cross-request-state-pollution\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://vuejs.kr/guide/scaling-up/ssr.html#cross-request-state-pollution\" target=\"_self\">보안 취약성</a>에 노출됩니다.&nbsp;그러나 작은 SPA에서도 피니아를 사용하면 많은 이점이 있습니다:\n테스트 유틸리티\n플러그인: 플러그인으로 Pinia 기능 확장\nJS 사용자를 위한 적절한 TypeScript 지원 또는&nbsp;자동 완성\n서버 사이드 렌더링 지원\nDevtools 지원 액션, 뮤테이션을 추적하는 타임라인\n사용되는 컴포넌트에서 스토어가 나타남\n타임 트래블 및 더 쉬운 디버깅 핫 모듈 교체 (HMR) 페이지를 새로고침하지 않고 스토어 수정\n개발 중 기존 상태 유지 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"vuex","level":2,"id":"vuex_0"},{"heading":"FLUX","level":3,"id":"FLUX_0"},{"heading":"helper","level":4,"id":"helper_0"},{"heading":"pinia","level":2,"id":"pinia_0"},{"heading":"왜 피니아","level":3,"id":"왜_피니아_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/vue/vue의-상태관리툴.html","pathToRoot":"../..","attachments":["200-웹개발/assets/pasted-image-20240702095610.html"],"createdTime":1720081060543,"modifiedTime":1720081060543,"sourceSize":4400,"sourcePath":"200-웹개발/vue/vue의 상태관리툴.md","exportPath":"200-웹개발/vue/vue의-상태관리툴.html","showInTree":true,"treeOrder":152,"backlinks":[],"type":"markdown"},"200-웹개발/3d.html":{"title":"3d","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=i9t8gdaBsTg&amp;t=0s\" target=\"_self\">https://www.youtube.com/watch?v=i9t8gdaBsTg&amp;t=0s</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/3d.html","pathToRoot":"..","attachments":[],"createdTime":1718100730916,"modifiedTime":1718100733823,"sourceSize":49,"sourcePath":"200-웹개발/3d.md","exportPath":"200-웹개발/3d.html","showInTree":true,"treeOrder":153,"backlinks":[],"type":"markdown"},"200-웹개발/디자인-라이브러리.html":{"title":"디자인 라이브러리","icon":"","description":"\n디자인 mui\ntailwind\nmantine\nChakra 차트 <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://echarts.apache.org/en/theme-builder.html\" target=\"_self\">https://echarts.apache.org/en/theme-builder.html</a> templete page <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://themeforest.net/\" target=\"_self\">https://themeforest.net/</a> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/디자인-라이브러리.html","pathToRoot":"..","attachments":[],"createdTime":1710306473406,"modifiedTime":1710306951146,"sourceSize":157,"sourcePath":"200-웹개발/디자인 라이브러리.md","exportPath":"200-웹개발/디자인-라이브러리.html","showInTree":true,"treeOrder":154,"backlinks":[],"type":"markdown"},"200-웹개발/상태처리-리액트&뷰.html":{"title":"상태처리 리액트&뷰","icon":"","description":"<a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@chosh/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%99%80-%EB%B7%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" title=\"https://velog.io/@chosh/리액트와-뷰의-차이점\" href=\"https://velog.io/@chosh/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%99%80-%EB%B7%B0%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" target=\"_self\">https://velog.io/@chosh/리액트와-뷰의-차이점</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"상태처리 리액트&amp;뷰","level":1,"id":"상태처리_리액트&뷰_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/상태처리-리액트&뷰.html","pathToRoot":"..","attachments":[],"createdTime":1701773987475,"modifiedTime":1701774024711,"sourceSize":222,"sourcePath":"200-웹개발/상태처리 리액트&뷰.md","exportPath":"200-웹개발/상태처리-리액트&뷰.html","showInTree":true,"treeOrder":155,"backlinks":[],"type":"markdown"},"200-웹개발/웹-렌더링-형태.html":{"title":"웹 렌더링 형태","icon":"","description":"<a class=\"internal-link\" data-href=\"../아이디어/my blog.md\" href=\"아이디어/my-blog.html\" target=\"_self\" rel=\"noopener nofollow\">my blog</a>\nCSR, SSR, SSG, ISR은 웹 개발에서 사용되는 다양한 렌더링 방식을 나타냅니다. 각각의 특징을 간단히 설명해 드리겠습니다:CSR은 브라우저에서 JavaScript를 사용하여 웹페이지를 렌더링하는 방식입니다\n초기 로드 시 서버는 최소한의 HTML과 JavaScript 파일만 전송합니다.\n브라우저가 JavaScript를 실행하여 동적으로 콘텐츠를 생성합니다.\n대화형 애플리케이션에 적합하며, 초기 로딩 속도가 느릴 수 있습니다.\nspa <br>SSR은 서버에서 HTML 콘텐츠를 생성하여 브라우저로 전송하는 방식입니다<a data-tooltip-position=\"top\" aria-label=\"https://cloudinary.com/guides/automatic-image-cropping/server-side-rendering-benefits-use-cases-and-best-practices\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://cloudinary.com/guides/automatic-image-cropping/server-side-rendering-benefits-use-cases-and-best-practices\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://dev.to/hillaryprosper_wahua_bce/server-side-rendering-ssr-in-web-development-1oi0\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev.to/hillaryprosper_wahua_bce/server-side-rendering-ssr-in-web-development-1oi0\" target=\"_self\">4</a>.\n서버가 요청을 받으면 완전한 HTML을 생성하여 클라이언트에 전송합니다.\n초기 로딩 속도가 빠르고 SEO에 유리합니다.\n서버 부하가 높을 수 있습니다. <br>SSG는 빌드 시점에 모든 페이지를 미리 생성하는 방식입니다<a data-tooltip-position=\"top\" aria-label=\"https://dev.to/mrcaption49/static-site-generation-ssg-explanation-with-anology-5887\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev.to/mrcaption49/static-site-generation-ssg-explanation-with-anology-5887\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://developer.mozilla.org/en-US/docs/Glossary/SSG\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/SSG\" target=\"_self\">6</a>.\n모든 HTML 페이지를 빌드 시 미리 생성합니다.\n매우 빠른 로딩 속도와 뛰어난 SEO 성능을 제공합니다.\n콘텐츠 업데이트 시 전체 사이트를 다시 빌드해야 합니다. <br>ISR은 SSG의 장점을 유지하면서 동적 업데이트를 가능하게 하는 기술입니다<a data-tooltip-position=\"top\" aria-label=\"https://www.wisp.blog/glossary/incremental-static-regeneration\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.wisp.blog/glossary/incremental-static-regeneration\" target=\"_self\">7</a><a data-tooltip-position=\"top\" aria-label=\"https://loadfocus.com/glossary/incremental-static-regeneration-isr\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://loadfocus.com/glossary/incremental-static-regeneration-isr\" target=\"_self\">8</a>.\n정적 페이지를 생성하고 주기적으로 또는 요청 시 재생성할 수 있습니다.\nSSG의 성능 이점을 유지하면서 콘텐츠를 최신 상태로 유지할 수 있습니다.\n대규모 사이트에서 빌드 시간을 줄이는 데 효과적입니다. 각 방식은 프로젝트의 요구사항에 따라 선택되며, 때로는 이들을 조합하여 사용하기도 합니다. 최신 웹 프레임워크들은 이러한 다양한 렌더링 방식을 지원하여 개발자가 최적의 성능과 사용자 경험을 제공할 수 있도록 돕고 있습니다.<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.banksalad.com/tech/build-a-website-with-gatsby/\" target=\"_self\">https://blog.banksalad.com/tech/build-a-website-with-gatsby/</a><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mnxmnz.github.io/gatsby/what-is-gatsby/\" target=\"_self\">https://mnxmnz.github.io/gatsby/what-is-gatsby/</a>\nJekyll Pros Beginner friendly - it's just html. Simple templating language (Liquid) Vast plugin ecosystem. Free hosting is available via Github pages. Cons Slow build times. Installing ruby dependencies for the first time can cause frustration. Complicated page logic can be difficult using Liquid. Creating pages dynamically from JSON requires custom ruby programming. Personal opinions Jekyll is best for small + medium sites (under 500 pages). Great for sites that need to be maintained by teams with less dev experience. Don't rely on plugins or the native SASS complication - use webpack for this instead. Best CMS?&nbsp;Use a git-based CMS like Forestry or Netlify CMS. Hugo Pros Extremely fast build times. Powerful templating language. SASS compilation out of the box. Strong i18n support Cons Ugly &amp; confusing templating language. Documentation is decent but confusing at times. Cannot create pages dynamically from JSON (coming soon, I think) Personal opinions Hugo is great for all size sites — best for large sites (over 10,000 pages). Can likely build 100,000 pages in same time Gatsby &amp; Jekyll could build 1000. I do believe Hugo's strange templating can cause jr. devs to have issues understanding things early on. Hugo would be my choice for a static site that gets updated frequently through the day or content that needs to go up immediately (like news sites or for press releases) Best CMS?&nbsp;Use a git-based CMS like Forestry or Netlify CMS. Gatsby Pros Gatsby site performance is faster than nearly any other static site generator. Pleasant developer experience for teams using modern tools. Can dynamically create pages from JSON (or nearly any data-source) Quality plugin ecosystem &amp; very good documentation. Cons Requires vanilla JavaScript (ES6) experience. Can feel like over-engineering for small / simple sites. Best used on sites that will be maintained by teams with experience. I've found that many web developers are intimidated by ES6 and React. Personal Opinion Great for small + medium sites (under 500 pages). The&nbsp;best&nbsp;static site generator for creating pages dynamically from a JSON source. Would not introduce Gatsby to teams with little javascript experience. <br>Best CMS?&nbsp;<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://headlesscms.org/\" target=\"_self\">https://headlesscms.org/</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@stakbucks/Headless-CMS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-Sanity\" target=\"_self\">https://velog.io/@stakbucks/Headless-CMS-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0-Sanity</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"클라이언트 사이드 렌더링 (CSR)","level":2,"id":"클라이언트_사이드_렌더링_(CSR)_0"},{"heading":"서버 사이드 렌더링 (SSR)","level":2,"id":"서버_사이드_렌더링_(SSR)_0"},{"heading":"정적 사이트 생성 (SSG)","level":2,"id":"정적_사이트_생성_(SSG)_0"},{"heading":"증분 정적 재생성 (ISR)","level":2,"id":"증분_정적_재생성_(ISR)_0"},{"heading":"GatsbyJS","level":2,"id":"GatsbyJS_0"}],"links":["아이디어/my-blog.html"],"author":"","coverImageURL":"","fullURL":"200-웹개발/웹-렌더링-형태.html","pathToRoot":"..","attachments":[],"createdTime":1740467728870,"modifiedTime":1740470130663,"sourceSize":6009,"sourcePath":"200-웹개발/웹 렌더링 형태.md","exportPath":"200-웹개발/웹-렌더링-형태.html","showInTree":true,"treeOrder":156,"backlinks":[],"type":"markdown"},"200-웹개발/웹팩.html":{"title":"웹팩","icon":"","description":"모듈번들러 VITE도 모듈번들러임\nMODE\n<img alt=\"Pasted image 20240701112747.png\" src=\"200-웹개발/assets/pasted-image-20240701112747.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">웹팩 걸프차<br>\n<img alt=\"Pasted image 20240701114022.png\" src=\"200-웹개발/assets/pasted-image-20240701114022.png\" target=\"_self\" style=\"width: 500px; max-width: 100%;\"><br>\n<img alt=\"Pasted image 20240701114052.png\" src=\"200-웹개발/assets/pasted-image-20240701114052.png\" target=\"_self\" style=\"width: 500px; max-width: 100%;\">웹팩은 진입점이 하나임.파일 병합 &gt; 속도 빨라\n다양한환경지원다이나믹과 레이지 로딩 지원.mode : none ,production, development\nentry : 진입 js\noutput\nfilename :[option].bundle.js\noption : name, id,chunkhash\nchunkhash에 변화를 줘서 웹에서 바뀌엇다는걸 알기도\nmodule\nrules : 로더 규칙 적용\ntest: 어떤파일에대해서\nuse : 다음과같은 로더를 사용하겟다.\n로더는 해석하는데 도움을줌\n로더는 오른쪽에서 왼쪽 파일순으로 읽어짐\n플러그인 : 객체 인스턴스를 추가함. , 추가기\n웹팩 결과 로그\nentrypoint 밑이 웹팩으로 변환햇을 때 빌드 순서 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"config 속성들","level":3,"id":"config_속성들_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/웹팩.html","pathToRoot":"..","attachments":["200-웹개발/assets/pasted-image-20240701112747.html","200-웹개발/assets/pasted-image-20240701114022.html","200-웹개발/assets/pasted-image-20240701114052.html"],"createdTime":1719830763420,"modifiedTime":1719830763420,"sourceSize":919,"sourcePath":"200-웹개발/웹팩.md","exportPath":"200-웹개발/웹팩.html","showInTree":true,"treeOrder":157,"backlinks":[],"type":"markdown"},"200-웹개발/좋은말.html":{"title":"좋은말","icon":"","description":"frontend 3 track\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://steady-study.super.site/frontend-engineer-career-roadmap?fbclid=IwAR05a2QfW5eErIOrstl8E1EZKVbHKtM07eZRFO4E94FtXsAB7HTCn5MxgRM&amp;mibextid=Zxz2cZ\" target=\"_self\">https://steady-study.super.site/frontend-engineer-career-roadmap?fbclid=IwAR05a2QfW5eErIOrstl8E1EZKVbHKtM07eZRFO4E94FtXsAB7HTCn5MxgRM&amp;mibextid=Zxz2cZ</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/좋은말.html","pathToRoot":"..","attachments":[],"createdTime":1701841144273,"modifiedTime":1701841161762,"sourceSize":166,"sourcePath":"200-웹개발/좋은말.md","exportPath":"200-웹개발/좋은말.html","showInTree":true,"treeOrder":158,"backlinks":[],"type":"markdown"},"200-웹개발/css.html":{"title":"CSS","icon":"","description":"image 빈공간생기는 이유\nimage는 기본적으로 inline이다 - 기본 글적을때처럼 baseline을 따름\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ux.stories.pe.kr/45\" target=\"_self\">https://ux.stories.pe.kr/45</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/css.html","pathToRoot":"..","attachments":[],"createdTime":1705828128488,"modifiedTime":1705828839393,"sourceSize":148,"sourcePath":"200-웹개발/CSS.md","exportPath":"200-웹개발/css.html","showInTree":true,"treeOrder":159,"backlinks":[],"type":"markdown"},"200-웹개발/defer.html":{"title":"defer","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.tcpschool.com/html-tag-attrs/script-defer\" target=\"_self\">https://www.tcpschool.com/html-tag-attrs/script-defer</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/defer.html","pathToRoot":"..","attachments":[],"createdTime":1710132138351,"modifiedTime":1710132142654,"sourceSize":53,"sourcePath":"200-웹개발/defer.md","exportPath":"200-웹개발/defer.html","showInTree":true,"treeOrder":160,"backlinks":[],"type":"markdown"},"200-웹개발/electron-vs-tauri.html":{"title":"electron vs tauri","icon":"","description":"내가 만들 앱에서는 무엇을 쓸 것 인가?\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"http://univdev.page/posts/about-tauri/\" target=\"_self\">http://univdev.page/posts/about-tauri/</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/electron-vs-tauri.html","pathToRoot":"..","attachments":[],"createdTime":1709529248852,"modifiedTime":1709529278487,"sourceSize":92,"sourcePath":"200-웹개발/electron vs tauri.md","exportPath":"200-웹개발/electron-vs-tauri.html","showInTree":true,"treeOrder":161,"backlinks":[],"type":"markdown"},"200-웹개발/headless-컴포넌트.html":{"title":"headless 컴포넌트","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/headless-컴포넌트.html","pathToRoot":"..","attachments":[],"createdTime":1710131681913,"modifiedTime":1710131681913,"sourceSize":0,"sourcePath":"200-웹개발/headless 컴포넌트.md","exportPath":"200-웹개발/headless-컴포넌트.html","showInTree":true,"treeOrder":162,"backlinks":[],"type":"markdown"},"200-웹개발/hook-렌더링-최적화.html":{"title":"hook 렌더링 최적화","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@shin6403/React-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EB%8A%94-7%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95-Hooks-%EA%B8%B0%EC%A4%80\" target=\"_self\">https://velog.io/@shin6403/React-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%98%EB%8A%94-7%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95-Hooks-%EA%B8%B0%EC%A4%80</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/hook-렌더링-최적화.html","pathToRoot":"..","attachments":[],"createdTime":1742029181927,"modifiedTime":1742029188943,"sourceSize":190,"sourcePath":"200-웹개발/hook 렌더링 최적화.md","exportPath":"200-웹개발/hook-렌더링-최적화.html","showInTree":true,"treeOrder":163,"backlinks":[],"type":"markdown"},"200-웹개발/js_-proxy&defineproperty.html":{"title":"js_ proxy&defineproperty","icon":"","description":"proxy란...\nProxy는 특정 \"객체\"를 감싸 프로퍼티 읽기, 쓰기와 같은 객체에 가해지는 작업을 중간에서 가로채는 객체로, 가로채진 작업은&nbsp;Proxy 자체에서 처리되기도 하고, 원래 객체가 처리하도록 그대로 전달되기도 합니다.\ndefineproperty란..\nobject의 getter,setter을 다시 설정할수 있는 메서드이다.. proxy는 속성의 삭제,권한등의 속성도 감지할 뿐만아니라 중첩된 객체에 대해서도 깊은 객체를 지원한다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"js_ proxy&amp;defineproperty","level":1,"id":"js_proxy&defineproperty_0"},{"heading":"비교 요약","level":3,"id":"비교_요약_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/js_-proxy&defineproperty.html","pathToRoot":"..","attachments":[],"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":1255,"sourcePath":"200-웹개발/js_ proxy&defineproperty.md","exportPath":"200-웹개발/js_-proxy&defineproperty.html","showInTree":true,"treeOrder":164,"backlinks":[],"type":"markdown"},"200-웹개발/js)-math.html":{"title":"js) math","icon":"","description":"\nMath.PI : 배정밀도 부동소수점 64비트 15자리까지.. 아마 가능할 듯? Math.abs : 절대값\nMath.round: 반올림\nMath.ceil: 올림\nMath.floor : 내림\nMath.sqrt :제곱근\nMath.random : 랜덤값\nMath.pow(x,n) : x^n -&gt; 지수연산자생김 **\nMath.max,min() : 최대값,최소값, 값없을시 infinity apply(this 할때 햇던 그 메서드), 스프레드연산자를 통해 배열을넣을수 잇음\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://evan-moon.github.io/2019/07/14/what-is-random/\" target=\"_self\">https://evan-moon.github.io/2019/07/14/what-is-random/</a><br>[<img alt=\"Xorshift - Wikipedia\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/ee/Xorshift.png\" referrerpolicy=\"no-referrer\" target=\"_self\" class=\"is-unresolved\" style=\"width: 200px; max-width: 100%;\"><br><img alt=\"스크린샷 2023-10-18 오후 8.12.58.png\" src=\"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png\" target=\"_self\">\n폰노이만\n예측 가능해서 잘안씀\nX: 수열\n상수값 m, a, c &lt;&lt; ANSI 표준씀\n난수를 이어서 출력할경우 난수 열의 상관관계를 예측가능함 = 다음거 예측가능\n메모리 적게사용\n한번만 뽑거나 제한된상황에서 사용 엑셀, MATLAB, PHP, Python, R, C++ 등에서 사용\n초기값 624길이백터생성 하드웨어 노이즈 or 날짜 등\ntwist 2번 shift register이용 LFSR 이용 메르센 난수 반복주기\n보완한 XOR 시브프 128+알고리즘이 v8엔진에서 사용됨.\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/Xorshift\" target=\"_self\">https://en.wikipedia.org/wiki/Xorshift</a>\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"프로퍼티","level":3,"id":"프로퍼티_0"},{"heading":"메서드","level":3,"id":"메서드_0"},{"heading":"랜덤함수 알고리즘","level":3,"id":"랜덤함수_알고리즘_0"},{"heading":"중앙제곱법","level":4,"id":"중앙제곱법_0"},{"heading":"선형합동법","level":4,"id":"선형합동법_0"},{"heading":"메르센 트위스터","level":4,"id":"메르센_트위스터_0"},{"heading":"XOR shift","level":4,"id":"XOR_shift_0"}],"links":[],"author":"","coverImageURL":"https://upload.wikimedia.org/wikipedia/commons/e/ee/Xorshift.png","fullURL":"200-웹개발/js)-math.html","pathToRoot":"..","attachments":["200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html"],"createdTime":1697635476396,"modifiedTime":1697635476396,"sourceSize":1518,"sourcePath":"200-웹개발/js) math.md","exportPath":"200-웹개발/js)-math.html","showInTree":true,"treeOrder":165,"backlinks":[],"type":"markdown"},"200-웹개발/next.js.html":{"title":"next.js","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gamma.app/docs/Nextjs--x5264qeums7dizb?mode=doc\" target=\"_self\">https://gamma.app/docs/Nextjs--x5264qeums7dizb?mode=doc</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/next.js.html","pathToRoot":"..","attachments":[],"createdTime":1742216506298,"modifiedTime":1742216510058,"sourceSize":56,"sourcePath":"200-웹개발/next.js.md","exportPath":"200-웹개발/next.js.html","showInTree":true,"treeOrder":166,"backlinks":[],"type":"markdown"},"200-웹개발/nodejs-nginx-vite-tomcat.html":{"title":"nodejs nginx vite tomcat","icon":"","description":" Nginx가 들어온 요청을 Node.js 서버로 전달(프록시)하는 구조이지,\nNginx가 Node.js 위에서 돌아가는 것은 아닙니다 따라서 nginx는 독립적으로 실행 가능함 정적 파일 서비스에는nginx으로만으로도 충분함 정적 웹사이트: Nginx만으로 충분히 서버를 띄우고 서비스할 수 있습니다. 동적 웹사이트: Nginx는 프록시 또는 로드밸런서 역할을 하고, 실제 동적 처리는 별도의 백엔드 서버가 담당합니다. 프론트엔드 개발 서버: 개발 중에 빠른 HMR(Hot Module Replacement)과 모듈 제공을 위해 Node.js 기반의 개발 서버를 띄웁니다.\n번들러: 프로덕션(배포) 시에는 소스 코드를 최적화된 정적 파일로 번들링합니다.\nNode.js 필요: Vite 자체는 Node.js 환경에서 실행되므로, Vite를 사용하려면 시스템에 Node.js가 설치되어 있어야 합니다<a data-tooltip-position=\"top\" aria-label=\"https://josephine10.hashnode.dev/difference-between-vite-nodejs-and-solidjs\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://josephine10.hashnode.dev/difference-between-vite-nodejs-and-solidjs\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://vite.dev/guide/features\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://vite.dev/guide/features\" target=\"_self\">4</a>.\n<br>Vite는 개발 서버를 내장하고 있으며, 개발 중에 소스 파일을 브라우저에 바로 제공하고, 코드 변경 시 실시간으로 반영하는(HMR) 기능을 제공합니다<a data-tooltip-position=\"top\" aria-label=\"https://ko.vite.dev/guide/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ko.vite.dev/guide/\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://bo5mi.tistory.com/265\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://bo5mi.tistory.com/265\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://1ilsang.dev/posts/vite-dev-server\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://1ilsang.dev/posts/vite-dev-server\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@joeyoungmin/vite\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@joeyoungmin/vite\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://js-web.tistory.com/29\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://js-web.tistory.com/29\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://blog.naver.com/eirene100999/223529479819?recommendTrackingCode=2\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.naver.com/eirene100999/223529479819?recommendTrackingCode=2\" target=\"_self\">8</a><a data-tooltip-position=\"top\" aria-label=\"https://blog.hectodata.co.kr/bonjour-vite/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.hectodata.co.kr/bonjour-vite/\" target=\"_self\">9</a>. <br>공식 문서와 여러 자료에서 Vite의 주요 기능으로&nbsp;\"개발 서버\" 제공을 명확히 언급하고 있습니다. \"Vite(프랑스어로 '빠르다')는 빠르고 간결한 모던 웹 프로젝트 개발 경험에 초점을 맞춰 탄생한 빌드 툴입니다. 크게 두 가지 부분으로 구성되어 있습니다: 네이티브 ES 모듈을 통해 소스 파일을 제공하는 개발서버...<a data-tooltip-position=\"top\" aria-label=\"https://ko.vite.dev/guide/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ko.vite.dev/guide/\" target=\"_self\">1</a> <br>Vite를 실행하면 Node.js 기반의 HTTP 서버가 실제로 뜨고, 이 서버가 개발 중에 클라이언트(브라우저)와 통신합니다<a data-tooltip-position=\"top\" aria-label=\"https://1ilsang.dev/posts/vite-dev-server\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://1ilsang.dev/posts/vite-dev-server\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://js-web.tistory.com/29\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://js-web.tistory.com/29\" target=\"_self\">5</a><a data-tooltip-position=\"top\" aria-label=\"https://blog.naver.com/eirene100999/223529479819?recommendTrackingCode=2\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.naver.com/eirene100999/223529479819?recommendTrackingCode=2\" target=\"_self\">8</a><a data-tooltip-position=\"top\" aria-label=\"https://blog.hectodata.co.kr/bonjour-vite/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.hectodata.co.kr/bonjour-vite/\" target=\"_self\">9</a>. Tomcat은 자바 기반 웹 애플리케이션을 실행하는&nbsp;서블릿 컨테이너(Java Servlet Container)입니다.\n주로&nbsp;Java Servlet과 JSP(JavaServer Pages)를 실행하며, Java로 작성된 동적 웹 애플리케이션을 구동합니다.\nTomcat은 HTTP 요청을 받아 Java 코드를 실행하고, 그 결과를 웹 브라우저에 응답합니다.\n<br>즉, Tomcat은&nbsp;동적 웹 컨텐츠(예: 로그인, 데이터베이스 연동 등) 처리가 주 목적입니다<a data-tooltip-position=\"top\" aria-label=\"https://www.logicmonitor.com/blog/what-is-apache-tomcat-server-and-how-does-it-work\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.logicmonitor.com/blog/what-is-apache-tomcat-server-and-how-does-it-work\" target=\"_self\">1</a><a data-tooltip-position=\"top\" aria-label=\"https://www.simplilearn.com/what-is-tomcat-article\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.simplilearn.com/what-is-tomcat-article\" target=\"_self\">5</a>.\n<br>WAS 내부에서&nbsp;서블릿과 JSP의 생명주기 관리, 요청/응답 처리, 보안, 스레드 관리 등을 담당하는 핵심 컴포넌트입니다<a data-tooltip-position=\"top\" aria-label=\"https://en.wikipedia.org/wiki/Web_container\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://en.wikipedia.org/wiki/Web_container\" target=\"_self\">2</a><a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@mooh2jj/WAS%EB%8A%94-%EC%84%9C%EB%B8%94%EB%A6%BF-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%ED%8C%8C%ED%97%A4%EC%B9%98%EA%B8%B0\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@mooh2jj/WAS%EB%8A%94-%EC%84%9C%EB%B8%94%EB%A6%BF-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%ED%8C%8C%ED%97%A4%EC%B9%98%EA%B8%B0\" target=\"_self\">3</a><a data-tooltip-position=\"top\" aria-label=\"https://bny9164.tistory.com/56\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://bny9164.tistory.com/56\" target=\"_self\">4</a><a data-tooltip-position=\"top\" aria-label=\"https://m42-orion.tistory.com/157\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://m42-orion.tistory.com/157\" target=\"_self\">5</a>. 즉,&nbsp;Java Servlet/JSP 등 웹 컴포넌트의 실행 환경을 제공하는 부분입니다.\nWAS는 서블릿 컨테이너를 반드시 포함하고 있습니다.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"nginx","level":2,"id":"nginx_0"},{"heading":"Vite의 역할","level":2,"id":"Vite의_역할_0"},{"heading":"tomcat","level":3,"id":"tomcat_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/nodejs-nginx-vite-tomcat.html","pathToRoot":"..","attachments":[],"createdTime":1748333046206,"modifiedTime":1754970285825,"sourceSize":5357,"sourcePath":"200-웹개발/nodejs nginx vite tomcat.md","exportPath":"200-웹개발/nodejs-nginx-vite-tomcat.html","showInTree":true,"treeOrder":167,"backlinks":[],"type":"markdown"},"200-웹개발/react-폴더-구조.html":{"title":"react 폴더 구조","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=64Fx5Y1gEOA\" target=\"_self\">https://www.youtube.com/watch?v=64Fx5Y1gEOA</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/react-폴더-구조.html","pathToRoot":"..","attachments":[],"createdTime":1710574819020,"modifiedTime":1710574827415,"sourceSize":43,"sourcePath":"200-웹개발/react 폴더 구조.md","exportPath":"200-웹개발/react-폴더-구조.html","showInTree":true,"treeOrder":168,"backlinks":[],"type":"markdown"},"200-웹개발/react_ref.html":{"title":"REACT_REF","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://vietnamlife.info/react%EC%97%90%EC%84%9C-state%EC%99%80-ref%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EB%B0%8F-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0/\" target=\"_self\">https://vietnamlife.info/react%EC%97%90%EC%84%9C-state%EC%99%80-ref%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EB%B0%8F-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0/</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/react_ref.html","pathToRoot":"..","attachments":[],"createdTime":1720081060540,"modifiedTime":1720081060540,"sourceSize":190,"sourcePath":"200-웹개발/REACT_REF.md","exportPath":"200-웹개발/react_ref.html","showInTree":true,"treeOrder":169,"backlinks":[],"type":"markdown"},"200-웹개발/react-query.html":{"title":"react-query","icon":"","description":"\nfresh\nfetching\nstale\ninactive\ndelete\n<img alt=\"Pasted image 20231114151038.png\" src=\"200-웹개발/assets/pasted-image-20231114151038.png\" target=\"_self\">\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"LifeCycle","level":2,"id":"LifeCycle_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"200-웹개발/react-query.html","pathToRoot":"..","attachments":["200-웹개발/assets/pasted-image-20231114151038.html"],"createdTime":1699942239211,"modifiedTime":1699942239211,"sourceSize":102,"sourcePath":"200-웹개발/react-query.md","exportPath":"200-웹개발/react-query.html","showInTree":true,"treeOrder":170,"backlinks":[],"type":"markdown"},"200-웹개발/redux-toolkit.html":{"title":"redux toolkit","icon":"","description":"// 액션 타입\nconst INCREMENT = 'INCREMENT'; // 액션 생성 함수\nconst increment = () =&gt; ({ type: INCREMENT }); // 리듀서\nconst counterReducer = (state = 0, action) =&gt; { switch (action.type) { case INCREMENT: return state + 1; default: return state; }\n}; // 스토어 생성\nimport { createStore } from 'redux';\nconst store = createStore(counterReducer);\nimport { createSlice } from '@reduxjs/toolkit'; const counterSlice = createSlice({ name: 'counter', initialState: 0, reducers: { increment: (state) =&gt; state + 1, decrement: (state) =&gt; state - 1, },\n}); export const { increment, decrement } = counterSlice.actions;\nexport default counterSlice.reducer; // 이후 위처럼 리듀서를 등록 createSlice : createReducer + createAction 함수이름으로 액션을 자동으로 불변성 유지해줌 . push같은거 써도 알아서 처리해줌 다중리스트일때 유용할둣 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"리덕스","level":3,"id":"리덕스_0"},{"heading":"리덕스 툴킷","level":2,"id":"리덕스_툴킷_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/redux-toolkit.html","pathToRoot":"..","attachments":[],"createdTime":1748780352817,"modifiedTime":1748781065434,"sourceSize":1011,"sourcePath":"200-웹개발/redux toolkit.md","exportPath":"200-웹개발/redux-toolkit.html","showInTree":true,"treeOrder":171,"backlinks":[],"type":"markdown"},"200-웹개발/suspense.html":{"title":"Suspense","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.daleseo.com/react-suspense/\" target=\"_self\">https://www.daleseo.com/react-suspense/</a>질문\nwaterfall 현상이 나쁜가? ui waterfall은 모르겟음\nnetworkwaterfall은 나쁨.. 동기적으로 실행됨.. reactquery <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://happysisyphe.tistory.com/54\" target=\"_self\">https://happysisyphe.tistory.com/54</a>\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://yoonhaemin.com/tag/experience/react-error-handling/\" target=\"_self\">https://yoonhaemin.com/tag/experience/react-error-handling/</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/suspense.html","pathToRoot":"..","attachments":[],"createdTime":1699942236959,"modifiedTime":1738529702668,"sourceSize":289,"sourcePath":"200-웹개발/Suspense.md","exportPath":"200-웹개발/suspense.html","showInTree":true,"treeOrder":172,"backlinks":[],"type":"markdown"},"200-웹개발/vanilla-js.html":{"title":"vanilla js","icon":"","description":"use like spa : <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gyyeom.tistory.com/137\" target=\"_self\">https://gyyeom.tistory.com/137</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"200-웹개발/vanilla-js.html","pathToRoot":"..","attachments":[],"createdTime":1700993439258,"modifiedTime":1700993471574,"sourceSize":47,"sourcePath":"200-웹개발/vanilla js.md","exportPath":"200-웹개발/vanilla-js.html","showInTree":true,"treeOrder":173,"backlinks":[],"type":"markdown"},"300-백엔드개발/assets/스프링-db-접근-1748788030972.html":{"title":"스프링 DB 접근-1748788030972","icon":"","description":"<img src=\"300-백엔드개발/assets/스프링-db-접근-1748788030972.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/스프링-db-접근-1748788030972.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/스프링-db-접근-1748788030972.html"],"createdTime":1748788030979,"modifiedTime":1748788030980,"sourceSize":78325,"sourcePath":"300-백엔드개발/assets/스프링 DB 접근-1748788030972.png","exportPath":"300-백엔드개발/assets/스프링-db-접근-1748788030972.html","showInTree":true,"treeOrder":176,"backlinks":["300-백엔드개발/스프링-db-접근.html"],"type":"attachment"},"300-백엔드개발/assets/아키텍처-1747921913860.html":{"title":"아키텍처-1747921913860","icon":"","description":"<img src=\"300-백엔드개발/assets/아키텍처-1747921913860.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/아키텍처-1747921913860.png","fullURL":"300-백엔드개발/assets/아키텍처-1747921913860.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/아키텍처-1747921913860.html"],"createdTime":1747921913870,"modifiedTime":1747921913870,"sourceSize":44149,"sourcePath":"300-백엔드개발/assets/아키텍처-1747921913860.png","exportPath":"300-백엔드개발/assets/아키텍처-1747921913860.html","showInTree":true,"treeOrder":177,"backlinks":["300-백엔드개발/스프링-프레임워크-기본(spring).html"],"type":"attachment"},"300-백엔드개발/assets/애자일-1749384475904.html":{"title":"애자일-1749384475904","icon":"","description":"<img src=\"300-백엔드개발/assets/애자일-1749384475904.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/애자일-1749384475904.png","fullURL":"300-백엔드개발/assets/애자일-1749384475904.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/애자일-1749384475904.html"],"createdTime":1749384475912,"modifiedTime":1749384475913,"sourceSize":518826,"sourcePath":"300-백엔드개발/assets/애자일-1749384475904.png","exportPath":"300-백엔드개발/assets/애자일-1749384475904.html","showInTree":true,"treeOrder":178,"backlinks":["300-백엔드개발/애자일.html"],"type":"attachment"},"300-백엔드개발/assets/aggregate-1749754173915.html":{"title":"Aggregate-1749754173915","icon":"","description":"<img src=\"300-백엔드개발/assets/aggregate-1749754173915.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/aggregate-1749754173915.png","fullURL":"300-백엔드개발/assets/aggregate-1749754173915.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/aggregate-1749754173915.html"],"createdTime":1749754173921,"modifiedTime":1749754173921,"sourceSize":111137,"sourcePath":"300-백엔드개발/assets/Aggregate-1749754173915.png","exportPath":"300-백엔드개발/assets/aggregate-1749754173915.html","showInTree":true,"treeOrder":179,"backlinks":["300-백엔드개발/aggregate.html"],"type":"attachment"},"300-백엔드개발/assets/biz,dev,ops-1749383255427.html":{"title":"biz,dev,ops-1749383255427","icon":"","description":"<img src=\"300-백엔드개발/assets/biz,dev,ops-1749383255427.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/biz,dev,ops-1749383255427.png","fullURL":"300-백엔드개발/assets/biz,dev,ops-1749383255427.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/biz,dev,ops-1749383255427.html"],"createdTime":1749383255434,"modifiedTime":1749383255434,"sourceSize":288259,"sourcePath":"300-백엔드개발/assets/biz,dev,ops-1749383255427.png","exportPath":"300-백엔드개발/assets/biz,dev,ops-1749383255427.html","showInTree":true,"treeOrder":180,"backlinks":["400-인프라-&-아키텍처/biz,dev,ops.html"],"type":"attachment"},"300-백엔드개발/assets/biz,dev,ops-1749384334755.html":{"title":"biz,dev,ops-1749384334755","icon":"","description":"<img src=\"300-백엔드개발/assets/biz,dev,ops-1749384334755.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/biz,dev,ops-1749384334755.png","fullURL":"300-백엔드개발/assets/biz,dev,ops-1749384334755.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/biz,dev,ops-1749384334755.html"],"createdTime":1749384334788,"modifiedTime":1749384334788,"sourceSize":182348,"sourcePath":"300-백엔드개발/assets/biz,dev,ops-1749384334755.png","exportPath":"300-백엔드개발/assets/biz,dev,ops-1749384334755.html","showInTree":true,"treeOrder":181,"backlinks":["400-인프라-&-아키텍처/biz,dev,ops.html"],"type":"attachment"},"300-백엔드개발/assets/db-영속성과-저장-1751787526152.html":{"title":"db 영속성과 저장-1751787526152","icon":"","description":"<img src=\"300-백엔드개발/assets/db-영속성과-저장-1751787526152.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/db-영속성과-저장-1751787526152.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/db-영속성과-저장-1751787526152.html"],"createdTime":1751787526158,"modifiedTime":1751787526158,"sourceSize":203151,"sourcePath":"300-백엔드개발/assets/db 영속성과 저장-1751787526152.png","exportPath":"300-백엔드개발/assets/db-영속성과-저장-1751787526152.html","showInTree":true,"treeOrder":182,"backlinks":["300-백엔드개발/db-영속성과-저장.html"],"type":"attachment"},"300-백엔드개발/assets/docker-1751777737123.html":{"title":"docker-1751777737123","icon":"","description":"<img src=\"300-백엔드개발/assets/docker-1751777737123.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/docker-1751777737123.png","fullURL":"300-백엔드개발/assets/docker-1751777737123.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/docker-1751777737123.html"],"createdTime":1751777737128,"modifiedTime":1751777737128,"sourceSize":170335,"sourcePath":"300-백엔드개발/assets/docker-1751777737123.png","exportPath":"300-백엔드개발/assets/docker-1751777737123.html","showInTree":true,"treeOrder":183,"backlinks":["300-백엔드개발/docker.html"],"type":"attachment"},"300-백엔드개발/assets/k8s-1751779119042.html":{"title":"k8s-1751779119042","icon":"","description":"<img src=\"300-백엔드개발/assets/k8s-1751779119042.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/k8s-1751779119042.png","fullURL":"300-백엔드개발/assets/k8s-1751779119042.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/k8s-1751779119042.html"],"createdTime":1751779119049,"modifiedTime":1751779119050,"sourceSize":151463,"sourcePath":"300-백엔드개발/assets/k8s-1751779119042.png","exportPath":"300-백엔드개발/assets/k8s-1751779119042.html","showInTree":true,"treeOrder":184,"backlinks":["400-인프라-&-아키텍처/k8s.html"],"type":"attachment"},"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html":{"title":"k8s,kafka,msa와의 관계-1751777362953","icon":"","description":"<img src=\"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html"],"createdTime":1751777362960,"modifiedTime":1751777362961,"sourceSize":562304,"sourcePath":"300-백엔드개발/assets/k8s,kafka,msa와의 관계-1751777362953.png","exportPath":"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html","showInTree":true,"treeOrder":185,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html"],"type":"attachment"},"300-백엔드개발/assets/msa-1749455998102.html":{"title":"msa-1749455998102","icon":"","description":"<img src=\"300-백엔드개발/assets/msa-1749455998102.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749455998102.png","fullURL":"300-백엔드개발/assets/msa-1749455998102.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa-1749455998102.html"],"createdTime":1749455998107,"modifiedTime":1749455998108,"sourceSize":126089,"sourcePath":"300-백엔드개발/assets/msa-1749455998102.png","exportPath":"300-백엔드개발/assets/msa-1749455998102.html","showInTree":true,"treeOrder":186,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment"},"300-백엔드개발/assets/msa-1749544836042.html":{"title":"msa-1749544836042","icon":"","description":"<img src=\"300-백엔드개발/assets/msa-1749544836042.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749544836042.png","fullURL":"300-백엔드개발/assets/msa-1749544836042.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa-1749544836042.html"],"createdTime":1749544836049,"modifiedTime":1749544836049,"sourceSize":159943,"sourcePath":"300-백엔드개발/assets/msa-1749544836042.png","exportPath":"300-백엔드개발/assets/msa-1749544836042.html","showInTree":true,"treeOrder":187,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment"},"300-백엔드개발/assets/msa-1749752615566.html":{"title":"msa-1749752615566","icon":"","description":"<img src=\"300-백엔드개발/assets/msa-1749752615566.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749752615566.png","fullURL":"300-백엔드개발/assets/msa-1749752615566.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa-1749752615566.html"],"createdTime":1749752615572,"modifiedTime":1749752615572,"sourceSize":124499,"sourcePath":"300-백엔드개발/assets/msa-1749752615566.png","exportPath":"300-백엔드개발/assets/msa-1749752615566.html","showInTree":true,"treeOrder":188,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment"},"300-백엔드개발/assets/msa-1749752634954.html":{"title":"msa-1749752634954","icon":"","description":"<img src=\"300-백엔드개발/assets/msa-1749752634954.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749752634954.png","fullURL":"300-백엔드개발/assets/msa-1749752634954.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa-1749752634954.html"],"createdTime":1749752634959,"modifiedTime":1749752634959,"sourceSize":172530,"sourcePath":"300-백엔드개발/assets/msa-1749752634954.png","exportPath":"300-백엔드개발/assets/msa-1749752634954.html","showInTree":true,"treeOrder":189,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment"},"300-백엔드개발/assets/msa-1749752670525.html":{"title":"msa-1749752670525","icon":"","description":"<img src=\"300-백엔드개발/assets/msa-1749752670525.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749752670525.png","fullURL":"300-백엔드개발/assets/msa-1749752670525.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa-1749752670525.html"],"createdTime":1749752670530,"modifiedTime":1749752670530,"sourceSize":171394,"sourcePath":"300-백엔드개발/assets/msa-1749752670525.png","exportPath":"300-백엔드개발/assets/msa-1749752670525.html","showInTree":true,"treeOrder":190,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment"},"300-백엔드개발/assets/msa-1749753255535.html":{"title":"msa-1749753255535","icon":"","description":"<img src=\"300-백엔드개발/assets/msa-1749753255535.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749753255535.png","fullURL":"300-백엔드개발/assets/msa-1749753255535.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa-1749753255535.html"],"createdTime":1749753255549,"modifiedTime":1749753255550,"sourceSize":71570,"sourcePath":"300-백엔드개발/assets/msa-1749753255535.png","exportPath":"300-백엔드개발/assets/msa-1749753255535.html","showInTree":true,"treeOrder":191,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment"},"300-백엔드개발/assets/msa설계-1750876404713.html":{"title":"msa설계-1750876404713","icon":"","description":"<img src=\"300-백엔드개발/assets/msa설계-1750876404713.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa설계-1750876404713.png","fullURL":"300-백엔드개발/assets/msa설계-1750876404713.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa설계-1750876404713.html"],"createdTime":1750876404723,"modifiedTime":1750876404726,"sourceSize":326877,"sourcePath":"300-백엔드개발/assets/msa설계-1750876404713.png","exportPath":"300-백엔드개발/assets/msa설계-1750876404713.html","showInTree":true,"treeOrder":192,"backlinks":["400-인프라-&-아키텍처/msa설계.html"],"type":"attachment"},"300-백엔드개발/assets/msa설계-1750876609108.html":{"title":"msa설계-1750876609108","icon":"","description":"<img src=\"300-백엔드개발/assets/msa설계-1750876609108.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa설계-1750876609108.png","fullURL":"300-백엔드개발/assets/msa설계-1750876609108.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa설계-1750876609108.html"],"createdTime":1750876609113,"modifiedTime":1750876609113,"sourceSize":272139,"sourcePath":"300-백엔드개발/assets/msa설계-1750876609108.png","exportPath":"300-백엔드개발/assets/msa설계-1750876609108.html","showInTree":true,"treeOrder":193,"backlinks":["400-인프라-&-아키텍처/msa설계.html"],"type":"attachment"},"300-백엔드개발/assets/msa설계-1750880282832.html":{"title":"msa설계-1750880282832","icon":"","description":"<img src=\"300-백엔드개발/assets/msa설계-1750880282832.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/msa설계-1750880282832.png","fullURL":"300-백엔드개발/assets/msa설계-1750880282832.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa설계-1750880282832.html"],"createdTime":1750880282838,"modifiedTime":1750880282838,"sourceSize":188507,"sourcePath":"300-백엔드개발/assets/msa설계-1750880282832.png","exportPath":"300-백엔드개발/assets/msa설계-1750880282832.html","showInTree":true,"treeOrder":194,"backlinks":["400-인프라-&-아키텍처/msa설계.html"],"type":"attachment"},"300-백엔드개발/assets/msa전체적인-구조-1751776935880.html":{"title":"msa전체적인 구조-1751776935880","icon":"","description":"<img src=\"300-백엔드개발/assets/msa전체적인-구조-1751776935880.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/msa전체적인-구조-1751776935880.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/msa전체적인-구조-1751776935880.html"],"createdTime":1751776935885,"modifiedTime":1751776935885,"sourceSize":299903,"sourcePath":"300-백엔드개발/assets/msa전체적인 구조-1751776935880.png","exportPath":"300-백엔드개발/assets/msa전체적인-구조-1751776935880.html","showInTree":true,"treeOrder":195,"backlinks":["400-인프라-&-아키텍처/msa전체적인-구조.html"],"type":"attachment"},"300-백엔드개발/assets/spring-mvc-1748447479487.html":{"title":"Spring MVC-1748447479487","icon":"","description":"<img src=\"300-백엔드개발/assets/spring-mvc-1748447479487.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/spring-mvc-1748447479487.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/spring-mvc-1748447479487.html"],"createdTime":1748447479492,"modifiedTime":1748447479493,"sourceSize":70223,"sourcePath":"300-백엔드개발/assets/Spring MVC-1748447479487.png","exportPath":"300-백엔드개발/assets/spring-mvc-1748447479487.html","showInTree":true,"treeOrder":196,"backlinks":["300-백엔드개발/spring-mvc.html"],"type":"attachment"},"300-백엔드개발/assets/spring-mvc-1748452533042.html":{"title":"Spring MVC-1748452533042","icon":"","description":"<img src=\"300-백엔드개발/assets/spring-mvc-1748452533042.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/spring-mvc-1748452533042.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/spring-mvc-1748452533042.html"],"createdTime":1748452533048,"modifiedTime":1748452533049,"sourceSize":80863,"sourcePath":"300-백엔드개발/assets/Spring MVC-1748452533042.png","exportPath":"300-백엔드개발/assets/spring-mvc-1748452533042.html","showInTree":true,"treeOrder":197,"backlinks":["300-백엔드개발/spring-mvc.html"],"type":"attachment"},"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html":{"title":"webflux vs mvc-1757788425212","icon":"","description":"<img src=\"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html"],"createdTime":1757788425218,"modifiedTime":1757788425218,"sourceSize":83137,"sourcePath":"300-백엔드개발/assets/webflux vs mvc-1757788425212.png","exportPath":"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","showInTree":true,"treeOrder":198,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"attachment"},"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html":{"title":"webflux vs mvc-1757788537542","icon":"","description":"<img src=\"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html","pathToRoot":"../..","attachments":["300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html"],"createdTime":1757788537549,"modifiedTime":1757788537550,"sourceSize":84397,"sourcePath":"300-백엔드개발/assets/webflux vs mvc-1757788537542.png","exportPath":"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html","showInTree":true,"treeOrder":199,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"attachment"},"300-백엔드개발/스프링-부트-모니터링,-보안설정.html":{"title":"스프링 부트 모니터링, 보안설정","icon":"","description":"\n모니터링 및 헬스 체크 Spring Boot Actuator는 운영 상태 모니터링, 관리, 상태 점검(헬스 체크), 메트릭 수집 등 다양한 엔드포인트를 제공\n대표적으로&nbsp;/actuator/health&nbsp;엔드포인트를 통해 애플리케이션의 건강 상태(UP, DOWN 등)를 확인할 수 있습니다. 이 엔드포인트는 데이터베이스, 메시지 브로커, 캐시 등 주요 의존성의 상태까지 함께 체크할 수 있음\n/actuator/metrics&nbsp;엔드포인트에서는 JVM, CPU, 메모리, HTTP 요청, 커스텀 비즈니스 메트릭 등 다양한 성능 지표를 실시간으로 확인할 수 있음\n외부 모니터링 시스템(예: Prometheus, Grafana)과 연동하여 메트릭을 수집하고 시각화할 수 있습니다. 이때 Micrometer 라이브러리를 함께 사용하면 Prometheus 등 다양한 백엔드로 메트릭을 내보낼 수 있음\n# actuator 엔드포인트 노출 설정\nmanagement.endpoints.web.exposure.include=health,metrics,prometheus # health 상세 정보 항상 노출\nmanagement.endpoint.health.show-details=always 보안 설정 연동시 인증(로그인), 인가(권한 관리) 기능이 자동으로 적용\nspring-boot-starter-security&nbsp;의존성만 추가해도, 모든 엔드포인트에 기본적으로 인증이 필요하도록 보안이 활성화\n기본 설정에서는 애플리케이션 실행 시 콘솔에 임시로 생성된 아이디/비밀번호가 출력되어, 이를 통해 로그인할 수 있음\n필요에 따라 인증 방식, 접근 권한, 로그인/로그아웃 페이지, 암호화 방식 등 세부 보안 정책을 코드나 설정 파일로 쉽게 커스터마이징할 수 있음\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Actuator","level":2,"id":"Actuator_0"},{"heading":"Spring Security","level":2,"id":"Spring_Security_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/스프링-부트-모니터링,-보안설정.html","pathToRoot":"..","attachments":[],"createdTime":1748441656409,"modifiedTime":1757784026994,"sourceSize":1752,"sourcePath":"300-백엔드개발/스프링 부트 모니터링, 보안설정.md","exportPath":"300-백엔드개발/스프링-부트-모니터링,-보안설정.html","showInTree":true,"treeOrder":200,"backlinks":[],"type":"markdown"},"300-백엔드개발/스프링-부트(spring-boot).html":{"title":"스프링 부트(spring boot)","icon":"","description":"\n스프링을 보다 빠르고 간편하게 사용가능하게 만들어줌 단독 실행 가능 내장 웹 서버 탑제 tomcat, jetty, undertow같은 웹서버를 내장하고 있다 기본 값: tomcat, 다른 웹서버를 선택 가능\n<a class=\"internal-link\" data-href=\"스프링부트 내장 서버 역활과 특징.md\" href=\"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html\" target=\"_self\" rel=\"noopener nofollow\">스프링부트 내장 서버 역활과 특징</a> jar 파일 하나로 배포 JAR 파일은 \"Java ARchive\"의 약자로, 여러 개의 자바 클래스 파일(.class), 이미지, 텍스트 등 다양한 리소스 파일, 그리고 메타데이터(설정 정보 등)를 하나로 묶어서 압축한 파일 형식 바로 실행 가능 자동 설정 포함된 라이브러리와 환경을 분석해서 필요한 설정을 자동 적용\n예시 db 라이브러리 추가 시 자동연결설정 웹 라이브러리 추가 내장 서버와 스프링 mvc설정을 자동으로 구성함 starter 의존성 제공 목적별로 미리 조합된 의존성 묶음(starter)을 제공함\nspring-boot-starter-web,&nbsp;spring-boot-starter-data-jpa 설정 파일 최소화 복잡한 XML 설정 없이,&nbsp;application.properties&nbsp;또는&nbsp;application.yml&nbsp;파일만으로 환경 설정이 가능\n기본값으로도 바로 실행 가능 상용화 가능한 수준의 지원 프로덕션 준비기능 내장 모니터링, 헬스 체크, 메트릭, 외부 설정 등 상용 서비스 운영에 필요한 기능을 기본 제공(Actuator 등)합니다\n<br><a class=\"internal-link\" data-href=\"스프링부트 내장 서버 역활과 특징.md\" href=\"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html\" target=\"_self\" rel=\"noopener nofollow\">스프링부트 내장 서버 역활과 특징</a> 보안, 테스트 , 환경별 설정 지원 기본적인 보안 설정, 테스트 라이브러리, 로컬/운영 등 환경별 설정 프로파일 관리 기능도 내장되어 있습니다 개발 생산성 향상 비지니스 로직에 집중\n빠른 프로토타이핑과 마이크로 서비스에 적합 독립적 실행,배포 가능 Project Metadata - 프로젝트 메타데이터\nGroup : 기업 도메인 명\nArtifact : 빌드 하고 나올 애플리케이션 결과물\nName : 프로젝트 명\nDescription : 애플리케이션 설명\nPackage name : 패키지 이름으로, Group과 Artifact를 설정하면 자동으로 만들어줌\nPackaging : jar, war jar하면 별도 서버 설치 없이 실행가능\nwar : 이미 외장 was가 구축되어있거나 Java EE 를 반드시 사용해야할 때 Dependencies Spring Boot DevTools : Spring Boot 애플리케이션을 개발하고 디버깅을 하는데 도움을 주는 도구 모음이다. 개발 단계에서 자동으로 다시 로드되는 기능을 제공하여 개발자가 변경 사항을 신속하게 확인할 수 있도록 도움을 주며,라이브 리로딩, 프로퍼티 변경 감지 및 자동 재 시작 같은 기능도 제공한다. Lombok : Java 라이브러리로 반복되는 getter , setter, toString 등의 메서드 작성 코드를 줄여주는 다이어트 라이브러리로, 코드 가독성을 향상시키고 개발 생산성을 높일 수 있다. 사용 시 어노테이션을 사용해 코드를 간결하게 작성할 수 있고, 컴파일 시점에 필요한 코드를 자동으로 생산해주기 때문에 개발자는 더 적은 노력으로 효율적인 코드를 작성할 수 있다. Spring Web : 스프링 기반의 웹 애플리케이션을 개발하는 데 필요한 라이브러리들이 자동으로 설정된다. 내장 톰캣 뿐 아니라 Spring MVC 패턴을 구현하는 데에 필요한 대부분의 기능들이 포함되어 있다. H2 Database : 자바 기반의 오픈소스 관계형 데이터베이스 관리 시스템(DBMS)이다. 따로 설치가 필요 없으며, 용량이 매우 가볍고 웹용 콘솔을 제공하여 개발용 로컬 DB로 사용이 용이하다.\nSpring Boot가 지원하는 인메모리 관계형 데이터베이스로, 애플리케이션을 재 가동시킬 때마다 초기화되기 때문에 로컬 환경이나 테스트 환경에서 많이 쓰인다. Mustache : Mustache는 템플릿 엔진의 일종으로, 가독성이 좋고 간단한 문법을 제공하는 템플릿 언어다. Spring Boot에서 Mustache를 사용하는 경우, Mustache 템플릿을 뷰 엔진으로 설정하여 HTML 템플릿을 렌더링할 수 있다.\n모두 다 설정했다면 GENERATE 버튼을 클릭해 프로젝트를 생성 및 패키징 하고 프로젝트를 내 컴퓨터의 선택한 디렉토리에 다운로드 하면 된다. 클래스, 인터페이스 등 Java 관련 파일이 위치하는 디렉터리이다\n@SpringBootApplication [플젝명]Application.java 파일에 있음\n스프링 어플리케이션을 실행하는 역할\n프로젝트 최상단에 위치해야함(여기서부터 읽음)\n아래의 3 어노테이션을 한번에 처리함 @SpringBootConfiguration 빈을 생성하는 configuration파일임을 명시함\n싱글톤으로 빈이 등록될 수 있도록 도와줌 @EnableAutoConfiguration 메타파일을 읽고 정의된 설정을 자동 구성함 @ComponentScan @Component, @Configuration @Repository @Service @RestController 자바 파일을 제외한 HTML , CSS , Javascript, 환경 파일 등을 저장하는 공간\ntemplates templates 디렉토리에는 템플릿 파일을 저장\n템플릿 파일은 자바 코드를 삽입할 수 있는 HTML 형식의 파일로, 스프링 부트에서 생성한 자바 객체를 HTML 형태로 출력할 수 있다. static static 디렉터리에는 이미지 파일, CSS 파일, JavaScript파일 등을 저장 application.yml 또는 application.properties properties 로 하면 많이 못담음 (계층 형성몬하니깐)\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://yaml.org/\" target=\"_self\">https://yaml.org/</a> 프로젝트에서 작성한 모듈을 테스트하기 위한 테스트 코드를 작성하는 공간\nJUnit 등의 테스트 라이브러리를 사용하여 서버를 실행하지 않은 상태에서 작성한 코드를 테스트할 수 있음\nbuild.gradle 프로젝트에 필요한 플러그인과 라이브러리들을 설치하기 위한 내용을 작성\ngradle은 groovy(스크립트 언어)를 기반으로 만들어져 문법이 간결하고 가독성이 높음\nbuild.gradle에는 spring Initializr에서 추가한 dependencies가 추가되어 있는 모습을 볼 수 있음 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"장점","level":2,"id":"장점_0"},{"heading":"Spring Initializr","level":2,"id":"Spring_Initializr_0"},{"heading":"프로젝트 구조","level":2,"id":"프로젝트_구조_0"},{"heading":"src/main/java","level":3,"id":"src/main/java_0"},{"heading":"src/main/resources","level":3,"id":"src/main/resources_0"},{"heading":"src/test/java","level":3,"id":"src/test/java_0"}],"links":["300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","300-백엔드개발/스프링부트-내장-서버-역활과-특징.html"],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/스프링-부트(spring-boot).html","pathToRoot":"..","attachments":[],"createdTime":1748281521610,"modifiedTime":1748787396692,"sourceSize":6551,"sourcePath":"300-백엔드개발/스프링 부트(spring boot).md","exportPath":"300-백엔드개발/스프링-부트(spring-boot).html","showInTree":true,"treeOrder":201,"backlinks":[],"type":"markdown"},"300-백엔드개발/스프링-프레임워크-기본(spring).html":{"title":"스프링 프레임워크 기본(spring)","icon":"","description":"클라이이언트(webserver)\n웹어플리케이션서버 (probably was)\n데이터베이스 서버 framework와 library차이\n제어의 역전!! 제어가 누가 하냐\nPOJO(Plain Old Java Object)기반 구성 : 객체 지향적인 원리에 충실하면서 환경과 기술에 종속되지 않고 필요에 따라 재활용될 수 있는 방식으로 설계된 오브젝트이다.\n제어의 역행(IoC)과 의존성 주입(DI)를 통한 객체간의 구성\nAOP(관점 지향 프로그래밍) 지원 종단(핵심)관심사 : 비지니스 장점 : 순수 비지니스 코드만기기가능 횡단관심사 : 공통관심사 중복재거 유지보수 굳\naspect : 어떤부가기능을 어디에 적용할지 정의한것 횡단관심사를 캡슐화\nadvice : aspect에서 적용되는 메서드\njoin point : aspect가 적용되는 시점 종단횡단의 교차라고생각하면될듯? <img alt=\"아키텍처-1747921913860.png\" src=\"300-백엔드개발/assets/아키텍처-1747921913860.png\" target=\"_self\">\n빈(Bean) : 스프링 컨테이너가 관리하는 자바 객체이다. 기본적을 싱글톤 방식\n수동으로 등록 방법 설정 클래스 파일을 만들어 @Configuration 적용\n빈으로 등록할 메서드에 대해 @Bean적용 스프링 컨테이너(Spring Container) : 스프링에서 빈 객체들을 관리하는 공간이다. 빈 팩토리라고도 부름 빈 팩토리를 부모로 갖는 appliationcontext 도 있다. 부가기능을 추가로 제공함 굳이 따지자면 이렇게 두개로 나눌 수있음 스프링 컨테이너는 빈(Bean)의 생성부터 소멸까지 개발자 대신 관리해준다.\n스프링 컨테이너에 객체, 빈(Bean)을 등록하는 이유는 객체간의 의존 관계들을 스프링이 관리하도록 하기 위해서다. 핵심 기술 : 스프링 loC 컨테이너, AOP , 기타 등등 웹 기술 : 스프링 MVC , 스프링 WebFlux 데이터 접근 기술 : 트랜잭션, JDBC, ORM\n테스트 : 스프링 기반 테스트 지원 등등..\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@haero_kim/SOLID-%EC%9B%90%EC%B9%99-%EC%96%B4%EB%A0%B5%EC%A7%80-%EC%95%8A%EB%8B%A4\" target=\"_self\">https://velog.io/@haero_kim/SOLID-%EC%9B%90%EC%B9%99-%EC%96%B4%EB%A0%B5%EC%A7%80-%EC%95%8A%EB%8B%A4</a>응집도는 높게 결합도는 낮게클라이언트의 목적과 용도에 적합한 인터페이스만을 제공하기 위해 인터페이스를 잘게 분리하는 것@Service\npublic class OrderService { private final OrderRepository repository; // 생성자 주입 @Autowired // (생성자가 하나면 생략 가능) public OrderService(OrderRepository repository) { this.repository = repository; }\n} final : 메모리를 고정\n생성시 한번만 호출됨(싱글톤으로써서)\n불변과 필수 의존관계\n@Service\npublic class OrderService { @Autowired private OrderRepository repository;\n} 현재까지내가느끼기에는 싱글톤을 관리하고자 생긴느낌?\n싱글톤일때의 주기를제어하기 위해생긴빈 : 구현체\n서비스 : 인터페이스빈과 서비스는 보통 1대1매칭함 이럴경우 자동으로 스프링이 타입기반으로 주입이건 필드주입임여기서의 final을쓴다 = 생성자 주입을 말함\n불변성(immutability) 보장\nfinal로 선언된 필드는 한 번만 값이 할당되고, 이후에는 변경이 불가능합니다.\n생성자 주입을 사용하면 객체가 생성될 때 반드시 의존성이 할당되어야 하므로,\n런타임 동안 의존 객체가 바뀌는 일이 없어 안정적입니다.\n필수 의존성 보장\nfinal을 사용하면, 그 필드는 반드시 생성자에서 값을 받아야 합니다.\n즉, 의존성이 누락될 가능성을 컴파일 시점에 차단할 수 있습니다.필드 주입/세터 주입은 의존성을 빼먹어도 컴파일 에러가 나지 않지만,\n생성자 주입 + final은 누락 시 컴파일 에러가 발생합니다.\n테스트 용이성\n생성자 주입은 스프링 컨테이너 없이도,\n직접 new로 객체를 만들며 원하는 의존 객체를 주입할 수 있습니다.\n반면 필드 주입은 리플렉션 등 복잡한 방법을 써야 하므로 테스트가 불편합니다.\n순환 참조/초기화 문제 예방\n생성자 주입은 객체 생성 시점에 의존성이 모두 주입되어야 하므로,\n순환 참조나 누락된 의존성을 애플리케이션 시작 시점에 바로 발견할 수 있습니다.\n필드 주입은 객체 생성 후에 주입이 이뤄지기 때문에,\n런타임에야 문제가 드러나거나, 순환 참조가 감지되지 않을 수 있습니다.\n코드 명확성, 유지보수성 향상\n생성자 파라미터로 의존성을 모두 명시하므로,\n이 클래스가 무엇에 의존하는지 한눈에 파악할 수 있습니다.\nfinal을 쓰면, \"이 의존성은 반드시 필요하다\"는 의도를 명확히 드러냅니다\n대부분의 서비스/레포지토리 구조는 이렇게 설계합니다.\n예시:\npublic interface OrderRepository { ... } @Repository public class JpaOrderRepository implements OrderRepository { ... } 이 경우, 스프링이 자동으로 1:1로 매칭해서 주입해줍니다.\n대부분의 실무 프로젝트에서 가장 많이 보는 구조입니다. 예외적으로, 테스트용/특수 상황용 구현체가 추가될 수 있습니다.\n예시:\n@Repository public class MeㅇoryOrderRepository implements OrderRepository { ... } @Repository public class JpaOrderRepository implements OrderRepository { ... }\n```\n이때는&nbsp;@Primary나&nbsp;@Qualifier로 어떤 구현체를 쓸지 명확히 지정해야 합니다. 이런 경우는 비교적 드물고, 테스트나 확장성 목적에서만 일부러 두는 경우가 많습니다.\n그러면 겹치는 부분이 있을때ㅑ인터페이스랑 서비스는 보통1대1매칭이 개편하니깐 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"3tier서버","level":3,"id":"3tier서버_0"},{"heading":"특징","level":3,"id":"특징_0"},{"heading":"주요요소","level":3,"id":"주요요소_0"},{"heading":"쓰는 기술","level":3,"id":"쓰는_기술_0"},{"heading":"solid","level":3,"id":"solid_0"},{"heading":"SRP 단일책임","level":4,"id":"SRP_단일책임_0"},{"heading":"isp 인터페이스 분리 원칙","level":4,"id":"isp_인터페이스_분리_원칙_0"},{"heading":"의존성 주입 DI","level":3,"id":"의존성_주입_DI_0"},{"heading":"생성자 주입","level":4,"id":"생성자_주입_0"},{"heading":"필드 주입","level":4,"id":"필드_주입_0"},{"heading":"스프링의 객체(빈) 관리 vs. 가비지 컬렉터(GC)","level":3,"id":"스프링의_객체(빈)_관리_vs._가비지_컬렉터(GC)_0"},{"heading":"햇갈리는것","level":3,"id":"햇갈리는것_0"},{"heading":"Q 스프링에서 필드주입을 안하고 final을 씀으로서 얻는 이득이먼데","level":4,"id":"Q_스프링에서_필드주입을_안하고_final을_씀으로서_얻는_이득이먼데_0"},{"heading":"1.&nbsp;인터페이스 1개 + 구현체 1개 (가장 흔함)","level":4,"id":"1. 인터페이스_1개_+_구현체_1개_(가장_흔함)_0"},{"heading":"2.&nbsp;인터페이스 1개 + 구현체 여러개(특수한 경우)","level":4,"id":"2. 인터페이스_1개_+_구현체_여러개(특수한_경우)_0"}],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/아키텍처-1747921913860.png","fullURL":"300-백엔드개발/스프링-프레임워크-기본(spring).html","pathToRoot":"..","attachments":["300-백엔드개발/assets/아키텍처-1747921913860.html"],"createdTime":1747920348818,"modifiedTime":1748281517086,"sourceSize":8157,"sourcePath":"300-백엔드개발/스프링 프레임워크 기본(spring).md","exportPath":"300-백엔드개발/스프링-프레임워크-기본(spring).html","showInTree":true,"treeOrder":202,"backlinks":[],"type":"markdown"},"300-백엔드개발/스프링-db-접근.html":{"title":"스프링 DB 접근","icon":"","description":"\n자바에서 데이터베이스에 접근할 수 있도록 하는 자바 API\nlow level standard임\n<img alt=\"스프링 DB 접근-1748788030972.png\" src=\"300-백엔드개발/assets/스프링-db-접근-1748788030972.png\" target=\"_self\">SQL 중심 기술임(직접작성해야한단소리임)\ntherefore DBMS에 종속속적임\n아래 기술은 내부적으로 JDBC를 사용함(JPA는 대부분..)\nJDBC Template JDBC를 쉽게 사용하기 위한 JDBC의 래퍼임 MyBatis SQL과 자바 객체간 매핑을 지원하는 프레임워크\n개발자가 sql작성하면 mybatis가 jdbc의 부분을 처리 JPA java orm의 스텐다드임\nsql안쓰고 객체중심으로 DB를 다룰 수 있게 해줌\nDataNucleus JPA JDBC 사용 ㄴㄴ\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/11881548/jpa-or-jdbc-how-are-they-different\" target=\"_self\">https://stackoverflow.com/questions/11881548/jpa-or-jdbc-how-are-they-different</a> OOP &lt;-&gt; RDB 연결\n객체지향과 관계형을 매핑한다\n패러다임의 불일치가 존재함 RDB의 model을 entity형태로 투형함\n관계를 지정하면 orm이 자동으로 sql을 생성함 dbms 종속이 적어짐 JPA의 대표 구현체 : Hibernate\n장점 종속성적어짐\n간단한거 구현 개쉬움\n객체지향적 단점 모든 쿼리 대체불가\n쿼리 괴랄하면 난이도 급상승\n잘못 구현되면 속도랑 일관성이무너짐 java 의 orm 영속 : 객체 생성후 em.persist(entity)를 호출하여 영속성 컨텍스트에 들어감\n비영속 : 객체생성후 영속성 컨텍스트와 관계 엄슴\n준영속 : 영속성 컨텍스트에 저장되었다가 분리되어 나옴\n삭제 : 객체를 삭제한 상태\npersistence context<br>\n<a class=\"internal-link\" data-href=\"db 영속성과 저장.md\" href=\"300-백엔드개발/db-영속성과-저장.html\" target=\"_self\" rel=\"noopener nofollow\">db 영속성과 저장</a>\n어플리케이션과 DB사이서 객체를 보관하는 가상 DB 엔티티 매니저를 통해 엔티티를 저장,조회시 엔티티 매니저는 연속성 컨텍스트에 저장하고 관리함\n내부에 캐시를 갖음(이를 1차 캐시라함) Map형식임\n1차에 잇으면 DB까지 조회안함 쓰기 지연을 할수 있음 미리 변경사항을 갖고잇다가 트랜잭션이 커밋되면 한번에 쿼리 날릴수잇음\nDB커넥션 수와 시간을 줄일 . 수있음 영속성 컨텍스트의 변경내용을 db에 반영하는 작업(일종의 동기화 작업)\n영속성 컨텍스트에 저장된 엔티티의 변경사항이 실제 db에 전달\n플러시가 발생해도 1차 캐시(영속성 컨텍스트)는 그대로 유지됨\n동작과정 변경감지\n수정된 엔티티 등록\nsql db 전송 언제 발생? 트랜젝션 커밋\n(Java Persistence Query Language)로 쿼리를 실행할 때 자동으로\n직접 flush() 호출 모드 auto 트랜잭션 커밋이나 쿼리 실행 시 플러시가 자동으로 동작 commit 트랜잭션 커밋 시에만 플러시가 동작 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"JDBC","level":3,"id":"JDBC_0"},{"heading":"orm","level":4,"id":"orm_0"},{"heading":"JPA","level":3,"id":"JPA_0"},{"heading":"엔티티 생명주기","level":4,"id":"엔티티_생명주기_0"},{"heading":"영속성 컨텍스트","level":4,"id":"영속성_컨텍스트_0"},{"heading":"플러시","level":4,"id":"플러시_0"}],"links":["300-백엔드개발/db-영속성과-저장.html"],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/스프링-db-접근.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/스프링-db-접근-1748788030972.html"],"createdTime":1748787475245,"modifiedTime":1751787412670,"sourceSize":3932,"sourcePath":"300-백엔드개발/스프링 DB 접근.md","exportPath":"300-백엔드개발/스프링-db-접근.html","showInTree":true,"treeOrder":203,"backlinks":[],"type":"markdown"},"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html":{"title":"스프링부트 내장 서버 역활과 특징","icon":"","description":"\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","pathToRoot":"..","attachments":[],"createdTime":1748441410050,"modifiedTime":1748443236223,"sourceSize":899,"sourcePath":"300-백엔드개발/스프링부트 내장 서버 역활과 특징.md","exportPath":"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","showInTree":true,"treeOrder":204,"backlinks":["300-백엔드개발/스프링-부트(spring-boot).html"],"type":"markdown"},"300-백엔드개발/스프링부트주요사용법.html":{"title":"스프링부트주요사용법","icon":"","description":"public interface OrderRepository extends JpaRepository&lt;Order, Long&gt;{\n// Order : Entity\n// Long : primary key type\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"DB연결","level":3,"id":"DB연결_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/스프링부트주요사용법.html","pathToRoot":"..","attachments":[],"createdTime":1750876803479,"modifiedTime":1750876858225,"sourceSize":140,"sourcePath":"300-백엔드개발/스프링부트주요사용법.md","exportPath":"300-백엔드개발/스프링부트주요사용법.html","showInTree":true,"treeOrder":205,"backlinks":[],"type":"markdown"},"300-백엔드개발/시ㄹ행과정.html":{"title":"시ㄹ행과정","icon":"","description":"docker-compose up -d\n여러 컨테이너를 각각의 이미지로 만들고,\n한 번의 명령으로 모두 실행 및 관리할 수 있다는 뜻이 맞습니다.\ndocker-compose stop\n정지\nauthidentity/src/main/java/aivle/\n├── domain/ # 도메인 계층\n│ ├── entity/ # 엔티티\n│ ├── repository/ # 리포지토리\n│ ├── command/ # 커맨드\n│ ├── event/ # 이벤트\n│ └── valueobject/ # 값 객체\n└── infra/ # 인프라 계층 ├── controller/ # 컨트롤러 ├── processor/ # 프로세서 ├── event/ # 이벤트 └── policy/ # 정\ndocker exec kafka kafka-console-consumer --bootstrap-server localhost:9092 --topic aivle --from-beginningkafka-topics.sh --delete --zookeeper zookeeper:2181 --topic aivledocker exec kafka kafka-topics --bootstrap-server localhost:9092 --delete --topic aivledocker exec kafka kafka-topics --create --bootstrap-server localhost:9092 --topic aivle --partitions 1 --replication-factor 1카프카컨테이너에 들어가기\n도커아이디확인\ndocker ps\ndocker exec -it 40cb1c7184b2 /bin/bash\nkafka라는 이름의 Docker 컨테이너 안에서, kafka-console-consumer 명령을 실행하여 localhost:9092에 있는 Kafka 클러스터의 aivle 토픽에 저장된 메시지를 처음부터 모두 읽어서 출력하라.\ncd infra\ndocker-compose up -d\n각 서비스별로 개별 실행하거나, 전체를 한번에 실행:개별 실행:# 각 서비스 디렉토리에서\ncd admintask\nmvn spring-boot:run cd ../monthlysubscriptionmanagement mvn spring-boot:run # ... 나머지 서비스들도 동일\n전체 한번에 실행:docker-compose -f build-docker-compose.yml up\ncd gateway\nmvn spring-boot:run\ncd frontend\nnpm install\nnpm run serve Gateway: 8088\n각 마이크로서비스: 8082~8091\nKafka: 9092\n프론트엔드: 8080 (기본)\n정의된 곳:\nREADME.md - 전체 실행 가이드\ninfra/docker-compose.yml - Kafka 설정\nbuild-docker-compose.yml - 전체 서비스 Docker 실행 설정\ninit.sh - 초기 설정 스크립트\n가장 간단한 방법은 build-docker-compose.yml로 전체 실행하는 거야.공통 패턴: repository().saveAndFlush(this)&nbsp;- 저장과 동시에 flush 저장된 엔티티를 변수에 할당 (id가 설정된 객체) 저장된 엔티티로 이벤트 생성 이렇게 하면 모든 엔티티에서&nbsp;id가 제대로 설정된 후에 이벤트가 생성되어&nbsp;JSON에 모든 필드가 포함됩니다.flush전에 실행해서<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@codren/JPA-save-%EC%99%80-saveAndFlush-%EC%9D%98-%EC%B0%A8%EC%9D%B4\" target=\"_self\">https://velog.io/@codren/JPA-save-%EC%99%80-saveAndFlush-%EC%9D%98-%EC%B0%A8%EC%9D%B4</a>애네 pubsub구현을 내가아는 pubsub패턴으로구현하는ㄴ지 찾아봐야겟다이 saveandflush가 디폴트가되어야하지않냐롬복지우고다시실행하면됨ㅋ왜? 실화임??말안되네그냥 X-는&nbsp;비표준 헤더를 나타내는 표준 RFC 6648에서 정의된 관례 표준 HTTP 헤더와 구분하기 위함 보통 Gateway의 config 부분에서는 이런 것들을 설정해:// JWT 설정\n@Value(\"${jwt.secret}\")\nprivate String jwtSecret; @Value(\"${jwt.expiration}\")\nprivate Long jwtExpiration; // 보안 경로 설정\n@Value(\"${security.protected-paths}\")\nprivate List&lt;String&gt; protectedPaths; // CORS 설정\n@Value(\"${cors.allowed-origins}\")\nprivate List&lt;String&gt; allowedOrigins;\n// 서비스 디스커버리 설정\n@Value(\"${eureka.client.service-url.defaultZone}\")\nprivate String eurekaUrl; // 로드밸런서 설정\n@Value(\"${ribbon.ConnectTimeout}\")\nprivate Integer connectTimeout;\n// 로그 레벨\n@Value(\"${logging.level.gateway}\")\nprivate String logLevel; // 메트릭 설정\n@Value(\"${management.endpoints.web.exposure.include}\")\nprivate String metricsEndpoints;\n// 타임아웃 설정\n@Value(\"${spring.cloud.gateway.httpclient.connect-timeout}\")\nprivate Integer connectTimeout; @Value(\"${spring.cloud.gateway.httpclient.response-timeout}\")\nprivate Integer responseTimeout;\n// 필터 순서\n@Value(\"${gateway.filter.order}\")\nprivate Integer filterOrder; // 필터 활성화 여부\n@Value(\"${gateway.filter.enabled}\")\nprivate Boolean filterEnabled;\n// 환경 구분\n@Value(\"${spring.profiles.active}\")\nprivate String activeProfile; // 환경별 서비스 URL\n@Value(\"${service.url.${spring.profiles.active}}\")\nprivate String serviceUrl;\n// SSL/TLS 설정\n@Value(\"${server.ssl.enabled}\")\nprivate Boolean sslEnabled; // 헤더 설정\n@Value(\"${gateway.headers.allowed}\")\nprivate List&lt;String&gt; allowedHeaders;\n// 캐시 설정\n@Value(\"${gateway.cache.enabled}\")\nprivate Boolean cacheEnabled; @Value(\"${gateway.cache.ttl}\")\nprivate Integer cacheTtl;\n// 레이트 리미터 설정\n@Value(\"${gateway.rate-limit.enabled}\")\nprivate Boolean rateLimitEnabled; @Value(\"${gateway.rate-limit.requests-per-second}\")\nprivate Integer requestsPerSecond;\n// 서킷브레이커 설정\n@Value(\"${resilience4j.circuitbreaker.enabled}\")\nprivate Boolean circuitBreakerEnabled; @Value(\"${resilience4j.circuitbreaker.failure-rate-threshold}\")\nprivate Integer failureRateThreshold;\n// 현재 JWT 관련\n@Value(\"${jwt.secret}\")\nprivate String jwtSecret; @Value(\"${security.protected-paths}\")\nprivate List&lt;String&gt; protectedPaths; // 추가하면 좋을 것들\n@Value(\"${gateway.timeout.connect:5000}\")\nprivate Integer connectTimeout; @Value(\"${gateway.timeout.read:10000}\")\nprivate Integer readTimeout; @Value(\"${gateway.cors.enabled:true}\")\nprivate Boolean corsEnabled; @Value(\"${gateway.logging.enabled:true}\")\nprivate Boolean loggingEnabled;\n이런 설정들을 yml 파일에서 관리하면 환경별로 다른 설정을 쉽게 적용할 수 있어!","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"1. Kafka 먼저 실행","level":2,"id":"1._Kafka_먼저_실행_0"},{"heading":"2. 백엔드 마이크로서비스들 실행","level":2,"id":"2._백엔드_마이크로서비스들_실행_0"},{"heading":"3. API Gateway 실행","level":2,"id":"3._API_Gateway_실행_0"},{"heading":"4. 프론트엔드 실행","level":2,"id":"4._프론트엔드_실행_0"},{"heading":"포트 정보:","level":2,"id":"포트_정보_0"},{"heading":"에러/알아랴할것","level":2,"id":"에러/알아랴할것_0"},{"heading":"1.&nbsp;RFC 표준","level":2,"id":"1. RFC_표준_0"},{"heading":"1. 인증/인가 관련","level":2,"id":"1._**인증/인가_관련**_0"},{"heading":"2. 라우팅 설정","level":2,"id":"2._**라우팅_설정**_0"},{"heading":"3. 로깅/모니터링","level":2,"id":"3._**로깅/모니터링**_0"},{"heading":"4. 성능/타임아웃 설정","level":2,"id":"4._**성능/타임아웃_설정**_0"},{"heading":"5. 필터 설정","level":2,"id":"5._**필터_설정**_0"},{"heading":"6. 환경별 설정","level":2,"id":"6._**환경별_설정**_0"},{"heading":"7. 보안 설정","level":2,"id":"7._**보안_설정**_0"},{"heading":"8. 캐싱 설정","level":2,"id":"8._**캐싱_설정**_0"},{"heading":"9. 레이트 리미팅","level":2,"id":"9._**레이트_리미팅**_0"},{"heading":"10. 서킷브레이커","level":2,"id":"10._**서킷브레이커**_0"},{"heading":"현재 프로젝트에 추가하면 좋을 설정들:","level":2,"id":"현재_프로젝트에_추가하면_좋을_설정들_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/시ㄹ행과정.html","pathToRoot":"..","attachments":[],"createdTime":1751232014242,"modifiedTime":1753666976425,"sourceSize":6617,"sourcePath":"300-백엔드개발/시ㄹ행과정.md","exportPath":"300-백엔드개발/시ㄹ행과정.html","showInTree":true,"treeOrder":206,"backlinks":[],"type":"markdown"},"300-백엔드개발/애자일.html":{"title":"애자일","icon":"","description":"<img alt=\"애자일-1749384475904.png\" src=\"300-백엔드개발/assets/애자일-1749384475904.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/애자일-1749384475904.png","fullURL":"300-백엔드개발/애자일.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/애자일-1749384475904.html"],"createdTime":1749384434967,"modifiedTime":1749435133240,"sourceSize":34,"sourcePath":"300-백엔드개발/애자일.md","exportPath":"300-백엔드개발/애자일.html","showInTree":true,"treeOrder":207,"backlinks":[],"type":"markdown"},"300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html":{"title":"이벤트 기반 아키텍처(EDA)의 정합성","icon":"","description":"\n도메인 데이터 변경과 이벤트 발행을 하나의 트랜잭션으로 묶어 처리합니다.\n예: 주문 생성 시 orders 테이블에 데이터를 저장하고, 동시에 outbox 테이블에 이벤트를 기록합니다148.\n장점: 데이터베이스의 ACID 특성을 활용해 도메인 상태와 이벤트 발행의 원자성을 보장합니다.\n구현 예시:\nBEGIN TRANSACTION; INSERT INTO orders (...) VALUES (...); INSERT INTO outbox (event_type, payload) VALUES ('OrderCreated', '...');\nCOMMIT; 배치 재시도: 주기적으로 outbox 테이블을 스캔하여 미발행된 이벤트를 재발행합니다18.\n이벤트 상태 추적:\npublic class OutboxEvent { private boolean published; // 발행 성공 시 true로 업데이트 private LocalDateTime createdAt;\n} 메시지 브로커의 신뢰성: Kafka, RabbitMQ와 같은 시스템은 메시지 영속화와 재전송 기능을 제공합니다67. 장기 실행 트랜잭션을 이벤트 시퀀스로 분할하고, 실패 시 보상 이벤트를 트리거합니다57.\n예: 결제 실패 → OrderCancelled 이벤트 발행 → 재고 복구 로직 실행. 모든 상태 변경을 변경 불가능한 이벤트로 저장합니다.\n시스템 상태는 이벤트 재생을 통해 복구되므로, 데이터 정합성을 자연스럽게 보장합니다5.\n이벤트 큐는 다음과 같은 방식으로 유지됩니다: Idempotent Consumer: 동일 이벤트의 중복 실행을 방지하기 위해 이벤트 ID를 기반으로 처리 여부를 검증합니다4.\nif (!eventLogRepository.existsByEventId(event.getId())) { processEvent(event); eventLogRepository.save(new EventLog(event.getId()));\n} Dead Letter Queue (DLQ): 최대 재시도 후 실패한 이벤트를 별도 큐로 이동시켜 수동 조치가 가능하게 합니다7. 이벤트 축소: 페이로드를 최소화하여 식별자 + 이벤트 유형 + 타임스탬프만 포함시킵니다26.\n{ \"eventType\": \"OrderCreated\", \"orderId\": \"ORD-123\", \"timestamp\": \"2025-06-10T17:00:00\"\n}\n이벤트 기반 아키텍처는 트랜잭셔널 아웃박스 패턴과 메시지 브로커의 영속성을 통해 정합성을 관리하며, 이벤트 큐는 디스크 저장과 재시도 메커니즘으로 지속성을 보장합니다. 다만, 복잡한 비즈니스 시나리오에서는 사가 패턴이나 이벤트 소싱과의 조합이 필수적입니다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"<strong>정합성 관리 방식</strong>","level":2,"id":"**정합성_관리_방식**_0"},{"heading":"1. 트랜잭셔널 아웃박스 패턴 (Transactional Outbox Pattern)","level":3,"id":"1._트랜잭셔널_아웃박스_패턴_(Transactional_Outbox_Pattern)_0"},{"heading":"2. 이벤트 발행 보장 메커니즘","level":3,"id":"2._이벤트_발행_보장_메커니즘_0"},{"heading":"3. 사가 패턴 (Saga Pattern)","level":3,"id":"3._사가_패턴_(Saga_Pattern)_0"},{"heading":"4. 이벤트 소싱 (Event Sourcing)","level":3,"id":"4._이벤트_소싱_(Event_Sourcing)_0"},{"heading":"<strong>이벤트 큐의 지속성</strong>","level":2,"id":"**이벤트_큐의_지속성**_0"},{"heading":"<strong>주요 도전 과제와 해결 방안</strong>","level":2,"id":"**주요_도전_과제와_해결_방안**_0"},{"heading":"1. 중복 처리 방지","level":3,"id":"1._**중복_처리_방지**_0"},{"heading":"2. 장애 복구","level":3,"id":"2._**장애_복구**_0"},{"heading":"3. 성능 최적화","level":3,"id":"3._**성능_최적화**_0"},{"heading":"<strong>결론</strong>","level":2,"id":"**결론**_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html","pathToRoot":"..","attachments":[],"createdTime":1749648824210,"modifiedTime":1757783972373,"sourceSize":3438,"sourcePath":"300-백엔드개발/이벤트 기반 아키텍처(EDA)의 정합성.md","exportPath":"300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html","showInTree":true,"treeOrder":208,"backlinks":[],"type":"markdown"},"300-백엔드개발/자바에서의-컨테이너.html":{"title":"자바에서의 컨테이너","icon":"","description":"생명주기를 관리해주는 환경 or시스템을 컨테이너라고함\n서블릿 컨테이너(ex. Tomcat):\n서블릿 객체를 생성하고, HTTP 요청이 들어오면 해당 서블릿을 찾아 실행하고, 필요 없을 때 소멸시키는 등 생명주기를 관리합니다 스프링 컨테이너:\n스프링 빈(Bean) 객체들을 생성하고, 의존성을 주입하며, 필요에 따라 소멸시키는 등 객체의 생명주기를 관리합니다\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/자바에서의-컨테이너.html","pathToRoot":"..","attachments":[],"createdTime":1748334709216,"modifiedTime":1748334731569,"sourceSize":492,"sourcePath":"300-백엔드개발/자바에서의 컨테이너.md","exportPath":"300-백엔드개발/자바에서의-컨테이너.html","showInTree":true,"treeOrder":209,"backlinks":[],"type":"markdown"},"300-백엔드개발/컨테이너-런타임.html":{"title":"컨테이너 런타임","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.samsungsds.com/kr/insights/docker.html\" target=\"_self\">https://www.samsungsds.com/kr/insights/docker.html</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/컨테이너-런타임.html","pathToRoot":"..","attachments":[],"createdTime":1751782550213,"modifiedTime":1751782561939,"sourceSize":51,"sourcePath":"300-백엔드개발/컨테이너 런타임.md","exportPath":"300-백엔드개발/컨테이너-런타임.html","showInTree":true,"treeOrder":210,"backlinks":["400-인프라-&-아키텍처/k8s.html"],"type":"markdown"},"300-백엔드개발/aggregate.html":{"title":"Aggregate","icon":"","description":"&nbsp;도메인 주도 설계(DDD)에서 관련된 객체들을 하나의 단위로 묶어 관리하는 개념<img alt=\"Aggregate-1749754173915.png\" src=\"300-백엔드개발/assets/aggregate-1749754173915.png\" target=\"_self\">1.유즈케이스 단위에 관여된 모든 테이블을 Aggregate 로 묶는 경우\n포인트 적립 시스템의 로직에 오류가 있을 경우 주문 자체가이루어지지 못함 고객입장에서 생각해보라, 배가 고픈데, 포인트 적립에 문제가생겨 주문이 롤백된다. 얼마나 슬픈 일인가!2.모든 테이블을 하나의 Aggregate로 정의한 경우\n전체 주문금액과 주문 내역이 일치하지 않음주문 내역 일부가 누락 혹은 중복 입력가능 (1 Submit = 1 Aggregate Operation)빵과 우유를 먹고 싶었는데, 우유가 누락됐다면 목이메인다. 얼마나 슬픈 일인가!3.불변식 (주문총량과 주문내역 합산은 같아야 한다) 의 범위만을 Aggregate로 잡은 경우ACID TX가 필요한 최소한의 Entity (테이블) 묶음 – Point 는천천히 처리 되어도 괜찮다. (Eventual Consistency)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/aggregate-1749754173915.png","fullURL":"300-백엔드개발/aggregate.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/aggregate-1749754173915.html"],"createdTime":1749753934049,"modifiedTime":1749754233733,"sourceSize":1061,"sourcePath":"300-백엔드개발/Aggregate.md","exportPath":"300-백엔드개발/aggregate.html","showInTree":true,"treeOrder":211,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"markdown"},"300-백엔드개발/apache-vs-nginx-vs-tomcat.html":{"title":"Apache VS Nginx VS Tomcat","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@gnoesnooj/Apache-VS-Nginx-VS-Tomcat#nginx%EC%9D%98-%EB%8B%A8%EC%A0%90-\" target=\"_self\">https://velog.io/@gnoesnooj/Apache-VS-Nginx-VS-Tomcat#nginx%EC%9D%98-%EB%8B%A8%EC%A0%90-</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/apache-vs-nginx-vs-tomcat.html","pathToRoot":"..","attachments":[],"createdTime":1757787797882,"modifiedTime":1757787799556,"sourceSize":88,"sourcePath":"300-백엔드개발/Apache VS Nginx VS Tomcat.md","exportPath":"300-백엔드개발/apache-vs-nginx-vs-tomcat.html","showInTree":true,"treeOrder":212,"backlinks":[],"type":"markdown"},"300-백엔드개발/db-영속성과-저장.html":{"title":"db 영속성과 저장","icon":"","description":"Client &lt;-&gt; Controller &lt;-&gt; Service &lt;-&gt; Mapper &lt;-&gt; DB<img alt=\"db 영속성과 저장-1751787526152.png\" src=\"300-백엔드개발/assets/db-영속성과-저장-1751787526152.png\" target=\"_self\">// 저장하고 flush하여 id 즉시 생성\nAuthorAccount savedAccount = repository().saveAndFlush(this); // 저장된 엔티티로 이벤트 publish (id가 설정된 객체)\nAuthorSignup authorSignup = new AuthorSignup(savedAccount);\nauthorSignup.publishAfterCommit();\nmy errorrepo().save(this)\n해서 db에저장하고 id를 포함한 객체를 이벤트로 발행하는 로직이엇다but;;\n저 saveAccount객체가 잘 넘어가지 않았다.<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@codren/JPA-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%9B%90%EB%A6%AC\" target=\"_self\">https://velog.io/@codren/JPA-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%9B%90%EB%A6%AC</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://bnzn2426.tistory.com/145\" target=\"_self\">https://bnzn2426.tistory.com/145</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"엔티티 상태","level":2,"id":"엔티티_상태_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/db-영속성과-저장.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/db-영속성과-저장-1751787526152.html"],"createdTime":1751416624606,"modifiedTime":1751787573570,"sourceSize":700,"sourcePath":"300-백엔드개발/db 영속성과 저장.md","exportPath":"300-백엔드개발/db-영속성과-저장.html","showInTree":true,"treeOrder":213,"backlinks":["300-백엔드개발/스프링-db-접근.html"],"type":"markdown"},"300-백엔드개발/docker.html":{"title":"docker","icon":"","description":"<img alt=\"docker-1751777737123.png\" height=\"308\" src=\"300-백엔드개발/assets/docker-1751777737123.png\" target=\"_self\" style=\"width: 269px; max-width: 100%;\">\n이미지 : 어플리케이션과 어플리케이션에 의존적인 실행환경, 라이브러리등을 컴파일된 실행 파일로 묶은 형태 immutable함 dockerfile : 이미지 저장형식\ncontainer : 격리된 공간에서 이미지를 실행\n도커는 클라이언트/서버 애플리케이션으로 클라이언트인 Docker CLI와 서버인 Docker daemon으로 구성","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"컨테이너와 이미지","level":2,"id":"컨테이너와_이미지_0"}],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/docker-1751777737123.png","fullURL":"300-백엔드개발/docker.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/docker-1751777737123.html"],"createdTime":1751777427723,"modifiedTime":1751782635326,"sourceSize":459,"sourcePath":"300-백엔드개발/docker.md","exportPath":"300-백엔드개발/docker.html","showInTree":true,"treeOrder":214,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html"],"type":"markdown"},"300-백엔드개발/explain.html":{"title":"explain","icon":"","description":"authidentity 서비스에 JWT(JSON Web Token) 기반 인증/인가 시스템을 구현했습니다. 이 시스템은 마이크로서비스 아키텍처에서 안전한 사용자 인증과 역할 기반 접근 제어를 제공합니다.&lt;!-- Spring Security --&gt;\n&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n&lt;/dependency&gt; &lt;!-- JWT 라이브러리 --&gt;\n&lt;dependency&gt; &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt; &lt;artifactId&gt;jjwt-api&lt;/artifactId&gt; &lt;version&gt;0.11.5&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt; &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt; &lt;artifactId&gt;jjwt-impl&lt;/artifactId&gt; &lt;version&gt;0.11.5&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt; &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt; &lt;artifactId&gt;jjwt-jackson&lt;/artifactId&gt; &lt;version&gt;0.11.5&lt;/version&gt; &lt;scope&gt;runtime&lt;/scope&gt;\n&lt;/dependency&gt; &lt;!-- Spring Web --&gt;\n&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n설명: JWT 토큰 생성/검증과 Spring Security를 위한 필수 라이브러리들을 추가했습니다.@Configuration\n@EnableWebSecurity\n@EnableGlobalMethodSecurity(prePostEnabled = true)\npublic class SecurityConfig extends WebSecurityConfigurerAdapter { @Override protected void configure(HttpSecurity httpSecurity) throws Exception { httpSecurity.csrf().disable() .authorizeRequests() .antMatchers(\"/auth/**\", \"/h2-console/**\").permitAll() .anyRequest().authenticated() .and() .exceptionHandling().authenticationEntryPoint(jwtAuthenticationEntryPoint) .and() .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS); httpSecurity.addFilterBefore(jwtRequestFilter, UsernamePasswordAuthenticationFilter.class); }\n}\n설명: /auth/** 경로는 인증 없이 접근 가능 (로그인, 회원가입용)\n나머지 모든 요청은 인증 필요\n세션 기반이 아닌 JWT 토큰 기반 인증 사용\nJWT 필터를 Spring Security 필터 체인에 추가\n@Component\npublic class JwtTokenUtil { @Value(\"${jwt.secret:defaultSecretKey}\") private String secret; @Value(\"${jwt.expiration:86400}\") private Long expiration; public String generateToken(String username, String role) { Map&lt;String, Object&gt; claims = new HashMap&lt;&gt;(); claims.put(\"role\", role); return createToken(claims, username); } public Boolean validateToken(String token, UserDetails userDetails) { final String username = extractUsername(token); return (username.equals(userDetails.getUsername()) &amp;&amp; !isTokenExpired(token)); }\n}\n설명:\nJWT 토큰 생성, 검증, 파싱 기능 제공\n토큰에 사용자 역할 정보 포함\n설정 파일에서 secret key와 만료 시간 관리\n@Component\npublic class JwtAuthenticationFilter extends OncePerRequestFilter { @Override protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) { final String requestTokenHeader = request.getHeader(\"Authorization\"); if (requestTokenHeader != null &amp;&amp; requestTokenHeader.startsWith(\"Bearer \")) { jwtToken = requestTokenHeader.substring(7); username = jwtTokenUtil.extractUsername(jwtToken); if (username != null &amp;&amp; SecurityContextHolder.getContext().getAuthentication() == null) { UserDetails userDetails = userDetailsService.loadUserByUsername(username); if (jwtTokenUtil.validateToken(jwtToken, userDetails)) { UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken( userDetails, null, userDetails.getAuthorities()); SecurityContextHolder.getContext().setAuthentication(authentication); } } } chain.doFilter(request, response); }\n}\n설명:\n모든 HTTP 요청을 가로채서 JWT 토큰 검증\nAuthorization: Bearer &lt;token&gt; 헤더에서 토큰 추출\n토큰이 유효하면 Spring Security 컨텍스트에 인증 정보 설정\n@Service\npublic class JwtUserDetailsService implements UserDetailsService { @Override public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException { // UserAccount에서 먼저 찾기 Optional&lt;UserAccount&gt; userAccount = userAccountRepository.findByEmail(email); if (userAccount.isPresent()) { return new User(userAccount.get().getEmail(), userAccount.get().getPassword(), Arrays.asList(new SimpleGrantedAuthority(\"ROLE_\" + userAccount.get().getRoles().name()))); } // AuthorAccount, AdminAccount도 동일하게 처리 }\n}\n설명:\nSpring Security가 사용자 정보를 로드할 때 사용\nUserAccount, AuthorAccount, AdminAccount 테이블에서 사용자 검색\n각 사용자의 역할을 Spring Security 권한으로 변환\n모든 Account Repository에 findByEmail 메서드 추가:public interface UserAccountRepository extends PagingAndSortingRepository&lt;UserAccount, Long&gt; { Optional&lt;UserAccount&gt; findByEmail(String email);\n}\n설명: JWT 인증에서 이메일로 사용자를 찾기 위해 필요한 메서드입니다.@RestController\n@RequestMapping(\"/auth\")\npublic class AuthController { @PostMapping(\"/login\") public ResponseEntity&lt;?&gt; createAuthenticationToken(@RequestBody LoginRequest loginRequest) { authenticate(loginRequest.getEmail(), loginRequest.getPassword()); final UserDetails userDetails = userDetailsService.loadUserByUsername(loginRequest.getEmail()); final String token = jwtTokenUtil.generateToken(userDetails); Map&lt;String, Object&gt; response = new HashMap&lt;&gt;(); response.put(\"token\", token); response.put(\"email\", loginRequest.getEmail()); response.put(\"role\", userDetails.getAuthorities().iterator().next().getAuthority()); return ResponseEntity.ok(response); } @PostMapping(\"/signup\") public ResponseEntity&lt;?&gt; signup(@RequestBody SignupRequest signupRequest) { // 이메일 중복 체크 // 비밀번호 암호화 // 사용자 계정 생성 // JWT 토큰 생성 및 반환 } @PostMapping(\"/validate\") public ResponseEntity&lt;?&gt; validateToken(@RequestHeader(\"Authorization\") String token) { // 토큰 유효성 검증 }\n}\n설명:\n/auth/login: 사용자 로그인 및 JWT 토큰 발급\n/auth/signup: 새 사용자 등록 및 자동 로그인\n/auth/validate: 토큰 유효성 검증\npublic void signup(SignupCommand signupCommand) { this.setEmail(signupCommand.getEmail()); // 비밀번호 암호화 org.springframework.security.crypto.password.PasswordEncoder passwordEncoder = AuthidentityApplication.applicationContext.getBean(org.springframework.security.crypto.password.PasswordEncoder.class); this.setPassword(passwordEncoder.encode(signupCommand.getPassword())); this.setCreatedAt(new Date()); this.setUpdatedAt(new Date()); repository().save(this); SignedUp signedUp = new SignedUp(this); signedUp.publishAfterCommit();\n}\n설명: 회원가입 시 BCrypt로 비밀번호를 암호화하여 저장합니다.기존 컨트롤러들에 @PreAuthorize 어노테이션 추가:@RequestMapping(value = \"/userAccounts/{id}/signup\", method = RequestMethod.PUT)\n@PreAuthorize(\"hasRole('USER') or hasRole('ADMIN')\")\npublic UserAccount signup(...) { ... } @RequestMapping(value = \"/adminAccounts/{id}/signup\", method = RequestMethod.PUT)\n@PreAuthorize(\"hasRole('ADMIN')\")\npublic AdminAccount signup(...) { ... } @RequestMapping(value = \"/authorAccounts/requestauthorregistration\", method = RequestMethod.POST)\n@PreAuthorize(\"hasRole('USER') or hasRole('AUTHOR')\")\npublic AuthorAccount requestAuthorRegistration(...) { // 작가회원가입 + 등록요청 이벤트 publish // - 이메일 중복 체크 // - 비밀번호 암호화 // - 작가 계정 생성 (AUTHOR 역할) // - AuthorRegistrationRequested 이벤트 publish\n}\n설명: 각 API 엔드포인트에 적절한 역할 권한을 설정했습니다.jwt: secret: aivleSecretKeyForJWTTokenGeneration2024 expiration: 86400\n설명: JWT 토큰의 시크릿 키와 만료 시간을 설정합니다.\n클라이언트가 /auth/login에 이메일/비밀번호 전송\nSpring Security가 사용자 인증\n인증 성공 시 JWT 토큰 생성\n토큰과 사용자 정보를 클라이언트에 반환 클라이언트가 Authorization: Bearer &lt;token&gt; 헤더와 함께 API 요청\nJwtAuthenticationFilter가 토큰 추출 및 검증\n토큰이 유효하면 Spring Security 컨텍스트에 인증 정보 설정\n@PreAuthorize 어노테이션으로 역할 기반 권한 검증\n권한이 있으면 API 실행, 없으면 403 Forbidden 반환 클라이언트가 /auth/signup에 이메일/비밀번호 전송\n이메일 중복 체크\n비밀번호 BCrypt 암호화\n사용자 계정 생성 및 저장\n자동 로그인하여 JWT 토큰 발급 Stateless: 서버에 세션 저장 없이 JWT 토큰만으로 인증\n암호화: BCrypt로 비밀번호 안전하게 저장\n역할 기반: USER, AUTHOR, ADMIN 역할별 접근 제어\n토큰 만료: 설정 가능한 토큰 만료 시간\n시크릿 키: 환경별로 다른 JWT 시크릿 키 사용 가능\ncurl -X POST http://localhost:8080/auth/login \\ -H \"Content-Type: application/json\" \\ -d '{ \"email\": \"user@example.com\", \"password\": \"password123\" }'\n응답:{ \"token\": \"eyJhbGciOiJIUzUxMiJ9...\", \"email\": \"user@example.com\", \"role\": \"ROLE_USER\"\n}\ncurl -X GET http://localhost:8080/userAccounts/1 \\ -H \"Authorization: Bearer eyJhbGciOiJIUzUxMiJ9...\"\ncurl -X POST http://localhost:8080/auth/validate \\ -H \"Authorization: Bearer eyJhbGciOiJIUzUxMiJ9...\" 토큰 갱신: Refresh Token 구현 가능\n다중 인증: OAuth2, 소셜 로그인 추가 가능\n토큰 블랙리스트: 로그아웃 시 토큰 무효화\n감사 로그: 인증 시도 로깅\nRate Limiting: 로그인 시도 제한\n이 구현으로 마이크로서비스 환경에서 안전하고 확장 가능한 인증 시스템을 구축했습니다. ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"JWT 인증 시스템 구현 상세 설명","level":1,"id":"JWT_인증_시스템_구현_상세_설명_0"},{"heading":"개요","level":2,"id":"개요_0"},{"heading":"구현된 컴포넌트들","level":2,"id":"구현된_컴포넌트들_0"},{"heading":"1. 의존성 추가 (pom.xml)","level":3,"id":"1._의존성_추가_(pom.xml)_0"},{"heading":"2. Spring Security 설정 (SecurityConfig.java)","level":3,"id":"2._Spring_Security_설정_(SecurityConfig.java)_0"},{"heading":"3. JWT 토큰 유틸리티 (JwtTokenUtil.java)","level":3,"id":"3._JWT_토큰_유틸리티_(JwtTokenUtil.java)_0"},{"heading":"4. JWT 인증 필터 (JwtAuthenticationFilter.java)","level":3,"id":"4._JWT_인증_필터_(JwtAuthenticationFilter.java)_0"},{"heading":"5. 사용자 상세 서비스 (JwtUserDetailsService.java)","level":3,"id":"5._사용자_상세_서비스_(JwtUserDetailsService.java)_0"},{"heading":"6. Repository 확장","level":3,"id":"6._Repository_확장_0"},{"heading":"7. 인증 컨트롤러 (AuthController.java)","level":3,"id":"7._인증_컨트롤러_(AuthController.java)_0"},{"heading":"8. 비밀번호 암호화 (UserAccount.java)","level":3,"id":"8._비밀번호_암호화_(UserAccount.java)_0"},{"heading":"9. 역할 기반 접근 제어","level":3,"id":"9._역할_기반_접근_제어_0"},{"heading":"10. JWT 설정 (application.yml)","level":3,"id":"10._JWT_설정_(application.yml)_0"},{"heading":"인증 플로우","level":2,"id":"인증_플로우_0"},{"heading":"1. 로그인 플로우","level":3,"id":"1._로그인_플로우_0"},{"heading":"2. API 요청 플로우","level":3,"id":"2._API_요청_플로우_0"},{"heading":"3. 회원가입 플로우","level":3,"id":"3._회원가입_플로우_0"},{"heading":"보안 특징","level":2,"id":"보안_특징_0"},{"heading":"사용 예시","level":2,"id":"사용_예시_0"},{"heading":"로그인","level":3,"id":"로그인_0"},{"heading":"보호된 API 접근","level":3,"id":"보호된_API_접근_0"},{"heading":"토큰 검증","level":3,"id":"토큰_검증_0"},{"heading":"확장 가능성","level":2,"id":"확장_가능성_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/explain.html","pathToRoot":"..","attachments":[],"createdTime":1751349799311,"modifiedTime":1751349799312,"sourceSize":11574,"sourcePath":"300-백엔드개발/explain.md","exportPath":"300-백엔드개발/explain.html","showInTree":true,"treeOrder":215,"backlinks":[],"type":"markdown"},"300-백엔드개발/filter,-servlet.html":{"title":"filter, servlet","icon":"","description":"필터,서블릿은 &nbsp;자바 표준 인터페이스임\n요청이 들어오면:\n서버(WAS)가 요청을 받음\n필터 체인(Filter Chain)이 호출되고, 각 필터의 로직이 순서대로 처리됨\n마지막 필터가 서블릿(Servlet)에게 요청을 전달\n서블릿이 요청을 받아 스프링 DispatcherServlet 등으로 연결해 컨트롤러를 실행\n처리 완료 후 응답이 서블릿, 필터를 다시 거쳐 클라이언트로 전달\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"필터와 서블릿의 관계와 처리 순서","level":2,"id":"필터와_서블릿의_관계와_처리_순서_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/filter,-servlet.html","pathToRoot":"..","attachments":[],"createdTime":1757787043835,"modifiedTime":1757787990956,"sourceSize":520,"sourcePath":"300-백엔드개발/filter, servlet.md","exportPath":"300-백엔드개발/filter,-servlet.html","showInTree":true,"treeOrder":216,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"markdown"},"300-백엔드개발/spring-mvc.html":{"title":"Spring MVC","icon":"","description":"<img alt=\"Spring MVC-1748447479487.png\" src=\"300-백엔드개발/assets/spring-mvc-1748447479487.png\" target=\"_self\">\nModel 데이터를 처리하는 영역\nDB와 연동하여 사용자가 입력한 데이터나 사용자에게 출력할 데이터를 다룸 View 어플리케이션이 처리한 데이터나 그 작업 결과를 사용자에게 출력할 화면(UI)으로 만듬\n종속성이없도록 구현 Controller 사용자 입력을 받아 데이터를 변경하거나 이를 뷰에 전달하는 역할\n@Controller\n내가 프론트에서 api받을때 그형식이 여기서 정해지는 듯 DispatcherServlet : 애플리케이션의 가장 앞단에 배치되어 다른 구성요소들과 상호 작용하며 클라이언트의 요청을 처리하는 패턴을 Front Controller Pattern(프론트 컨트롤러 패턴)<br><img alt=\"Spring MVC-1748452533042.png\" src=\"300-백엔드개발/assets/spring-mvc-1748452533042.png\" target=\"_self\">\n클라이언트의 요청을 DispatcherServlet이 받는다.\n요청 정보를 통해 이를 위임할 Controller를 HandlerMapping을 통해 검색한다.\nHandlerMapping은 Controller 정보를 DispatcherServlet에게 리턴한다.\nDispatcherServlet은 HandlerAdapter에게 Controller의 Handler 메서드 호출을 위임한다.\nHandlerAdapter가 해당 Controller의 Handler 메서드를 호출한다.\ncontroller는 리턴 받은 Model 데이터를 HandlerAdapter에게 전달한다.\nHandlerAdapter는 전달 받은 Model 데이터와 View 정보를 다시 DispatcherServlet에게 전달한다.\nDispatcherServlet은 전달 받은 View 정보를 ViewResolver에게 전달해 View 검색을 요청한다.\nViewResolver는 해당하는 View를 찾아 View를 다시 리턴해준다.\nDispatcherServlet은 전달 받은 View 객체를 통해 Model 데이터를 넘겨주면서 클라이언트에게 전달할 응답 데이터 생성을 요청한다.\nView는 응답 데이터를 생성해 다시 DispatcherServlet에게 전달한다.\nDispatcherServlet은 View로부터 전달 받은 응답 데이터를 최종적으로 클라이언트에게 전달한다.\n→ 즉, DispatcherServlet은 애플리케이션의 가장 앞에 배치되어 다른 구성 요소와 상호 작용하며 클라이언트의 요청을 처리한다.\n(실제 요청에 대한 처리는 다른 구성 요소들에게 위임하고 있다.)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/spring-mvc.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/spring-mvc-1748447479487.html","300-백엔드개발/assets/spring-mvc-1748452533042.html"],"createdTime":1748447444803,"modifiedTime":1748453190109,"sourceSize":2248,"sourcePath":"300-백엔드개발/Spring MVC.md","exportPath":"300-백엔드개발/spring-mvc.html","showInTree":true,"treeOrder":217,"backlinks":[],"type":"markdown"},"300-백엔드개발/tomcat-vs-netty.html":{"title":"tomcat vs netty","icon":"","description":"\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"300-백엔드개발/tomcat-vs-netty.html","pathToRoot":"..","attachments":[],"createdTime":1757788190532,"modifiedTime":1757788209472,"sourceSize":702,"sourcePath":"300-백엔드개발/tomcat vs netty.md","exportPath":"300-백엔드개발/tomcat-vs-netty.html","showInTree":true,"treeOrder":218,"backlinks":[],"type":"markdown"},"300-백엔드개발/webflux-vs-mvc-관련-의문점.html":{"title":"webflux vs mvc 관련 의문점","icon":"","description":"\n이미 많이 있지만 webflux와 spring mvc를 나의 언어로 정리하고 궁금한 것을 찾아보고자 한다\n<a data-href=\"동기 vs 비동기, 블로킹 vs 논블로킹\" href=\"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">동기 vs 비동기, 블로킹 vs 논블로킹</a>\nMVC Thread-per-Request : 1요청에 1스레드\nTomcat\nBlocking WebFlux Event Loop\nNetty\nNonBlocking 틀렷으면 이야기 부탁드립니다...CompletableFuture같은 것들 말이지\n다 블로킹되면 왜 비동기 쓰지?SpringMVC도 모두 blocking은 아니다! 서버 레벨 I/O만 블러킹된다는것이다.<br>\n예를 들어 <a data-href=\"filter, servlet\" href=\"300-백엔드개발/filter,-servlet.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">filter, servlet</a>, client요청을 읽는 과정에서 블로킹이 발생한다<br>\n<a data-tooltip-position=\"top\" aria-label=\"https://velog.io/@duskafka/%EA%B8%B0%EC%A1%B4-%EC%84%9C%EB%B8%94%EB%A6%BF-%EA%B8%B0%EB%B0%98-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%98-%ED%95%9C%EA%B3%84-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%99%80-%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9-%EA%B4%80%EC%A0%90%EC%97%90%EC%84%9C-%EB%B3%B8-%ED%95%9C%EA%B3%84%EC%A0%90\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@duskafka/%EA%B8%B0%EC%A1%B4-%EC%84%9C%EB%B8%94%EB%A6%BF-%EA%B8%B0%EB%B0%98-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%98-%ED%95%9C%EA%B3%84-%EB%B9%84%EB%8F%99%EA%B8%B0%EC%99%80-%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9-%EA%B4%80%EC%A0%90%EC%97%90%EC%84%9C-%EB%B3%B8-%ED%95%9C%EA%B3%84%EC%A0%90\" target=\"_self\">기존 서블릿 기반 애플리케이션의 한계</a>\nBut!! WebFlux는 첨부터 끝까지 Non-blocking방식으로 할 수 있음!즉 java코드레벨 비지니스로직은 Java표준에서 제공하는 방식으로 비동기,non-blocking처리될 수 있다.\nCompletableFuture은 Java표준에서 제공하는 방식중 하나로 jvm에서 멀티 스레드 방식으로 구현된다웹v8엔진에서 이벤트루프 방식으로 작동하는 방식이랑 비슷한가한 스레드에서 여러 I/O를 처리가능함 How? with EventLoop.<br>\n출처 : <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://oneny.tistory.com/125\" target=\"_self\">https://oneny.tistory.com/125</a><br>\n<img alt=\"webflux vs mvc-1757788425212.png\" src=\"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png\" target=\"_self\">\n그렇다 비슷하다 이벤트 루프가 이벤트가 있는지 확인하고 꺼네서 이벤트를 수행하는 방식이다.<br>\n<img alt=\"webflux vs mvc-1757788537542.png\" src=\"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png\" target=\"_self\">Reactor는 일종의 패턴이다 이벤트루프는 이러한 패턴을 구현하기 위한 방식이다.옵저버 패턴도 많이 쓰인다고 들었는데 두개 언제 쓰이지?\n내 생각에는 하드웨어를받아서 처리하는 I/O에서는 이벤트루프 , 소프트웨어단으로 넘어가선 옵저버쓸꺼같은데이벤트루프는 하드웨어,Lowlevel과 연관된 I/O작업에 쓰이고 이게 소프트웨어 단으로 넘어가서 객체간에 무언가 이벤트를 트래킹하기위해서는 옵저버 패턴을 씀\n리액티브시스템에도 두개 섞어서 많이쓴다캄","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"기본 개념","level":2,"id":"기본_개념_0"},{"heading":"요청 들어올때 처리 과정","level":3,"id":"요청_들어올때_처리_과정_0"},{"heading":"궁금한점","level":2,"id":"궁금한점_0"},{"heading":"1. Spring MVC도 비동기 인터페이스 있는데 이거 다 블러킹됨?","level":3,"id":"1._Spring_MVC도_비동기_인터페이스_있는데_이거_다_블러킹됨?_0"},{"heading":"Answer","level":4,"id":"Answer_0"},{"heading":"2. Event Loop방식이 머임? 기존이랑 머가다름?","level":3,"id":"2._Event_Loop방식이_머임?_기존이랑_머가다름?_0"},{"heading":"Answer","level":4,"id":"Answer_1"},{"heading":"3. 리액터와 이벤트 루프는 비슷한말인가","level":3,"id":"3._리액터와_이벤트_루프는_비슷한말인가_0"},{"heading":"Answer","level":4,"id":"Answer_2"},{"heading":"4. 옵저버패턴과 이벤트루프는 언제쓰이는가","level":3,"id":"4._옵저버패턴과_이벤트루프는_언제쓰이는가_0"},{"heading":"Answer","level":4,"id":"Answer_3"}],"links":["700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","300-백엔드개발/filter,-servlet.html"],"author":"","coverImageURL":".","fullURL":"300-백엔드개발/webflux-vs-mvc-관련-의문점.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html"],"createdTime":1753802741065,"modifiedTime":1757789559020,"sourceSize":3011,"sourcePath":"300-백엔드개발/webflux vs mvc 관련 의문점.md","exportPath":"300-백엔드개발/webflux-vs-mvc-관련-의문점.html","showInTree":true,"treeOrder":219,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/assets/cloud-1747744250912.html":{"title":"Cloud-1747744250912","icon":"","description":"<img src=\"400-인프라-&amp;-아키텍처/assets/cloud-1747744250912.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"400-인프라-&-아키텍처/assets/cloud-1747744250912.html","pathToRoot":"../..","attachments":["400-인프라-&-아키텍처/assets/cloud-1747744250912.html"],"createdTime":1747744250922,"modifiedTime":1747744250923,"sourceSize":40656,"sourcePath":"400-인프라 & 아키텍처/assets/Cloud-1747744250912.png","exportPath":"400-인프라-&-아키텍처/assets/cloud-1747744250912.html","showInTree":true,"treeOrder":222,"backlinks":["400-인프라-&-아키텍처/cloud.html"],"type":"attachment"},"400-인프라-&-아키텍처/도오커.html":{"title":"도오커","icon":"","description":"\nchmod 600 /Users/jeonminji/Downloads/a071189-key.pem 권한많으면 에러날 수 잇음 ssh -i /Users/jeonminji/Downloads/a071189-key.pem 사용자명@서버주소\nHost myserver HostName 서버주소 User 사용자명 IdentityFile /Users/jeonminji/Downloads/a071189-key.pem\nssh myserver ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"hello custom container image","level":1,"id":"hello_custom_container_image_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"400-인프라-&-아키텍처/도오커.html","pathToRoot":"..","attachments":[],"createdTime":1747292452979,"modifiedTime":1751351210164,"sourceSize":9317,"sourcePath":"400-인프라 & 아키텍처/도오커.md","exportPath":"400-인프라-&-아키텍처/도오커.html","showInTree":true,"treeOrder":223,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/biz,dev,ops.html":{"title":"biz,dev,ops","icon":"","description":"<img alt=\"biz,dev,ops-1749383255427.png\" src=\"300-백엔드개발/assets/biz,dev,ops-1749383255427.png\" target=\"_self\">\ndev랑 ops가 한번에 되어야한다비즈 : 분석설계\ndev : 개발\nops : 운영모노리스 &lt;-&gt; msamsa : 쪼개어진 서비스 단위로 구현\n애자일의 요구사항 가ㅏ지고 msa를 구현분석설꼐 단계에 관여된 기법\n도메인 주도설계와 이벤트 스토밍\n도메인 : 사업의 업무 분야 영역\n이벤트 스토밍 : DDD를 실질적으로 적용할 수 있는 실천법<br><img alt=\"biz,dev,ops-1749384334755.png\" src=\"300-백엔드개발/assets/biz,dev,ops-1749384334755.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"300-백엔드개발/assets/biz,dev,ops-1749383255427.png","fullURL":"400-인프라-&-아키텍처/biz,dev,ops.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/biz,dev,ops-1749383255427.html","300-백엔드개발/assets/biz,dev,ops-1749384334755.html"],"createdTime":1749383228341,"modifiedTime":1749384413213,"sourceSize":488,"sourcePath":"400-인프라 & 아키텍처/biz,dev,ops.md","exportPath":"400-인프라-&-아키텍처/biz,dev,ops.html","showInTree":true,"treeOrder":224,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/cloud.html":{"title":"Cloud","icon":"","description":"csp(cloud service provider ) : aws, ms azure\n클라우드제공 밴드사인스턴스 읽는 법\n<img alt=\"Cloud-1747744250912.png\" src=\"400-인프라-&amp;-아키텍처/assets/cloud-1747744250912.png\" target=\"_self\">ec2 구매옵션\n공유내보내기다시 쓰기관련","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"400-인프라-&-아키텍처/cloud.html","pathToRoot":"..","attachments":["400-인프라-&-아키텍처/assets/cloud-1747744250912.html"],"createdTime":1747742678019,"modifiedTime":1749384831080,"sourceSize":880,"sourcePath":"400-인프라 & 아키텍처/Cloud.md","exportPath":"400-인프라-&-아키텍처/cloud.html","showInTree":true,"treeOrder":225,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html":{"title":"Error - 장시간 요청 Cloudfront timeout","icon":"","description":"<img alt=\"nginx-1757772245845.png\" src=\"error/assets/nginx-1757772245845.png\" target=\"_self\">\n서비스 구조가 이렇게 되어있다. client : pending으로 요청이 가다가 504 에러 server &gt; nginx : 499에러 499 에러는 client가 요청을 닫앗다 즉 취소했다는 에러코드입니다 504 에러는 gateway timeout에러를 의미합니다 사용중인 client와 spring에서의 timeout시간을 최대로 늘려놓았음에도 불구하고 같은 에러가 중복되었다.따라서 중간에 프록시되는 cloudfront를 의심하게 되었다.<br>\n<a data-tooltip-position=\"top\" aria-label=\"https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/http-504-gateway-timeout.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/http-504-gateway-timeout.html\" target=\"_self\">cloudfront공식 문서</a>에서 cloudfront에 504문제가 나타는 경우를 2가지로 정의했다.\n오리진이 CloudFront에 HTTP 504 상태 코드를 반환했습니다.\n요청이 만료되기 전에 오리진이 응답하지 않았습니다.\n우리는 이 2번째인 요청이 만료되기 전 origin이 응답하지 않는 문제가 발생햇던것이다.<br><a data-tooltip-position=\"top\" aria-label=\"https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CustomOriginConfig.html\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CustomOriginConfig.html\" target=\"_self\">aws 공식 문서</a>에서 cloudfront의 originReadTimeout이 디폴트로 얼마나 있는지 확인해 볼 수 있엇다\nOriginReadTimeout\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the&nbsp;origin response timeout. The minimum timeout is 1 second, the maximum is 120 seconds, and the default (if you don't specify otherwise) is 30 seconds.\n그렇다 디폴트로 30초이고 최대 2분까지 가능하다.당시 api는 ai모델을 이용하는 요청이였으므로 평균 2.5분이 걸렸다 즉 기존 http를 이용한 api로는 불가능하다고 판단하였다.따라서 ai서비스 진행상황도 유저가 트래킹할 수 있도록 웹소켓으로 데이터를 받는 것으로 수정하였다.","aliases":[],"inlineTags":[],"frontmatterTags":["#nginx","#HTTP499","#HTTP504","#CloudFront","#CloudFrontOriginReadTimeout","#API응답시간","#웹소켓","#AI서비스","#타임아웃설정","#장시간API"],"headers":[{"heading":"현 서비스 상황","level":2,"id":"현_서비스_상황_0"},{"heading":"발생한 문제","level":2,"id":"발생한_문제_0"},{"heading":"해결","level":2,"id":"해결_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"error/assets/nginx-1757772245845.png","fullURL":"400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html","pathToRoot":"..","attachments":["error/assets/nginx-1757772245845.png"],"createdTime":1756656814763,"modifiedTime":1757776973519,"sourceSize":2466,"sourcePath":"400-인프라 & 아키텍처/Error - 장시간 요청 Cloudfront timeout.md","exportPath":"400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html","showInTree":true,"treeOrder":226,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/k8s.html":{"title":"k8s","icon":"","description":"\n컨테이너화된 애플리케이션을 자동으로 배포, 스케일링 및 관리해주는 오픈소스 시스템 목표 상태 달성 목표를 사용자가 설정하면 목표달성을 위해 아래와 같은 일을함\n선언적 관리가 가능\nCurrent State의 모니터링하면서 Desired State를 유지하려는 습성 달성하기 위한 상태 : Desired State\n현재 상태 : Current State 컨테이너 자동 배치 및 복제\n컨테이너 그룹에 대한 로드 밸런싱\n컨테이너 장애 복구\n클러스터 외부에 서비스 노출\n컨테이너 확장 및 축소\n컨테이너 서비스간 인터페이스를 통한 연결 이걸 Container Orchestration라고 한다. <img alt=\"k8s-1751779119042.png\" src=\"300-백엔드개발/assets/k8s-1751779119042.png\" target=\"_self\">\n쿠버네티스의 전체적인 기능제어를 맡고 있음\n이 중 컨트롤 플레인 컴포넌트가 실행되는 서버를 Master Node라고 함\n아래는 다 Master Node kube-apiserver 쿠버네티스 클러스터로 들어오는 요청을 가장 앞에서 접수하는 역할 약간 게이트웨이 같은 느낌인듯? ex ) 쿠버네티스 커맨드 라인 도구인 kubectl을 사용해 각종 명령을 수행할 경우 이 명령은 kube-apiserver로 전송됨 etcd(엣시디) 쿠버네티스클러스터가 \b동작하기 위한 정보를 key-value로 저장하는 저장소 dbms의 데이터 사전같은거인듯? 동작하기 위한 정보 클러스터 및 리소스의 구성 정보, 상태 정보 및 명세 정보 등 &nbsp;안정적인 동작을 위해 자료를 분산해서 저장하는 구조를 채택 why? 동작을 위해 가장 필요한 정보니깐! kube-scheduler 새로 생성된 파드를 감지하여 어떤 노드로 배치할지 결정하는 작업(= 스케줄링)을 담당 kube-controller-manager 목표에 달성하는지 등 여러 파드를 관리하고 유지하는 매니저 역할\n다운된 노드가 없는지, 파드가 의도한 복제(Replicas) 숫자를 유지하고 있는지, 서비스와 파드는 적절하게 연결되어 있는지, 네임스페이스에 대한 기본 계정과 토큰이 생성되어 있는지를 확인하고 적절하지 않다면 적절한 수준을 유지하기 위해 조치함 컨트롤 플레인 컴포넌트의 요청을 받아 각 노드에서 동작을 담당하는 노드\n일반적으로는&nbsp;Worker Node를 의미함 kubelet(쿠블릿) 각 노드에서 파드를 생성하고 정상적으로 동작하는지 관리하는 역할\n노드에서 컨테이너가 동작하도록 관리해 주는 핵심 요소\n우리가 쿠버네티스의 워크로드를 관리하기 위해 내려지는 명령은 kubelet을 통해 수행됨 ex ) kubectl 명령어를 이용해서 YAML를 쿠버네티스에 적용시킴 kubectl 명령어보냄\nkube-apiserver 에서 명령어받고 kubelet에 전달\nYAML에 명시된 변경사항 수행 및 잘 동작하는지 확인 container runtime 파드에 포함된 컨테이너 실행을 실질적으로 담당하는 애플리케이션\n쿠버네티스가 컨테이너를 제어하기 위해 제공하는 표준 규약을 준수한 외부 어플리케이션을 의미\n표준규약 CRI(컨테이너 런타임 인터페이스) 주요 플랫폼 벤더들이 이식성을 위해 컨테이너 포맷과 런타임에 대한 개방형 업계 표준을 만들기 위해 OCI(Open Container Initiative)를 구성\n그과정에서 k8s의 컨테이너 런타임을 만들게됨 &gt;&gt; CRI임 대표적인 container runtime : 컨테이너디(containerd), 크라이오(CRI-O)\n<br><a data-href=\"컨테이너 런타임\" href=\"300-백엔드개발/컨테이너-런타임.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">컨테이너 런타임</a> 에서 자세한 내용 참고 kube-proxy 쿠버네티스 클러스터 내부에서 네트워크 요청을 전달하는 역할\nk8s는 파드 IP가 매번 바뀌는데서 오는 어려움을 해결하기 위해 오브젝트를 통해 고정적으로 파드에 접근할 수 있도록 하는 방법을 제공\n서비스로 들어온 요청이 파드에 실제로 접근할 수 있는 방법을 관리 이거시 바로 kube-proxy인거시다 즉, 파드의 IP는 매번 변하지만 kube-proxy가 이 파드에 접근할 수 있는 방법을 그때마다 관리하고 갱신하며, 서비스 오브젝트는 이 정보를 사용하여 파드가 외부에서 접근할 수 있는 경로를 제공 <br>참고목록 : <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.samsungsds.com/kr/insights/kubernetes-3.html\" target=\"_self\">https://www.samsungsds.com/kr/insights/kubernetes-3.html</a>\n쿠버네티스 최소 배포 단위\nDocker Container vs. Kubernetes Pod ?<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@jee-9/Docker-Container-vs.-Kubernetes-Pod-%EC%93%B0%EB%8A%94%EC%A4%91-%EC%97%90%EB%9F%AC-%EB%98%90-%EB%9C%B8\" target=\"_self\">https://velog.io/@jee-9/Docker-Container-vs.-Kubernetes-Pod-%EC%93%B0%EB%8A%94%EC%A4%91-%EC%97%90%EB%9F%AC-%EB%98%90-%EB%9C%B8</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"목표","level":2,"id":"목표_0"},{"heading":"하는 일","level":2,"id":"하는_일_0"},{"heading":"구성요소","level":2,"id":"구성요소_0"},{"heading":"컨트롤 플레인 컴포넌트","level":3,"id":"컨트롤_플레인_컴포넌트_0"},{"heading":"노드 컴포넌트","level":3,"id":"노드_컴포넌트_0"},{"heading":"POD","level":2,"id":"POD_0"}],"links":["300-백엔드개발/컨테이너-런타임.html"],"author":"","coverImageURL":"300-백엔드개발/assets/k8s-1751779119042.png","fullURL":"400-인프라-&-아키텍처/k8s.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/k8s-1751779119042.html"],"createdTime":1751777055142,"modifiedTime":1751783584615,"sourceSize":4754,"sourcePath":"400-인프라 & 아키텍처/k8s.md","exportPath":"400-인프라-&-아키텍처/k8s.html","showInTree":true,"treeOrder":227,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html"],"type":"markdown"},"400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html":{"title":"k8s,kafka,msa,docker와의 관계","icon":"","description":"<a class=\"internal-link\" data-href=\"k8s.md\" href=\"400-인프라-&amp;-아키텍처/k8s.html\" target=\"_self\" rel=\"noopener nofollow\">k8s</a> , <a class=\"internal-link\" data-href=\"msa.md\" href=\"400-인프라-&amp;-아키텍처/msa.html\" target=\"_self\" rel=\"noopener nofollow\">msa</a> , <a class=\"internal-link\" data-href=\"kafka.md\" href=\"400-인프라-&amp;-아키텍처/kafka.html\" target=\"_self\" rel=\"noopener nofollow\">kafka</a> , <a class=\"internal-link\" data-href=\"docker.md\" href=\"300-백엔드개발/docker.html\" target=\"_self\" rel=\"noopener nofollow\">docker</a><br><img alt=\"k8s,kafka,msa와의 관계-1751777362953.png\" src=\"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png\" target=\"_self\">\n도커 : 어플리케이션 실행 삭제에 집중! 어플리케이션 이미지를 만들고 컨테이너를 실행 배포한다. k8s : 다수의 컨테이너 운영 관리에 집중 자동으로 배포, 확장, 복구, 트래픽분산 등을 실행 가능하다 msa는 마이크로서비스로 마이크로서비스를 관리하려면 도커를 통해 각 파일을 이미지화하고 이러한 컨테이너를 관리할 k8s가 필요할 수 밖에없다.\n그리고 이러한 마이크로서비스들이 동기적으로 동작하면 에러가 발생하면 에러가 확장된다\n이를 방지하기위헤 이벤트드리븐한 방식을 쓰게 되는데 , 이러한 이벤트들을 관리해주는 대표적인 서비스가 kafka다.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"docker 와 k8s","level":2,"id":"docker_와_k8s_0"},{"heading":"msa와 기타들의 관계","level":2,"id":"msa와_기타들의_관계_0"}],"links":["400-인프라-&-아키텍처/k8s.html","400-인프라-&-아키텍처/msa.html","400-인프라-&-아키텍처/kafka.html","300-백엔드개발/docker.html"],"author":"","coverImageURL":".","fullURL":"400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html"],"createdTime":1751777220488,"modifiedTime":1751778454565,"sourceSize":926,"sourcePath":"400-인프라 & 아키텍처/k8s,kafka,msa,docker와의 관계.md","exportPath":"400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","showInTree":true,"treeOrder":228,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/kafka.html":{"title":"kafka","icon":"","description":"g&nbsp;- 확장 ( Distributed ), 유연 ( Resilient ), 장애에 강한 ( fault tolerant ) 아키텍처를 가지고 있는 서비스\n- 실시간 스트리밍 데이터 파이프라인을 구축하는 데 사용\n- MSA에서 이벤트 중심 메시징 시스템의 구현을 위해 사용\n- 실시간 로그 수집에사용\n- 실시간 스트리밍서비스에서 사용\n- Spark, Storm, Flink, Hadoop 등 많은 빅데이터 기술과 통합하여 사용\n- 수평 확장 가능\n- 100 개의 Broker 까지 확장\n- 1초에 100만개의 메세지\n- 무중단 확장 가능\n높은 퍼포먼스 ( 10ms 미만의 지연 )– real time ./monitor-events.sh\nkafka-topics --bootstrap-server http://localhost:9092 --topic example --describe kafka-topics --bootstrap-server http://localhost:9092 --list --exclude-internal kafka-topics --bootstrap-server http://localhost:9092 --topic aivle --create --partitions 1 --replication-factor 1 <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://labs.msaez.io/#/courses/cna-full/2c7ffd60-3a9c-11f0-833f-b38345d437ae/#kafka-basic-2024\" target=\"_self\">https://labs.msaez.io/#/courses/cna-full/2c7ffd60-3a9c-11f0-833f-b38345d437ae/#kafka-basic-2024</a>\n높은 처리량 컨슈머/프로듀서가 브로커와 통신할 때 데이터를 묶어서(배치) 전송\n파티션 개수만큼 컨슈머를 늘려서 병렬 처리량을 늘릴 수 있음\n높은 퍼포먼스 ( 10ms 미만의 지연 )– real time 확장성 데이터 양이 많아지거나 줄어짐에 따라 무중단 스케일인/아웃 가능(수평 확장)\n100 개의 Broker 까지 확장\n- 1초에 100만개의 메세지\n- 무중단 확장 가능 영속성 파일 시스템에 데이터를 저장\n브로커에 이슈가 발생하여 종료되더라도 데이터 재사용 가능 고가용성 일부 브로커에 이슈가 생기더라도 데이터를 지속해서 처리 가능\n온 프레미스/퍼블릭 클라우드에 적합한 브로커 옵션 선택 가능 포함 관계 : 브로커 ⊃ 토픽 ⊃ 파티션\n메시지를 분류하고 저장하는 기본 단위\n특정 데이터 스트림, 즉 메시지를 구분 하는 통로 단톡방개념(요청들을 묶어서 분류하는 단위같은 느뀜..) 토픽으로 구분하여 원하는 메시지를 찾는 방식 pub,sub 이 토픽단위로 되는듯 이름으로 구분됨 if 회사 공용, 토픽의 오너십(ownership)을 가진 팀의 이름을 토픽 이름에 추가\n개발환경 / 애플리케이션 / 데이터 타입 유추을 고려해서 지음 토픽당 데이터를 분산 처리하는 단위\n메시지는 파티션에 순서대로 저장(파티션 내에선 순서가 보장된다는 것) 각각의 파티션은 0부터 1, 2, … 의 Index를 가짐\n이 인덱스를 offset이라캄(파티션 내에서만 의미잇음)\nFIFO 파티션 내 데이터는 변경불가\nKey 를 주지 않으면 어느 파티션에 데이터가 들어갈지 모름 Kafka 클러스터를 구성하는 핵심 서버 단위(노드) 서버하나하나를 브로커라고 부른다는 뜻 각 브로커는 토픽과 파티션을 가짐\n3개로 시작해서 100개까지 늘릴수 있음 브로커 관리함 브로커와 주키퍼는 DB와 DBMS관계와 같은듯 주키퍼 클러스터는 홀수로 동작 왜? 중요한 결정할때 과반수를 따름 중요한결정 aka 리더선출, 데이터쓰기 등 리더선출 노드의 리더를 선출함, 나머지는 Follower\n노드에서 Leader 는 write, Follower 는 read 작업을 함\n파티션의 리더선출도 도와줌 파티션의리더만 읽고쓰기가능\n나머진 ISR(In Sync Replica)역할 &nbsp;리더의 데이터를 체크하여 복제하고, 리더가 장애시 리더 역할함 분산락(유노? 프로세스 데이터접근할때 햇던 그거임) 다아 일관성이랑 무결성을 유지하기위한~ 서비스 디스커버리 서비스가 어디서 실행 중인지 중앙에서 관리\n상태관리를한다는거임 상태가 변경되면 알림을 줌 like ( 토픽 생성, 브로커 die, 브로커 up, 토픽 삭제 ) 주요 설정 Topic Replication factor 토픽을 몇개 복제해놓을건데를 정하는\n리소스량은 증가 &lt;-&gt; 안정성도 증가 말그대로 메세지를 만들어 토픽으로 보내는 것들 애플리케이션, 서버등 주요 설정 key : 설정해 메세지를 특정 파티션에 보낼 수 있음 약간순서 보장필요할때 이거쓰면될듯?\n키옵션 ㄴㄴ일땐 라운드로빈방식으로 균등하게 ack : 메세지 저장 확인 응답관련설정 0 : 응답기다리지 않음 &gt; 빠르지만 안정성구림\n1 : 프로듀서는 리더의 응답만 체크 &gt; 적당함\nall / -1 : 모든 파티션의 응답 확인 메세지를 쓰는 것들\n&nbsp;Kafka는 Consumer Group 단위로 데이터를 처리 Consumer Group 은 당연히 컨슈머를 묶은거 Message Lagging이 높을 경우, 컨슈머를 증가시킴 데이터베이스의 변경 사항(삽입, 수정, 삭제)을 실시간으로 감지해서 다른 시스템으로 전달하는 기술","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"기본명령어","level":2,"id":"기본명령어_0"},{"heading":"특징","level":2,"id":"특징_0"},{"heading":"주요 용어","level":2,"id":"주요_용어_0"},{"heading":"토픽","level":3,"id":"토픽_0"},{"heading":"파티션","level":3,"id":"파티션_0"},{"heading":"브로커","level":3,"id":"브로커_0"},{"heading":"주키퍼","level":3,"id":"주키퍼_0"},{"heading":"프로듀서","level":3,"id":"프로듀서_0"},{"heading":"컨슈머","level":3,"id":"컨슈머_0"},{"heading":"CDC (Change Data Capture)","level":3,"id":"CDC_(Change_Data_Capture)_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"400-인프라-&-아키텍처/kafka.html","pathToRoot":"..","attachments":[],"createdTime":1750877591343,"modifiedTime":1751774960328,"sourceSize":5258,"sourcePath":"400-인프라 & 아키텍처/kafka.md","exportPath":"400-인프라-&-아키텍처/kafka.html","showInTree":true,"treeOrder":229,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","400-인프라-&-아키텍처/msa.html","400-인프라-&-아키텍처/msa설계.html"],"type":"markdown"},"400-인프라-&-아키텍처/msa.html":{"title":"msa","icon":"","description":"마이크로 서비스를 클라우드 네이티브 앱이라고도 부름\n클라우드 앱 : 우리가 어디에 위치해잇든 알바 ㄴㄴ 사용자처리를 csp에서함\n클라우드 네이티브 어플리케이션 : 클라우드에 최적화된 어플리케이션 무정지배포\nmsa &lt;-&gt; 모노리스 : 대척점임 모노리스 무적건나쁜건아님 은행처럼 잘안바뀌고,무결성정합성이중요한서비스는 대부분 모노리스임 cicd 워크로드 많아질시 자동으로 조절(클라우드 특징인듯) 근데보통 클라우드 형식으로구현하니깐.. 6각형으로 각 모듈을표시 자연계에 존재하는 가장 완벽하고 스테이블한 구조물 각각의 모듈에 의존성이 없다보니 따로따로 다른언어프레임워크를써도된다 당연 네트워크로 통신할꺼임 http - 동기방식\n메세징 큐 방식 - 비동기 방식 느슨한결합 독립성과 자치성을 코드의 재사용성 보다 높게 본다\n- 코드와 데이터를 공유하지 않음\n<img alt=\"msa-1749455998102.png\" src=\"300-백엔드개발/assets/msa-1749455998102.png\" target=\"_self\"> 어떠한 직접적 서비스간의 연동은 허용 ㄴㄴ\n오직 네트워크를 통한 호출 만 허용 저장소(db)까지 쪼개야 한다!(물리적으로 따로)\n연동 허용 ㄴㄴ하는 예 직접 링크 연결\n다른 팀의 데이터 저장소를 직접 조회\n공유 메모리 사용\n백도어 등 모든 비공식 접근 동기식: 장애가 상위 호출자에 바로 전파됨(블로킹).\n비동기식: 장애가 즉시 전파되지 않고, 메시지 큐를 통해 격리됨. 장애가 발생한 서비스(B)가 복구되면 큐에 쌓인 메시지를 다시 처리할 수 있습니다 동기식에서는 A가 B에 요청을 보내고, B의 응답을 받을 때까지 기다립니다.\n만약 B에서 장애가 발생하면, A의 요청이 블로킹되어 A도 정상적으로 동작하지 못하게 되고, 이 영향이 연쇄적으로 C, D 등 상위 호출 서비스까지 확산됩니다\n즉, 서비스 간에 \"응답을 기다리는\" 강한 의존성 때문에 장애가 빠르게 전파됩니다. 비동기식에서는 A가 B로 메시지를 보내고, 응답을 기다리지 않고 자신의 작업을 계속합니다.\nB가 장애가 나더라도, A는 메시지 큐(브로커)에 메시지를 넣고 바로 반환받기 때문에 A의 처리가 중단되지 않습니다\n만약 C가 B의 메시지를 받아야만 동작한다면, B가 장애일 때 C는 새로운 메시지를 받지 못할 수 있지만, A와 C는 직접적으로 묶여 있지 않으므로 A의 장애가 C에 직접적으로 전파되지는 않습니다.\n메시지 큐가 중간에서 완충 역할을 하여, 한 서비스의 장애가 전체 시스템에 즉각적으로 영향을 주지 않도록 격리해줍니다\n하나가 고장나거나 장애가 발생시 전체시스템에 문제가 생기는 지점crud 중 cud만이벤트임\n디비가 바뀌는거시이벤트임용\n비동기식 msa에서 사용하는기법발행구독(pubsub) 알고리즘<br>\n<a class=\"internal-link\" data-href=\"kafka.md\" href=\"400-인프라-&amp;-아키텍처/kafka.html\" target=\"_self\" rel=\"noopener nofollow\">kafka</a>이벤트 기반 아키텍처(EDA)\n정합성을 어케유지하지?<br><img alt=\"msa-1749752615566.png\" src=\"300-백엔드개발/assets/msa-1749752615566.png\" target=\"_self\">ddd+조직<br><img alt=\"msa-1749752670525.png\" src=\"300-백엔드개발/assets/msa-1749752670525.png\" target=\"_self\">\naggregate(집계): \b테이블단위로 쪼개는것을 의미함\ncore/supporting\nsub domain core : 말그대로 코어, 핵심경쟁력에 중요하고 버릴 수 없음\nsupportive : 외부 서비스 사용고려 가능한정도\n<br>generic : 일반적인 제품으로 다른 제품을이용하거나 사는게 더저렴하거나 기업의 경쟁력과 무관<img alt=\"msa-1749753255535.png\" height=\"264\" src=\"300-백엔드개발/assets/msa-1749753255535.png\" target=\"_self\" style=\"width: 316px; max-width: 100%;\"> 소프트웨어 복잡성을 관리하는 전략적 도구\nBounded Context(경계가 명확한 영역)로 나누어 설계한는 방법론\n기술적인 설명엄슴\n위의 비지니스관점에서는 거의 도메인주도설계가 드감 비지니스가 곧도메인 느낌아닌가?흠...+조직? <br><a class=\"internal-link\" data-href=\"Aggregate.md\" href=\"300-백엔드개발/aggregate.html\" target=\"_self\" rel=\"noopener nofollow\">Aggregate</a> 로 일관성과 규칙 유지 도메인 탐색 탐색적 DDD 소프트웨어 아키텍처 전략적 DDD 소프트웨어 설계\n- 전술적 DDD<br>\n<img alt=\"msa-1749544836042.png\" src=\"300-백엔드개발/assets/msa-1749544836042.png\" target=\"_self\"> 공유 커널(shared kernel)\n소비자 공급자(customer/supplier)\n준수자(conformist)\n충돌방지 계층(Anti-Corruption Layer)\n공개 호스트서비스(Open Host Service)<br>\n<img alt=\"msa-1749752634954.png\" src=\"300-백엔드개발/assets/msa-1749752634954.png\" target=\"_self\">\nMSA는 시스템을 작은 단위로 쪼개 독립적으로 배포·수정할 수 있게 하여 빠른 변화 대응을 가능하게 하는 아키텍처임\n따라서 같이사용하는 경우가 꽤됨\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"특징","level":2,"id":"특징_0"},{"heading":"제프베조스의 의무사항","level":4,"id":"제프베조스의_의무사항_0"},{"heading":"동기식 비동기식에 따른 차이","level":3,"id":"동기식_비동기식에_따른_차이_0"},{"heading":"장애전파","level":4,"id":"장애전파_0"},{"heading":"동기식","level":5,"id":"동기식_0"},{"heading":"비동기식","level":5,"id":"비동기식_0"},{"heading":"단일실패지점","level":3,"id":"단일실패지점_0"},{"heading":"이벤트스토밍","level":3,"id":"이벤트스토밍_0"},{"heading":"분해","level":2,"id":"분해_0"},{"heading":"비지니스관점에서의 분해","level":3,"id":"비지니스관점에서의_분해_0"},{"heading":"DDD(도메인 주도 설계)","level":4,"id":"DDD(도메인_주도_설계)_0"},{"heading":"생명주기별 DDD","level":5,"id":"생명주기별_DDD_0"},{"heading":"바운디드 컨텍스트 매핑(Bounded Context Mapping)","level":4,"id":"바운디드_컨텍스트_매핑(Bounded_Context_Mapping)_0"},{"heading":"애자일과의 관계","level":2,"id":"애자일과의_관계_0"}],"links":["400-인프라-&-아키텍처/kafka.html","300-백엔드개발/aggregate.html"],"author":"","coverImageURL":"300-백엔드개발/assets/msa-1749455998102.png","fullURL":"400-인프라-&-아키텍처/msa.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/msa-1749455998102.html","300-백엔드개발/assets/msa-1749752615566.html","300-백엔드개발/assets/msa-1749752670525.html","300-백엔드개발/assets/msa-1749753255535.html","300-백엔드개발/assets/msa-1749544836042.html","300-백엔드개발/assets/msa-1749752634954.html"],"createdTime":1749384636686,"modifiedTime":1750880584172,"sourceSize":7656,"sourcePath":"400-인프라 & 아키텍처/msa.md","exportPath":"400-인프라-&-아키텍처/msa.html","showInTree":true,"treeOrder":230,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","400-인프라-&-아키텍처/msa설계.html"],"type":"markdown"},"400-인프라-&-아키텍처/msa설계.html":{"title":"msa설계","icon":"","description":"<a class=\"internal-link\" data-href=\"msa.md\" href=\"400-인프라-&amp;-아키텍처/msa.html\" target=\"_self\" rel=\"noopener nofollow\">msa</a>\nwith msa ez데이터 생성/변경은 소유 도메인이 책임진다boundedcontext,event,command,aggregate,policy,readmodel<br>\n<img alt=\"msa설계-1750876404713.png\" src=\"300-백엔드개발/assets/msa설계-1750876404713.png\" target=\"_self\">\n바운디드컨텍스트: 보통도베인인거같음\ncommand 사용자나 시스템의 명령을 표현하는 메세지\n외부랑 소통하는 부분(rest api)\n누가 : actor event cud 에 해당하는 시스템에서 발생한 사실\n<br><a class=\"internal-link\" data-href=\"kafka.md\" href=\"400-인프라-&amp;-아키텍처/kafka.html\" target=\"_self\" rel=\"noopener nofollow\">kafka</a>\n이미 완료된작업을 기술함\n~~ ed\n나중에 클래스가 됨 aggregate 이동되는 데이터의 형식(Entity)이 정의\nDB랑 연결되서 crud가 일어날 수 있음\n나중에 클래스가됨 policy 특정 이벤트 발생시 시스템이 자동으로 시행해야하는 규칙or 비지니스 로직\n나중에 함수가됨 일반적인 흐름 actor &gt; command &gt; event &gt; aggregate &gt; policy <br><img alt=\"msa설계-1750876609108.png\" src=\"300-백엔드개발/assets/msa설계-1750876609108.png\" target=\"_self\">\n애플리케이션의 핵심 로직(비즈니스 로직)을 외부 환경(UI, DB, 메시징 등)과 분리하여 설계하는 구조 내부 핵심 로직은 ‘포트(Port)’를 통해 외부와 연결\n외부 시스템은 ‘어댑터(Adapter)’를 통해 이 포트를 사용 inbound : 이벤트 송수신\noutbound : db 접근 장점 테스트가 쉬움\n외부 환경(DB나 API 등)이 바뀌더라도 핵심 로직을 그대로 유지가능 사견임 ,, 내느낌엔 리눅스가 레이어드아키텍처랑 비슷하다고생각이됨\n- 레이어를 나눠서 통로를 정해놓은느낌<br>\n<img alt=\"msa설계-1750880282832.png\" height=\"488\" src=\"300-백엔드개발/assets/msa설계-1750880282832.png\" target=\"_self\" style=\"width: 566px; max-width: 100%;\"> 읽는작업과 변경하는작업을 분리해서 처리\n이벤트가그러잔슴!! 이벤트는 read는 생각안한다구!!\ncommand : cud\nquary : read (여기선 읽는작업을 쿼리라고함)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"주요 구성","level":2,"id":"주요_구성_0"},{"heading":"aggregate","level":3,"id":"aggregate_0"},{"heading":"관련 아키텍처","level":2,"id":"관련_아키텍처_0"},{"heading":"헥사고날 아키텍처","level":3,"id":"헥사고날_아키텍처_0"},{"heading":"CQRS","level":3,"id":"CQRS_0"}],"links":["400-인프라-&-아키텍처/msa.html","400-인프라-&-아키텍처/kafka.html"],"author":"","coverImageURL":"300-백엔드개발/assets/msa설계-1750876404713.png","fullURL":"400-인프라-&-아키텍처/msa설계.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/msa설계-1750876404713.html","300-백엔드개발/assets/msa설계-1750876609108.html","300-백엔드개발/assets/msa설계-1750880282832.html"],"createdTime":1750316766990,"modifiedTime":1750907266741,"sourceSize":1877,"sourcePath":"400-인프라 & 아키텍처/msa설계.md","exportPath":"400-인프라-&-아키텍처/msa설계.html","showInTree":true,"treeOrder":231,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/msa전체적인-구조.html":{"title":"msa전체적인 구조","icon":"","description":"<img alt=\"msa전체적인 구조-1751776935880.png\" src=\"300-백엔드개발/assets/msa전체적인-구조-1751776935880.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"400-인프라-&-아키텍처/msa전체적인-구조.html","pathToRoot":"..","attachments":["300-백엔드개발/assets/msa전체적인-구조-1751776935880.html"],"createdTime":1751776927627,"modifiedTime":1751776937596,"sourceSize":46,"sourcePath":"400-인프라 & 아키텍처/msa전체적인 구조.md","exportPath":"400-인프라-&-아키텍처/msa전체적인-구조.html","showInTree":true,"treeOrder":232,"backlinks":[],"type":"markdown"},"400-인프라-&-아키텍처/test.html":{"title":"test","icon":"","description":"문항: 다음중 AWS Availability Zone 의 설명으로 틀린 것은? AZ는 리전 내 물리적으로 분리된 전력 네트워킹 장치가 분리된 영역이며, 각 AZ 사이에는 물리적으로 100KM 정도 차이가 있다. 실제로 AZ는 물리적으로 분리되어 있고, 거리도 수십~수백 km 차이일 수 있음. 하나의 리전에는 일반적으로 2~3개의 AZ로 구성이 되며, 동일한 리전내 AZ들은 전용 네트워크로 구성이 되어 빠른 속도를 보장한다. 리전 내 여러 AZ가 전용 네트워크로 연결되어 있음. AWS의 리전에는 코드가 있고 그 리전코드 뒤에 a,b,c.. 등으로 구분이되어 AZ 명을 구분한다. 실제로 ap-northeast-2a 같은 방식으로 AZ를 구분함. 가용성을 높여 AZ 장애를 복구하기 위한 방법은 사용하고 있는 인스턴스를 동일한 AZ에 배치하는 것이다. (정답) 가용성을 높이려면 인스턴스를 서로 다른 AZ에 분산해야 하며, 동일 AZ에만 배치하면 장애 시 모두 영향받음. 문항: 가상머신과 컨테이너를 비교하는 내용 중 틀린 것은? 가상머신에는 OS를 다양하게 사용할 수 있으며 GuestOS가 먼저 설치되고 필요한 Application을 설치하여 사용한다. 가상머신은 Guest OS 위에 앱을 설치함. 컨테이너 환경에서는 GuestOS가 따로 없으며 필요한 Application을 컨테이너에 직접 설치하여 사용한다. 컨테이너는 Host OS 커널을 공유하고, Guest OS가 없음. 비교적 컨테이너가 가상머신보다 이미지 사이즈가 작고 시작시간이 짧아 MSA 환경에서는 컨테이너가 더 활용도가 높다. 컨테이너가 MSA에 더 적합함. 가상머신이나 컨테이너는 데이터를 관리할 때 연결된 스토리지에 저장을 하는데, 사용이 끝나면 스토리지 또한 함께 삭제되기 때문에 중요한 데이터는 따로 관리하는 것을 권장한다. (정답) 스토리지는 인스턴스 종료 시 항상 삭제되는 것이 아니며, 별도 설정에 따라 유지될 수 있음. 문항: 클라우드 유형에 대한 설명으로 옳은 것은? 클라우드 컴퓨팅 서비스를 제공해주는 업체(CSP, Cloud Service Provider)에게 인프라에 필요한 자원들을 대여하여 사용하는 방식의 클라우드는 프라이빗 클라우드이다. CSP에서 자원 대여는 퍼블릭 클라우드임. 특정 기업, 특정 사용자만 사용하는 방식이며 서비스의 자원과 데이터는 기업의 데이터센터에 저장하는 방식의 클라우드는 퍼블릭 클라우드이다. 이 설명은 프라이빗 클라우드에 해당함. 2개 이상의 서로 다른 클라우드를 사용하는 방식으로, 하나의 CSP에 종속되지 않기 위해 사용하는 방식은 멀티클라우드이다. (정답) 멀티클라우드는 여러 CSP를 혼용하는 방식이 맞음. 기존 On-premise 에 구성되어 있는 인프라와 Public Cloud를 혼용하여 함께 사용하는 방식은 듀얼 클라우드 방식이다. 일반적으로 하이브리드 클라우드라고 부름. 문항: 다음 중 IT인프라 자동화에 대한 설명으로 맞지 않는 것은? 자동화 기술은 일단 모든 IT 인프라 구성 요소를 완벽하게 설치하고 구성해 둔 다음에야 활용할 수 있다. (정답) 자동화는 인프라 설치 및 구성 자체를 자동으로 처리하는 기술임. 자동화 기술을 사용하면 휴먼 에러를 줄이고 반복적인 작업을 보다 빨리 수행할 수 있다. 자동화의 장점이 맞음. 수많은 IT인프라를 플레이북과 같은 템플릿을 사용해 업무로 만들고 워크플로우를 구성해 코드로써 자동화시키는 것이 IT인프라 자동화의 핵심이다. 자동화의 핵심 설명이 맞음. AIOps는 IT인프라 운영을 보다 효율적으로 하기 위해 AI/ML을 활용하는 것을 말한다. AIOps의 정의가 맞음. 문항: EC2에 대한 설명으로 틀린 것은? AWS AMI 란 Amazon Machine Image의 약어로 EC2 가상머신으로 구동할 이미지를 의미한다. AMI 설명이 맞음. Key pair는 생성시 다운로드 가능하고, 분실시 Console을 통해 언제든지 다운로드 할 수 있다. (정답) Key pair는 생성 시에만 다운로드 가능하며, 분실 시 재다운로드 불가. 보안그룹에서는 인바운드 규칙 또는 아웃바운드 규칙을 통해 내/외부 트래픽을 관리한다. 보안그룹 설명이 맞음. EC2의 인스턴스는 가상머신을 의미하며 가상화된 서버를 제공해 주는 서비스이다. EC2 인스턴스 설명이 맞음. 문항: 오토스케일링 그룹의 역할 및 기능으로 보기 어려운 것은? 스케일인/아웃 오토스케일링의 대표 기능임. Public한 인터넷 환경으로의 경로 설정 (정답) 네트워크 경로 설정은 오토스케일링 그룹이 아니라 VPC, 라우팅 등에서 담당함. 시작템플릿을 통한 자동 배포 시작템플릿을 활용한 자동 배포가 가능함. 자동 확장/축소시 알람기능 오토스케일링에서 알람 기능 제공함. 문항: 다음 중 AWS Storage 서비스에 대한 설명으로 틀린 것은? AWS의 Storage 서비스에는 EBS, EFS, S3 등이 있다. 세 서비스 모두 AWS의 대표 스토리지임. EC2 인스턴스를 위한 비 휘발성 블록스토리지이며, 디스크를 추가하거나 스케일 업이 가능한 서비스는 EBS 이다. EBS 설명이 맞음. 오브젝트를 저장하는 컨테이너로 S3에서 사용되며 AWS Account 당 최대 개수가 100개 설정할 수 있는 것은 S3 Container 이다. (정답) S3에서 오브젝트 저장 단위는 '버킷'이며, 'S3 Container'는 공식 용어가 아님. 스냅샷을 활용하여, AZ간 복사, 리전간 복사도 가능하며, 이 스냅샷을 S3에 저장하는 볼륨 서비스는 EBS이다. EBS 스냅샷 설명이 맞음. 문항: 다음 중 VPC에 대한 설명으로 틀린 것은? VPC는 부족한 IP 자원의 효율적인 관리를 위해 사용한다. VPC의 목적 중 하나임. VPC 내부는 모두 외부 IP(공인 IP)를 사용한다. (정답) VPC 내부는 기본적으로 사설 IP를 사용함. VPC에서는 CIDR를 이용하여 IP의 대역을 설정하고 관리한다. CIDR로 IP 대역 설정이 맞음. VPC Subnet은 VPC의 CIDR를 한 번 더 적절히 나누어 대역을 설정하고 사용한다. Subnet 설명이 맞음. 문항: 다음 중 컨테이너에 대한 설명으로 올바른 것은? 특정 하드웨어 위에 가상의 공간을 생성하는 개념이며, OS 단위로 공간을 생성한다 컨테이너는 OS 단위가 아니라 프로세스 단위로 격리함. 컨테이너에 올라간 애플리케이션은 서로 격리되어 독립적으로 운영된다 (정답) 컨테이너의 핵심 특성임. 앱을 가상의 공간에 격리해서 사용할 수 있는 컨테이너 기술은 도커가 유일하다 도커 외에도 다양한 컨테이너 기술이 있음(LXC 등). 다수의 컨테이너를 효율적으로 관리하기 위해 탄생한 쿠버네티스는 유료 소프트웨어이다 쿠버네티스는 오픈소스, 무료임. 문항: 가상화에 대한 설명중 틀린 것은? 하이퍼바이저는 하나의 시스템에서 다수의 운영체제를 실행할 수 있게 한다. 하이퍼바이저 설명이 맞음. 물리적인 리소스를 가상으로 분할하여 여러 가상 운영체제가 사용하게 설정한다. 가상화의 정의가 맞음. 가상화 기술중 가상머신은 MSA 환경에서 적합하게 사용된다. (정답) MSA 환경에는 가상머신보다 컨테이너가 더 적합함. 가상머신에서는 GuestOS를 통해 다양한 운영체제를 선택하여 사용할 수 있다. (Linux, windows 등) 실제로 Guest OS로 다양한 운영체제 선택 가능함. ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"각 문항별 보기 및 해설 (정답만 (정답) 표시)","level":1,"id":"각_문항별_보기_및_해설_(정답만_(정답)_표시)_0"},{"heading":"1. AWS Availability Zone","level":2,"id":"1._AWS_Availability_Zone_0"},{"heading":"2. 가상머신과 컨테이너","level":2,"id":"2._가상머신과_컨테이너_0"},{"heading":"3. 클라우드 기본","level":2,"id":"3._클라우드_기본_0"},{"heading":"4. IT인프라 자동화","level":2,"id":"4._IT인프라_자동화_0"},{"heading":"5. AWS EC2","level":2,"id":"5._AWS_EC2_0"},{"heading":"6. AWS ASG","level":2,"id":"6._AWS_ASG_0"},{"heading":"7. AWS Storage","level":2,"id":"7._AWS_Storage_0"},{"heading":"8. AWS VPC","level":2,"id":"8._AWS_VPC_0"},{"heading":"9. 컨테이너 개념","level":2,"id":"9._컨테이너_개념_0"},{"heading":"10. 클라우드 기본","level":2,"id":"10._클라우드_기본_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"400-인프라-&-아키텍처/test.html","pathToRoot":"..","attachments":[],"createdTime":1747295964185,"modifiedTime":1747296286495,"sourceSize":8834,"sourcePath":"400-인프라 & 아키텍처/test.md","exportPath":"400-인프라-&-아키텍처/test.html","showInTree":true,"treeOrder":233,"backlinks":[],"type":"markdown"},"500-모바일개발/android/assets/1_setting-20241221011941321.html":{"title":"1_setting-20241221011941321","icon":"","description":"<img src=\"500-모바일개발/android/assets/1_setting-20241221011941321.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/1_setting-20241221011941321.png","fullURL":"500-모바일개발/android/assets/1_setting-20241221011941321.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/1_setting-20241221011941321.html"],"createdTime":1734711581254,"modifiedTime":1734711581254,"sourceSize":207565,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221011941321.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221011941321.html","showInTree":true,"treeOrder":237,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment"},"500-모바일개발/android/assets/1_setting-20241221013449422.html":{"title":"1_setting-20241221013449422","icon":"","description":"<img src=\"500-모바일개발/android/assets/1_setting-20241221013449422.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/1_setting-20241221013449422.png","fullURL":"500-모바일개발/android/assets/1_setting-20241221013449422.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/1_setting-20241221013449422.html"],"createdTime":1734712489382,"modifiedTime":1734712489382,"sourceSize":101257,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221013449422.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221013449422.html","showInTree":true,"treeOrder":238,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment"},"500-모바일개발/android/assets/1_setting-20241221035822530.html":{"title":"1_setting-20241221035822530","icon":"","description":"<img src=\"500-모바일개발/android/assets/1_setting-20241221035822530.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/1_setting-20241221035822530.png","fullURL":"500-모바일개발/android/assets/1_setting-20241221035822530.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/1_setting-20241221035822530.html"],"createdTime":1734721102456,"modifiedTime":1734721102456,"sourceSize":151438,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221035822530.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221035822530.html","showInTree":true,"treeOrder":239,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment"},"500-모바일개발/android/assets/2_기본구조-20241221025557132.html":{"title":"2_기본구조-20241221025557132","icon":"","description":"<img src=\"500-모바일개발/android/assets/2_기본구조-20241221025557132.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/2_기본구조-20241221025557132.png","fullURL":"500-모바일개발/android/assets/2_기본구조-20241221025557132.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/2_기본구조-20241221025557132.html"],"createdTime":1734717357084,"modifiedTime":1734717357084,"sourceSize":315564,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221025557132.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221025557132.html","showInTree":true,"treeOrder":240,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment"},"500-모바일개발/android/assets/2_기본구조-20241221031015594.html":{"title":"2_기본구조-20241221031015594","icon":"","description":"<img src=\"500-모바일개발/android/assets/2_기본구조-20241221031015594.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/2_기본구조-20241221031015594.png","fullURL":"500-모바일개발/android/assets/2_기본구조-20241221031015594.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/2_기본구조-20241221031015594.html"],"createdTime":1734718215551,"modifiedTime":1734718215552,"sourceSize":35540,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221031015594.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221031015594.html","showInTree":true,"treeOrder":241,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment"},"500-모바일개발/android/assets/2_기본구조-20241221031505580.html":{"title":"2_기본구조-20241221031505580","icon":"","description":"<img src=\"500-모바일개발/android/assets/2_기본구조-20241221031505580.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/2_기본구조-20241221031505580.png","fullURL":"500-모바일개발/android/assets/2_기본구조-20241221031505580.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/2_기본구조-20241221031505580.html"],"createdTime":1734718505538,"modifiedTime":1734718505539,"sourceSize":35106,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221031505580.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221031505580.html","showInTree":true,"treeOrder":242,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment"},"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html":{"title":"2_안드로이드 이해-20241221213455018","icon":"","description":"<img src=\"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html"],"createdTime":1734784495002,"modifiedTime":1734784495036,"sourceSize":456035,"sourcePath":"500-모바일개발/android/assets/2_안드로이드 이해-20241221213455018.png","exportPath":"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html","showInTree":true,"treeOrder":243,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment"},"500-모바일개발/android/assets/3_코틀린-20241221220802352.html":{"title":"3_코틀린-20241221220802352","icon":"","description":"<img src=\"500-모바일개발/android/assets/3_코틀린-20241221220802352.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/3_코틀린-20241221220802352.png","fullURL":"500-모바일개발/android/assets/3_코틀린-20241221220802352.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/3_코틀린-20241221220802352.html"],"createdTime":1734786482338,"modifiedTime":1734786482390,"sourceSize":163314,"sourcePath":"500-모바일개발/android/assets/3_코틀린-20241221220802352.png","exportPath":"500-모바일개발/android/assets/3_코틀린-20241221220802352.html","showInTree":true,"treeOrder":244,"backlinks":["500-모바일개발/android/3_코틀린.html"],"type":"attachment"},"500-모바일개발/android/assets/4_화면-구성-20241223010710073.html":{"title":"4_화면 구성-20241223010710073","icon":"","description":"<img src=\"500-모바일개발/android/assets/4_화면-구성-20241223010710073.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/4_화면-구성-20241223010710073.html"],"createdTime":1734883630058,"modifiedTime":1734883630095,"sourceSize":39947,"sourcePath":"500-모바일개발/android/assets/4_화면 구성-20241223010710073.png","exportPath":"500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","showInTree":true,"treeOrder":245,"backlinks":["500-모바일개발/android/4_화면-구성.html"],"type":"attachment"},"500-모바일개발/android/assets/4_화면-구성-20241224000559232.html":{"title":"4_화면 구성-20241224000559232","icon":"","description":"<img src=\"500-모바일개발/android/assets/4_화면-구성-20241224000559232.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"500-모바일개발/android/assets/4_화면-구성-20241224000559232.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/4_화면-구성-20241224000559232.html"],"createdTime":1734966359207,"modifiedTime":1734966359250,"sourceSize":150094,"sourcePath":"500-모바일개발/android/assets/4_화면 구성-20241224000559232.png","exportPath":"500-모바일개발/android/assets/4_화면-구성-20241224000559232.html","showInTree":true,"treeOrder":246,"backlinks":["500-모바일개발/android/4_화면-구성.html"],"type":"attachment"},"500-모바일개발/android/assets/setting-20241219232030173.html":{"title":"setting-20241219232030173","icon":"","description":"<img src=\"500-모바일개발/android/assets/setting-20241219232030173.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/setting-20241219232030173.png","fullURL":"500-모바일개발/android/assets/setting-20241219232030173.html","pathToRoot":"../../..","attachments":["500-모바일개발/android/assets/setting-20241219232030173.html"],"createdTime":1734618030110,"modifiedTime":1734618030110,"sourceSize":568500,"sourcePath":"500-모바일개발/android/assets/setting-20241219232030173.png","exportPath":"500-모바일개발/android/assets/setting-20241219232030173.html","showInTree":true,"treeOrder":247,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment"},"500-모바일개발/android/1_setting.html":{"title":"1_setting","icon":"","description":"<img alt=\"assets/setting-20241219232030173.png\" src=\"500-모바일개발/android/assets/setting-20241219232030173.png\" target=\"_self\" style=\"width: 440px; max-width: 100%;\">\n기존 프로젝트에 모듈을 추가하는 방식으로도 앱을 생성가능\n안스에서 모듈 == 앱 packagename : 앱의 식별값 보통 도메인 역순 + ㅐ끝에 프로젝트명 build configuration language build.gradle 파일을 선택하는 부분\nGroovy DSL과 Kotlin DSL이 있음 groovy : build.gradle\nkotlin : build.gradle.kts DSL가 뭔지 &amp; 문법차이 <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.imqa.io/kotlin-dsl/\" target=\"_self\">https://blog.imqa.io/kotlin-dsl/</a> 장단점 <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://kdhyo98.tistory.com/87\" target=\"_self\">https://kdhyo98.tistory.com/87</a> compileSdkVersion : 일반적으로 최신 SDK 버전으로 설정하는 것이 권장됩니다. targetSdkVersion : 앱이 테스트된 최신 안드로이드 버전 minSdkVersion : 앱이 지원하는 가장 낮은 안드로이드 버전 <br><img alt=\"assets/1_setting-20241221011941321.png\" src=\"500-모바일개발/android/assets/1_setting-20241221011941321.png\" target=\"_self\" style=\"width: 549px; max-width: 100%;\">\n안드로이드 개발하기 위한 툴킷\nsetting &gt; languages&amp;framework &gt; android sdk\n개발 sdk는 최근 껄 하는게 좋다고한다. 최신기기를 타겟팅하면서 하위호환성을 유지할 수 있다.\n호환성을 테스트하고자 의도적으로 낮출때도 있다. Android Tiramisu Privacy Sandbox Preview 프라이버시기능을 특히 광고 관련쪽에서 강화한 한 버전이다 minSDK, targetSDK, compileSDK 비교 <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://eunoia3jy.tistory.com/226\" target=\"_self\">https://eunoia3jy.tistory.com/226</a> <br><img alt=\"assets/1_setting-20241221013449422.png\" src=\"500-모바일개발/android/assets/1_setting-20241221013449422.png\" target=\"_self\" style=\"width: 544px; max-width: 100%;\"><br><img alt=\"assets/1_setting-20241221035822530.png\" src=\"500-모바일개발/android/assets/1_setting-20241221035822530.png\" target=\"_self\" style=\"width: 307px; max-width: 100%;\">\nmanifests 앱의 기본설정들\nAndriodManifest.xml : 메인 환경설정\nmanifest : 루트태그 xmlns : xml의 네임스페이스 선언 &lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\"&gt; application : 앱전체를 대상하는 설정\n&lt;application android:allowBackup=\"true\" android:dataExtractionRules=\"@xml/data_extraction_rules\" android: fullBackupContent=\"@xml/backup_rules\" android:icon=\"@mipmap/ic_launcher\" android: label=\"@string/app_name\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:supportsRt1=\"true\" android: theme=\"@style/Theme.AndroidLab\" tools: targetApi=\"31\"&gt; (... 생략 ...)&lt;/application &gt; @머시기/머시기 : res안에있는 파일(폴더) 안에 있는 값 컴포넌트 등록 activity, service, receiver, provider 태그이용\nname 속성에 클래스 이름을 등록 .클래스이름 의 \".\"은 manifest에 등록한 package경로에 있다는 것 intent-filter : 인텐트를 설정함 &lt;activity android:name=\".MainActivity\" android:exported=\"true\"&gt; &lt;intent-filter&gt; &lt;action android:name=\"android.intent.action.MAIN\" /&gt; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt; &lt;/intent-filter&gt;\n&lt;/activity&gt; kotlin+java 앱 주요소스 코드 파일들 res 리소스파일\ndrawable : 이미지 백터파일\nmipmap : 아이콘 이미지파일(주로 다양한해상도넣음)\nvalue : 일반리소스들 strings.xml: 문자열 리소스\ncolors.xml: 색상 정의\nthemes.xml: 앱 테마 스타일\ndimens.xml: 크기 값\nstyles.xml: 커스텀 스타일 xml : 환경설정, 보안, 백업등 env관련파일 gradle script gradle : 안드로이드 앱 빌드 도구\nbuild.gradle.kts : 빌드 설정 script Project : AndroidLab 프로젝트 수준의 빌드 설정 Module : app 모듈(앱) 수준의 빌드 설정 주요코드 plugin : 플러그인선언\napplicationId : 앱식별자설정\ncompileSdk : 컴파일,빌드 적용할 버전\nminSdk, targetSdk : 최소, 타겟 SDK\nversionCode, versionName : 버전 코드와 명\ncompileOptions, kotlinOptions : 개발언어 버전 설정\ndependecies : 라이브러리 버전 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"프로젝트 생성","level":1,"id":"프로젝트_생성_0"},{"heading":"기타 설정","level":1,"id":"기타_설정_0"},{"heading":"android sdk","level":3,"id":"android_sdk_0"},{"heading":"sdk tool","level":3,"id":"sdk_tool_0"},{"heading":"안드로이드스튜디오 기본 폴더구성","level":1,"id":"안드로이드스튜디오_기본_폴더구성_0"}],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/setting-20241219232030173.png","fullURL":"500-모바일개발/android/1_setting.html","pathToRoot":"../..","attachments":["500-모바일개발/android/assets/setting-20241219232030173.html","500-모바일개발/android/assets/1_setting-20241221011941321.html","500-모바일개발/android/assets/1_setting-20241221013449422.html","500-모바일개발/android/assets/1_setting-20241221035822530.html"],"createdTime":1734724153880,"modifiedTime":1734982660478,"sourceSize":3957,"sourcePath":"500-모바일개발/android/1_setting.md","exportPath":"500-모바일개발/android/1_setting.html","showInTree":true,"treeOrder":248,"backlinks":[],"type":"markdown"},"500-모바일개발/android/2_안드로이드-이해.html":{"title":"2_안드로이드 이해","icon":"","description":"<img alt=\"assets/2_기본구조-20241221025557132.png\" src=\"500-모바일개발/android/assets/2_기본구조-20241221025557132.png\" target=\"_self\" style=\"width: 306px; max-width: 100%;\">\n리눅스 기반운영체제 &gt; 리눅스 커널 사용\nHAL(하드웨어 추상화 레이어) 자바 api프레임워크에서 하드웨어 기능을 이용할 수 있게 표준 인터페이스 제공 ART(안드로이드 런타임) 앱을 실행하는 역할\nDEX 파일을 해석하고 실행함 안드로이드 앱은 dex파일로 빌드됨 컴파일시 클래스 파일이 만들어짐\nDEX파일로 컴파일\nART에서 실행 일반 자바코드와 안드로이드에서 자바코드 컴파일 차이<br>\n<img alt=\"assets/2_기본구조-20241221031015594.png\" src=\"500-모바일개발/android/assets/2_기본구조-20241221031015594.png\" target=\"_self\" style=\"width: 673px; max-width: 100%;\"> 컴포넌트가 핵심\n앱의 구성요소 이자 구성하는 단위.\n클래스로 컴포넌트를 개발함\n모든 클래스가 컴포넌트는 아니고 컴포넌트 클래스가 있음<br>\n<img src=\"500-모바일개발/android/assets/2_기본구조-20241221031505580.png\" target=\"_self\"> 컴포넌트클래스의 경우 클래스와 컴포넌트가 1대1대응 컴포넌트 클래스는 생명주기를 안드로이드 시스템에서 관리\n컴포넌트 이름 상속받아야할 클래스 명으로 작성\n액티비티 Activity 화면 구성하는 컴포넌트 서비스 Service 백그라운드 작업을 하는 컴포넌트 콘텐츠 프로바이드 ContentProvider 앱데이터 공유하는 컴포넌트\n앱간에 데이터를 공유할 수도 있음. 브로드캐스트 리시버 BroadcastReceiver 시스템 이벤트가 발생할때 실행되게하는 컴포넌트 리소스 : 정적인 값\n안드로이드는 이를 리소스로 등록해서 사용\n대부분 리소스는 xml파일로 작성한다.\n리소스로 등록\nres \b하위의 폴더는 정해져있다. R자바파일에 파일명기준으로 식별하는 int 형 변수가자동으로 만들어짐\n리소스 유형들\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://developer.android.com/guide/topics/resources/providing-resources?hl=ko\" target=\"_self\">https://developer.android.com/guide/topics/resources/providing-resources?hl=ko</a> <br>안드로이드 스튜디오는 그룹화해서 보여준다.<img alt=\"assets/2_안드로이드 이해-20241221213455018.png\" src=\"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png\" target=\"_self\" style=\"width: 254px; max-width: 100%;\"> 보면 실제파일은 &lt;resources_name&gt;-&lt;qualifier&gt; 형식으로 되어있다.\n하지만 androidstudio에서는 지정된 resources_name끼리 묶어서 보여준다. 파일명은 자바의 규칙을 따름 자바는 snake_case 사용 파일명에 대문자 ㄴㄴ &lt;string name=\"mytxt\"&gt; 동해 물과 백두산이 마르고 닳도록\n&lt;/string&gt; 리소스 접근 resources.getString(R.string.mytxt) 장점 유지보수성 향상 리소스를 외부화하면 코드와 데이터를 분리할 수 있어 유지보수가 용이해집니다. 예를 들어, 문자열을 strings.xml 파일에 저장하면 애플리케이션 코드를 수정하지 않고도 텍스트를 쉽게 변경할 수 있습니다. 다국어 지원 용이성 리소스 파일을 사용하면 다국어 지원이 매우 간단해집니다. 각 언어별로 별도의 문자열 리소스 파일을 만들어 사용자의 언어 설정에 따라 적절한 텍스트를 자동으로 표시할 수 있습니다. 일관성 유지 중앙 집중식으로 리소스를 관리하면 앱 전체에서 일관된 스타일과 데이터를 유지하기 쉽습니다. 예를 들어, 색상이나 크기 값을 리소스로 정의하면 여러 곳에서 동일한 값을 쉽게 재사용할 수 있습니다. 디자인 변경 용이성 UI 요소를 XML 레이아웃 파일로 정의하면 코드를 수정하지 않고도 디자인을 쉽게 변경할 수 있습니다. 이는 디자이너와 개발자 간의 협업을 원활하게 합니다. 리소스 최적화 안드로이드 시스템은 리소스를 효율적으로 관리하고 최적화합니다. 예를 들어, 기기 구성에 가장 적합한 리소스를 자동으로 선택하여 로드합니다. 메모리 관리 개선 정적 변수와 달리 리소스는 시스템에 의해 더 효율적으로 관리됩니다. 이는 메모리 누수 위험을 줄이고 앱의 안정성을 향상시킵니다. ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"안드로이드","level":1,"id":"안드로이드_0"},{"heading":"컴포넌트","level":1,"id":"컴포넌트_0"},{"heading":"종류","level":3,"id":"종류_0"},{"heading":"개발시 특징","level":1,"id":"개발시_특징_0"},{"heading":"다른 앱을 라이브러리처럼 사용가능","level":4,"id":"다른_앱을_라이브러리처럼_사용가능_0"},{"heading":"리소스","level":4,"id":"리소스_0"}],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/2_기본구조-20241221025557132.png","fullURL":"500-모바일개발/android/2_안드로이드-이해.html","pathToRoot":"../..","attachments":["500-모바일개발/android/assets/2_기본구조-20241221025557132.html","500-모바일개발/android/assets/2_기본구조-20241221031015594.html","500-모바일개발/android/assets/2_기본구조-20241221031505580.html","500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html"],"createdTime":1734717287765,"modifiedTime":1734784647489,"sourceSize":4184,"sourcePath":"500-모바일개발/android/2_안드로이드 이해.md","exportPath":"500-모바일개발/android/2_안드로이드-이해.html","showInTree":true,"treeOrder":249,"backlinks":[],"type":"markdown"},"500-모바일개발/android/3_코틀린.html":{"title":"3_코틀린","icon":"","description":"\n상호 운용성 java와 100% 호환됨 Null safety null허용과 null 불허용을 구분하여 선언함 java에 비해 간결함\n구조화 동시성 코루틴을 이용한 비동기 프로그래밍 간소화 코틀린에서는 하위폴더를 .으로 구분됨<img alt=\"assets/3_코틀린-20241221220802352.png\" src=\"500-모바일개발/android/assets/3_코틀린-20241221220802352.png\" target=\"_self\" style=\"width: 449px; max-width: 100%;\">\n자바와 달리 클래스로 모든걸 안 묶어도 됨 최상위에 변수 함수를 선언할 수 있음 package는 이파일을 컴파일 했을때 만들어지는 클래스 파일위치를 나타냄\n일반적으로 kt파일의 위치와 package이름을 동일시 다르게할수도있음. 같은 패키지에있는 변수,함수와 클래스는 import 하지않아도됨\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"특징","level":1,"id":"특징_0"},{"heading":"파일구성","level":1,"id":"파일구성_0"},{"heading":"패키지란...","level":3,"id":"패키지란..._0"}],"links":[],"author":"","coverImageURL":"500-모바일개발/android/assets/3_코틀린-20241221220802352.png","fullURL":"500-모바일개발/android/3_코틀린.html","pathToRoot":"../..","attachments":["500-모바일개발/android/assets/3_코틀린-20241221220802352.html"],"createdTime":1734720569410,"modifiedTime":1734859982468,"sourceSize":768,"sourcePath":"500-모바일개발/android/3_코틀린.md","exportPath":"500-모바일개발/android/3_코틀린.html","showInTree":true,"treeOrder":250,"backlinks":[],"type":"markdown"},"500-모바일개발/android/4_화면-구성.html":{"title":"4_화면 구성","icon":"","description":"\n이전에 말했듯 액티비티로 화면를 만든다.\n모든 앱에 화면이 있는건아니고 백그라운드에서만 실행하는 앱을 개발할 수도 있다.\n화면와 액티비티가 꼭 1대1 대응되어야하는건아니다. 프래그먼트와 컴포즈를 이용하면 화면이 여러개여도 하나의 액티비티로 만들 수 있다. 화면을 구성하기위해서는 2가지 방법으로 구분할 수 있다. 코드\nimport android.graphics.Typeface // 글꼴 커스터마이징하는데 사용\nimport androidx.appcompat.app.AppCompatActivity //activity종류중하나\n//액티비티간 데이터 전송에쓰임. 생명주기관련된 상태정보 저장 복원\nimport android.os.Bundle import android.view.Gravity // ui의 정렬옵션 설정 // view내부의 레이아웃 설정 WRAP_CONTENT 자식뷰의 위치를 지정하는데 사용\nimport android.view.ViewGroup.LayoutParams.WRAP_CONTENT // 뷰클래스들\nimport android.widget. ImageView\nimport android.widget.LinearLayout import android.widget.TextView // 다양한 안드로이드 버전에서 일관된 방식으로 리소스에 접근할 수 있게 해줌,\n// 일종의 도우미 클래스\nimport androidx.core.content.ContextCompat class MainActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) // 이름 문자열 출력 TextView 생성 val name = TextView(this).apply { typeface = Typeface.DEFAULT._BOLD text = \"Lake Louise\" ｝ // 이미지 출력 ImageVieW 생성 val image = ImageView(this).also { it.setImageDrawable(ContextCompat.getDrawable(this, R.drawable.lake_1)) ｝ // 주소 문자열 출력 TextView 생성 val address = TextView(this).apply { typeface = Typeface. DEFAULT_BOLD text = \"Lake Louise, AB, 캐나다\" } val layout = LinearLayout(this).apply { orientation = LinearLayout.VERTICAL gravity = Gravity. CENTER // LinearLayout 객체에 TextView, ImageView, TextView 객체 추가 addView(name, WRAP_CONTENT, WRAP _CONTENT) addView(Image, WRAP_CONTENT, WRAP_CONTENT) addView(address, WRAP_CONTENT, WRAP_CONTENT) ｝ // LinearLayout 객체를 화면에 출력 setContentView (layout) }\n｝ import된건 패키지들(클래스)이다 같은 패키지는 한클래스로 묶이기때문에 같은말같다.. AppCompatActivity Activity를 상속한 클래스\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://hongbeomi.medium.com/appcompatactivity-%ED%8C%8C%ED%97%A4%EC%B9%98%EA%B8%B0-4ed4fc231899\" target=\"_self\">https://hongbeomi.medium.com/appcompatactivity-%ED%8C%8C%ED%97%A4%EC%B9%98%EA%B8%B0-4ed4fc231899</a> 리소스에 접근 하는게 context관련 작업인것으로 보임 코틀린에서는 마지막 인자가 람다함수면 마지막인자만!! 소괄호를 생략할 수 있음 코드\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android: layout_width=\"match_parent\" android: layout_height=\"match_parent\" android:orientation=\"vertical\" android:gravity=\"center\"› &lt;TextView android: layout_width=\"wrap_content\" android: layout_height=\"wrap_content\" android:textStyle=\"bold\" android: text=\"Lake Louise\" /&gt; &lt;ImageView android: layout_width=\"wrap_content\" android: layout_height=\"wrap_content\" android:src=\"@drawable/lake_1\" /› &lt;TextView android: layout_width=\"wrap_content\" android: layout_height=\"wrap_content\" android:textStyle=\"bold\" android: text=\"Lake Louise, AB, 캐나다\" /&gt;\n&lt;/LinearLayout&gt; 액티비티에서 setContentView(R.layout.activity_main) 을 이용하여서 해당 xml을출력할 수 있다.\nhtml스러움ㅇㅇ\n일반적으로 화면 구현할땐 xml이용 액티비티안에서 구현하면 ui부분코드와 데이터와 연결하는 코드와 섞여서 가독성이 구려짐 <br><img alt=\"assets/4_화면 구성-20241223010710073.png\" src=\"500-모바일개발/android/assets/4_화면-구성-20241223010710073.png\" target=\"_self\" style=\"width: 600px; max-width: 100%;\">\nView : 모든 뷰의 최상위 클래스 액티비티는 View의 서브클래스만 화면에 출력\n일반적인 뷰 들.. : TextView, ImageView,Button,CheckBox,RadioButton, RadioGroup, EditText ViewGroup : 다른 뷰 여러개를 묶어서 제어할 목적으로 사용 자체 ui 없음\n정렬이나 컨테이너박스역할할 듯(레이아웃담당) 여러 객체를 중첩해서 많이 사용\n이렇게 중첩되서 계층구조를 만들어 이용하는 패턴을 다음과 같이 말함 컴퍼지트패턴\n문서객체모델 LinearLayout : 선형배치 orientation속성 : horizontal,vertical\nflutter의 row,column객체같은... RelativeLayout: 간단한 상대적 배치가 필요할 때.\nFrameLayout: 단일 뷰를 표시하거나 뷰를 겹쳐야 할 때.\nGridLayout: 행과 열 기반의 정렬이 필요할 때.\nConstraintLayout: 복잡한 UI를 효율적으로 설계할 때. xml 기준으로 설명..\n형태: android:{속성}=\"값\"\n값이 여러개일 때는 |를 이용한다\nsnake_case, camelCase기준을 모르겠다\n지금까지 본 바로는 state,layout있으면 snake_case인 것 같다. id xml선언객체를 코드에서 이용할때 사용\n구별할 필요가잇을때 사용\nandroid:id = \"@+id/someid\" , someid가 id값 R.java파일에 상수변수로 자동으로 추가됨. 객체 획득 findViewById(R.id.someid) 이렇게 가능 제네릭으로 명시도 가능 findViewById&lt;TextView&gt;(R.id.someid) 뷰바인딩 gradle에서 android{viewBinding.isEnabled = true} 해줘야 사용가능\n이러면 xml하나당 바인딩클래스가 자동으로 만들어짐\ntools:viewBindingIgnore=\"true\" 속성을 이용하면 해당 xml의 바인딩 클래스가 만들어지지않음 src : 주로 이미지에서 소스를 나태낼때 사용 주로 리소스에서 가저옴 ex) `src = \"@drawable/image3 layout_width , layout_height : 넓이,높이 수치이용 : 단위 px,dp 등\nmatch_parent : 부모의 전체크기에 맞게\nwrap_content : 내부 컨텐츠의 크기에 맞게 layout_weigth : 여백을 채운다 값 숫자\ncss에서는 flex-grow느낌, flutter에서는 expand느낌 width,height\npadding , layout_margin : 패딩과 마진 (4방향다) Left,Right,Top,Bottom 을 뒤에붙이면 특정방향만설정가능 ex) paddingLeft visibility : 보이는지 visible : 보인다\ninvisible : 안보인다 but 자리차지 (css에서 display:hidden)\ngone : 안보이고 자리도 안차지 ( css에서 display:none) maxWidth, maxHeight : max넓이 높이 이미지에서 adjustViewBounds 속성과 함께 사용사용해야함 true값을 넣을시 가로세로 길이 비례해 뷰의 크기를 맞춤 gravity: 내부에서의 정렬 Center등 다양한 값이 올 수 있음\n주로 LinearLayout에서 많이 쓰이는 것 같음\ndefault : Left|Top\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://freehoon.tistory.com/24\" target=\"_self\">https://freehoon.tistory.com/24</a> 속성이름과 해당하는 값이 너무 명확한 경우 설명이 없을 수 있음 text : 출력할 문자열\ntextColor\ntextSize : 크기(단위:px,dp,sp) <br>디스플레이 단위 차이 : <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://brunch.co.kr/@zalhanilll/407\" target=\"_self\">https://brunch.co.kr/@zalhanilll/407</a>\n주로 텍스트에서는 sp를 씀(유저가 커스텀가능) textStyle : bold, italic, normal\nautoLink : 문자열을 분석해해 자동링크를 추가해 준다 web,phone,email\n| 을 통해 여러개 설정가능 (web|phone) maxLines : 1일때는 singleLine=\"true\"를 이용하여도 된다. 처음엔 한줄로 입력크기 출력됨 lines : 처음부터 여러줄로 입력크기 출력됨\n이 line관련되서 edit입력 text쪽에서는 크기가 늘어나진 않지만 입력이 늘어나면 스크롤 된다.\ninputType : phone, text<br>\n<img alt=\"assets/4_화면 구성-20241224000559232.png\" src=\"500-모바일개발/android/assets/4_화면-구성-20241224000559232.png\" target=\"_self\" style=\"width: 300px; max-width: 100%;\">\nellipsize : 초과햇을때...형태로 나타내며 이의 위치를 값으로 설정한다. start,middle : singleLine=\"true\"일때만 가능\nend : 출력할 Line의 제한만 있으면됨 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"기본 구성 방법","level":1,"id":"기본_구성_방법_0"},{"heading":"엑티비티 내부에서 코틀린으로 구현하는 방법","level":2,"id":"엑티비티_내부에서_코틀린으로_구현하는_방법_0"},{"heading":"xml을 이용하여 구현","level":2,"id":"xml을_이용하여_구현_0"},{"heading":"뷰클래스","level":1,"id":"뷰클래스_0"},{"heading":"ViewGroup","level":2,"id":"ViewGroup_0"},{"heading":"다양한 속성","level":1,"id":"다양한_속성_0"},{"heading":"기본 &amp; 레이아웃 관련","level":2,"id":"기본_&_레이아웃_관련_0"},{"heading":"택스트 관련","level":2,"id":"택스트_관련_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"500-모바일개발/android/4_화면-구성.html","pathToRoot":"../..","attachments":["500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","500-모바일개발/android/assets/4_화면-구성-20241224000559232.html"],"createdTime":1734877871074,"modifiedTime":1735181073608,"sourceSize":8218,"sourcePath":"500-모바일개발/android/4_화면 구성.md","exportPath":"500-모바일개발/android/4_화면-구성.html","showInTree":true,"treeOrder":251,"backlinks":[],"type":"markdown"},"500-모바일개발/android/5_미래.html":{"title":"5_미래","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/android/5_미래.html","pathToRoot":"../..","attachments":[],"createdTime":1734880838050,"modifiedTime":1734880838050,"sourceSize":0,"sourcePath":"500-모바일개발/android/5_미래.md","exportPath":"500-모바일개발/android/5_미래.html","showInTree":true,"treeOrder":252,"backlinks":[],"type":"markdown"},"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html":{"title":"스크린샷 2024-03-16 오전 1.10.05","icon":"","description":"<img src=\"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html","pathToRoot":"../..","attachments":["500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html"],"createdTime":1710519023230,"modifiedTime":1710519023230,"sourceSize":454428,"sourcePath":"500-모바일개발/assets/스크린샷 2024-03-16 오전 1.10.05.png","exportPath":"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html","showInTree":true,"treeOrder":254,"backlinks":["500-모바일개발/결과처리.html"],"type":"attachment"},"500-모바일개발/결과처리.html":{"title":"결과처리","icon":"","description":"<img alt=\"assets/스크린샷 2024-03-16 오전 1.10.05.png\" src=\"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"500-모바일개발/결과처리.html","pathToRoot":"..","attachments":["500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html"],"createdTime":1710519011034,"modifiedTime":1710519025239,"sourceSize":54,"sourcePath":"500-모바일개발/결과처리.md","exportPath":"500-모바일개발/결과처리.html","showInTree":true,"treeOrder":255,"backlinks":[],"type":"markdown"},"500-모바일개발/네트워크-환경-체크.html":{"title":"네트워크 환경 체크","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=-MK4eCjAOMg\" target=\"_self\">https://www.youtube.com/watch?v=-MK4eCjAOMg</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/네트워크-환경-체크.html","pathToRoot":"..","attachments":[],"createdTime":1710518704393,"modifiedTime":1710518713633,"sourceSize":43,"sourcePath":"500-모바일개발/네트워크 환경 체크.md","exportPath":"500-모바일개발/네트워크-환경-체크.html","showInTree":true,"treeOrder":256,"backlinks":[],"type":"markdown"},"500-모바일개발/만들면서한-고민.html":{"title":"만들면서한 고민","icon":"","description":"\nuserstate를 loading클래스를 만들어야할까?\ntab마냥 위에잇는건 좌우스크롤을 할 수 있는게 편하다.\n바텀네비는 스크롤안해도상관없다.\n뒤에도 scrollabe하게 만들려면 head_content파트를 만드는게 맞는듯?\n근데이러면 tab처럼 한페이지 내에서 컨트롤하는거 만들기 매우 귀찮아 짐.ㅋ.어노테이션을 상요하는게 유용한가?","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/만들면서한-고민.html","pathToRoot":"..","attachments":[],"createdTime":1710477870974,"modifiedTime":1712103062207,"sourceSize":422,"sourcePath":"500-모바일개발/만들면서한 고민.md","exportPath":"500-모바일개발/만들면서한-고민.html","showInTree":true,"treeOrder":257,"backlinks":[],"type":"markdown"},"500-모바일개발/빌드-관련명령어.html":{"title":"빌드 관련명령어","icon":"","description":"%% 수정 %%\ndart fix --apply %% 빌드 %%\nflutter build apk --release --target-platform=android-arm64\n₩\nflutter build apk --debug --target-platform=android-arm64 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/빌드-관련명령어.html","pathToRoot":"..","attachments":[],"createdTime":1711454722466,"modifiedTime":1732891223030,"sourceSize":178,"sourcePath":"500-모바일개발/빌드 관련명령어.md","exportPath":"500-모바일개발/빌드-관련명령어.html","showInTree":true,"treeOrder":258,"backlinks":[],"type":"markdown"},"500-모바일개발/앱에서의-데이터-사용과-구현.html":{"title":"앱에서의 데이터 사용과 구현","icon":"","description":"클라이언트 단에서 데이터는 크게 2가지로 분류할 수 있다고 생각한다\n상태관리(구독이 필요한) 데이터\n그렇지않아도 되는데이터\n그리고 1,2 의 사용되는 범위에 따라 다음과 같이 구현될 수 있다.\n1-1 전역상태관리\n1-2 기본상태관리\n2-1 전역변수/클래스가있다\n2-2 변수이중 1-2 들은 너무 햇갈리니까\n전역상태되야할것들 여러페이지에서 반복되게사용한는것\n반복되게 사용하면서 ui가 이 데이터의 변경을 알아채야하는 것\n전역상태관리tool을사용하면 구간과dispose해야할 것을 신경써야함..\n그리고 커스텀할때 각각의상태관리 툴을 깊게 이해하고 라이브러리를 분석하는데 시간을 써야하햇다.\n골때림\n그래서 최대한전역상태관리를 안쓰려고햇다.\n이렇게하는게 추후에 확인햇을때 전역적으로관리해야할 데이터를 한눈에 확인할수있어서좋앗다.데이터로직과 ui로직을 분리하기위해서 전역상태관리를 쓸 수 도있다.\n예를 들면 riverpod같은경우 autodispose를 써서 해당 데이터를 쓰이지 않을때 자동으로 dispose된다 약간 GC가생각나기도하고\n근데 일단 저의 생각에는 프론트엔드나 앱에서 완전히 데이터와 ui가 분리될 수 없고 매우 복잡한 경우가 아니라면 각 위젯에서 처리하는게 직관적이고 덜 복잡하다고 생각한다.2 전역변수\n나는일단 전역변수는 다 클래스로 묶어서 사용햇다\n카테고리별로분류할 수있고 보통 ide를 이용하기에 .하면 변수들을 보여주어 실수할 확률을 줄여준다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/앱에서의-데이터-사용과-구현.html","pathToRoot":"..","attachments":[],"createdTime":1740306219713,"modifiedTime":1740307301396,"sourceSize":1704,"sourcePath":"500-모바일개발/앱에서의 데이터 사용과 구현.md","exportPath":"500-모바일개발/앱에서의-데이터-사용과-구현.html","showInTree":true,"treeOrder":259,"backlinks":[],"type":"markdown"},"500-모바일개발/키스토어-명령어들.html":{"title":"키스토어 명령어들","icon":"","description":"# 키스토어 리스트\nkeytool -list -v -keystore ~/.android/watso.jks # 키스토어 sha1값 base64로 인코딩된..\n# oauth할때 주로 쓰임\nkeytool -exportcert -alias releasekey -keystore ~/.android/watso.jks -storepass {비번} -keypass {비번} | openssl sha1 -binary | openssl base64\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/키스토어-명령어들.html","pathToRoot":"..","attachments":[],"createdTime":1734609693939,"modifiedTime":1734609836764,"sourceSize":305,"sourcePath":"500-모바일개발/키스토어 명령어들.md","exportPath":"500-모바일개발/키스토어-명령어들.html","showInTree":true,"treeOrder":260,"backlinks":[],"type":"markdown"},"500-모바일개발/annotion.html":{"title":"annotion","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://nx006.tistory.com/69\" target=\"_self\">https://nx006.tistory.com/69</a>\n코드제너레이션의 장단점<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://stackoverflow.com/questions/77277048/problem-using-riverpod-code-generation-in-dart-addlistener\" target=\"_self\">https://stackoverflow.com/questions/77277048/problem-using-riverpod-code-generation-in-dart-addlistener</a>코드 제너레이션<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://nx006.tistory.com/69\" target=\"_self\">https://nx006.tistory.com/69</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/annotion.html","pathToRoot":"..","attachments":[],"createdTime":1712060630178,"modifiedTime":1712540216778,"sourceSize":222,"sourcePath":"500-모바일개발/annotion.md","exportPath":"500-모바일개발/annotion.html","showInTree":true,"treeOrder":261,"backlinks":[],"type":"markdown"},"500-모바일개발/asyncvalue-vs-asyncdata.html":{"title":"AsyncValue vs AsyncData","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/rrousselGit/riverpod/discussions/1535\" target=\"_self\">https://github.com/rrousselGit/riverpod/discussions/1535</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/asyncvalue-vs-asyncdata.html","pathToRoot":"..","attachments":[],"createdTime":1712296272881,"modifiedTime":1712296275336,"sourceSize":56,"sourcePath":"500-모바일개발/AsyncValue vs AsyncData.md","exportPath":"500-모바일개발/asyncvalue-vs-asyncdata.html","showInTree":true,"treeOrder":262,"backlinks":[],"type":"markdown"},"500-모바일개발/dart-3.0.html":{"title":"dart 3.0","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@s_soo100/Flutter-Dart-3.0-Patterns-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" target=\"_self\">https://velog.io/@s_soo100/Flutter-Dart-3.0-Patterns-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/dart-3.0.html","pathToRoot":"..","attachments":[],"createdTime":1710427681334,"modifiedTime":1710427685279,"sourceSize":89,"sourcePath":"500-모바일개발/dart 3.0.md","exportPath":"500-모바일개발/dart-3.0.html","showInTree":true,"treeOrder":263,"backlinks":[],"type":"markdown"},"500-모바일개발/enum.html":{"title":"enum","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ctoahn.tistory.com/27\" target=\"_self\">https://ctoahn.tistory.com/27</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/enum.html","pathToRoot":"..","attachments":[],"createdTime":1712294703152,"modifiedTime":1712294710339,"sourceSize":31,"sourcePath":"500-모바일개발/enum.md","exportPath":"500-모바일개발/enum.html","showInTree":true,"treeOrder":264,"backlinks":[],"type":"markdown"},"500-모바일개발/flavor-빌드-변형.html":{"title":"flavor 빌드 변형","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@tygerhwang/FlutterIOSAndroid-Flavor-%EB%B9%8C%EB%93%9C-%EB%B3%80%ED%98%95-Firebase-Naver-Kakao-Apple-Google-GCP-API-App-Icon\" target=\"_self\">https://velog.io/@tygerhwang/FlutterIOSAndroid-Flavor-%EB%B9%8C%EB%93%9C-%EB%B3%80%ED%98%95-Firebase-Naver-Kakao-Apple-Google-GCP-API-App-Icon</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/flavor-빌드-변형.html","pathToRoot":"..","attachments":[],"createdTime":1717063393710,"modifiedTime":1717063412276,"sourceSize":143,"sourcePath":"500-모바일개발/flavor 빌드 변형.md","exportPath":"500-모바일개발/flavor-빌드-변형.html","showInTree":true,"treeOrder":265,"backlinks":[],"type":"markdown"},"500-모바일개발/flutter-future.html":{"title":"flutter future","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://jinhan38.com/151\" target=\"_self\">https://jinhan38.com/151</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/flutter-future.html","pathToRoot":"..","attachments":[],"createdTime":1710223480430,"modifiedTime":1710223485666,"sourceSize":24,"sourcePath":"500-모바일개발/flutter future.md","exportPath":"500-모바일개발/flutter-future.html","showInTree":true,"treeOrder":266,"backlinks":[],"type":"markdown"},"500-모바일개발/flutter-mvvm.html":{"title":"flutter mvvm","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://ctoahn.tistory.com/15\" target=\"_self\">https://ctoahn.tistory.com/15</a><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.naver.com/islove8587/220602340150\" target=\"_self\">https://blog.naver.com/islove8587/220602340150</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/flutter-mvvm.html","pathToRoot":"..","attachments":[],"createdTime":1709556154326,"modifiedTime":1710686408685,"sourceSize":77,"sourcePath":"500-모바일개발/flutter mvvm.md","exportPath":"500-모바일개발/flutter-mvvm.html","showInTree":true,"treeOrder":267,"backlinks":[],"type":"markdown"},"500-모바일개발/freezed,jsonserialiable.html":{"title":"freezed,JsonSerialiable","icon":"","description":"flutter pub run build_runner build flutter pub run build_runner watch\ncustom\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://medium.com/@hasimyerlikaya/flutter-custom-datetime-serialization-with-jsonconverter-5f57f93d537\" target=\"_self\">https://medium.com/@hasimyerlikaya/flutter-custom-datetime-serialization-with-jsonconverter-5f57f93d537</a>@jsonkey<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@leeeeeoy/Flutter-Freezed-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0-2-feat.-Retrofit\" target=\"_self\">https://velog.io/@leeeeeoy/Flutter-Freezed-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0-2-feat.-Retrofit</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@hongstone/Flutter-jsonserializable-%EC%82%AC%EC%9A%A9%EB%B2%95\" target=\"_self\">https://velog.io/@hongstone/Flutter-jsonserializable-%EC%82%AC%EC%9A%A9%EB%B2%95</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/freezed,jsonserialiable.html","pathToRoot":"..","attachments":[],"createdTime":1710572391409,"modifiedTime":1710577948827,"sourceSize":391,"sourcePath":"500-모바일개발/freezed,JsonSerialiable.md","exportPath":"500-모바일개발/freezed,jsonserialiable.html","showInTree":true,"treeOrder":268,"backlinks":[],"type":"markdown"},"500-모바일개발/gorouter-기본사용법.html":{"title":"gorouter 기본사용법","icon":"","description":"<a href=\".?query=tag:flutter\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#flutter\">#flutter</a> <a href=\".?query=tag:페이지\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#페이지\">#페이지</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pitching-gap.tistory.com/entry/Flutter-Go-Router%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0\" target=\"_self\">https://pitching-gap.tistory.com/entry/Flutter-Go-Router%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0</a>with riverpod auth<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://medium.com/@madhanrkv10/authentication-using-gorouter-with-riverpod-state-management-bac9313f2afe\" target=\"_self\">https://medium.com/@madhanrkv10/authentication-using-gorouter-with-riverpod-state-management-bac9313f2afe</a>\n이게좋은듯!!<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/lucavenir/go_router_riverpod/blob/master/example/lib/state/auth_controller.dart\" target=\"_self\">https://github.com/lucavenir/go_router_riverpod/blob/master/example/lib/state/auth_controller.dart</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["?query=tag:flutter","?query=tag:%ED%8E%98%EC%9D%B4%EC%A7%80"],"author":"","coverImageURL":"","fullURL":"500-모바일개발/gorouter-기본사용법.html","pathToRoot":"..","attachments":[],"createdTime":1709554112995,"modifiedTime":1710426650972,"sourceSize":433,"sourcePath":"500-모바일개발/gorouter 기본사용법.md","exportPath":"500-모바일개발/gorouter-기본사용법.html","showInTree":true,"treeOrder":269,"backlinks":[],"type":"markdown"},"500-모바일개발/live-templete.html":{"title":"live templete","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@jsoh/Flutter-%EC%9A%A9-%EB%9D%BC%EC%9D%B4%EB%B8%8C-%ED%85%9C%ED%94%8C%EB%A6%BF\" target=\"_self\">https://velog.io/@jsoh/Flutter-%EC%9A%A9-%EB%9D%BC%EC%9D%B4%EB%B8%8C-%ED%85%9C%ED%94%8C%EB%A6%BF</a><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gravel-pike-705.notion.site/Flutter-Live-Templeate-579bac3070754bdf8fa10afe4ebe8c92\" target=\"_self\">https://gravel-pike-705.notion.site/Flutter-Live-Templeate-579bac3070754bdf8fa10afe4ebe8c92</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/live-templete.html","pathToRoot":"..","attachments":[],"createdTime":1710481372472,"modifiedTime":1710517986328,"sourceSize":190,"sourcePath":"500-모바일개발/live templete.md","exportPath":"500-모바일개발/live-templete.html","showInTree":true,"treeOrder":270,"backlinks":[],"type":"markdown"},"500-모바일개발/private,-protected.html":{"title":"private, protected","icon":"","description":"Dart에서 _(언더스코어)와 @protected의 차이점을 설명해드릴게요:\n_ (언더스코어) 파일 단위의 private\n같은 파일 내에서만 접근 가능\n상속받은 클래스에서도 접근 불가\n// file1.dart\nclass Parent { void _privateMethod() {} // 같은 파일에서만 접근 가능\n} // file2.dart\nclass Child extends Parent { void someMethod() { _privateMethod(); // 에러! 접근 불가 }\n} @protected 라이브러리 단위의 접근 제어\n같은 라이브러리 내의 다른 파일에서도 접근 가능\n상속받은 클래스에서도 접근 가능\n// file1.dart\nclass Parent { @protected void protectedMethod() {} // 같은 라이브러리 내에서 접근 가능\n} // file2.dart (같은 라이브러리)\nclass Child extends Parent { void someMethod() { protectedMethod(); // 가능! }\n}\n우리 코드에서는 _processSensorData를 @protected로 한 이유는:\nMock 클래스에서 이 메서드를 사용해야 하기 때문\n하지만 외부 라이브러리에서는 이 메서드를 직접 호출하면 안 되기 때문\n그래서 _ 대신 @protected를 사용했어요.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/private,-protected.html","pathToRoot":"..","attachments":[],"createdTime":1749144425223,"modifiedTime":1749144439840,"sourceSize":1204,"sourcePath":"500-모바일개발/private, protected.md","exportPath":"500-모바일개발/private,-protected.html","showInTree":true,"treeOrder":271,"backlinks":[],"type":"markdown"},"500-모바일개발/riverpod-annotation.html":{"title":"riverpod annotation","icon":"","description":"family@riverpod Future&lt;TMDBMovie&gt; movie( MovieRef ref, { required int movieId, }) { return ref .watch(moviesRepositoryProvider) .movie(movieId: movieId); }\nnotifiyprovider\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://codewithandrea.com/articles/flutter-riverpod-async-notifier/\" target=\"_self\">https://codewithandrea.com/articles/flutter-riverpod-async-notifier/</a>notifiyprovider and test<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://q.agency/blog/migrating-from-statenotifier-to-notifier-in-riverpod-2-0-with-unit-tests/\" target=\"_self\">https://q.agency/blog/migrating-from-statenotifier-to-notifier-in-riverpod-2-0-with-unit-tests/</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/riverpod-annotation.html","pathToRoot":"..","attachments":[],"createdTime":1710609011291,"modifiedTime":1712296196485,"sourceSize":388,"sourcePath":"500-모바일개발/riverpod annotation.md","exportPath":"500-모바일개발/riverpod-annotation.html","showInTree":true,"treeOrder":272,"backlinks":[],"type":"markdown"},"500-모바일개발/riverpod-read-listen.html":{"title":"riverpod read listen","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://anpigon.tistory.com/359\" target=\"_self\">https://anpigon.tistory.com/359</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/riverpod-read-listen.html","pathToRoot":"..","attachments":[],"createdTime":1710613013563,"modifiedTime":1710613028358,"sourceSize":33,"sourcePath":"500-모바일개발/riverpod read listen.md","exportPath":"500-모바일개발/riverpod-read-listen.html","showInTree":true,"treeOrder":273,"backlinks":[],"type":"markdown"},"500-모바일개발/user에-로딩-state가-있어야하는가!.html":{"title":"user에 로딩 state가 있어야하는가!","icon":"","description":"흠 잇어야한다. 왜 splash 스크린\n-&gt; 로딩화면 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"500-모바일개발/user에-로딩-state가-있어야하는가!.html","pathToRoot":"..","attachments":[],"createdTime":1710426718748,"modifiedTime":1710426748953,"sourceSize":59,"sourcePath":"500-모바일개발/user에 로딩 state가 있어야하는가!.md","exportPath":"500-모바일개발/user에-로딩-state가-있어야하는가!.html","showInTree":true,"treeOrder":274,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html":{"title":"작성형식-20250220033159798","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/assets/작성형식-20250220033159798.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html"],"createdTime":1739989919782,"modifiedTime":1739989919816,"sourceSize":364981,"sourcePath":"600-알고리즘 & 코딩테스트/assets/작성형식-20250220033159798.png","exportPath":"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html","showInTree":true,"treeOrder":277,"backlinks":["600-알고리즘-&-코딩테스트/작성형식.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html":{"title":"graph-20240831020857057","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/assets/graph-20240831020857057.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html"],"createdTime":1725037737003,"modifiedTime":1725037737003,"sourceSize":11239,"sourcePath":"600-알고리즘 & 코딩테스트/assets/graph-20240831020857057.png","exportPath":"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html","showInTree":true,"treeOrder":278,"backlinks":["600-알고리즘-&-코딩테스트/theory/graph.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html":{"title":"Pasted image 20240216101645","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/assets/pasted-image-20240216101645.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html"],"createdTime":1708046205406,"modifiedTime":1708046205406,"sourceSize":136798,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240216101645.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","showInTree":true,"treeOrder":279,"backlinks":["600-알고리즘-&-코딩테스트/1613-역사.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html":{"title":"Pasted image 20240216102426","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/assets/pasted-image-20240216102426.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html"],"createdTime":1708046666771,"modifiedTime":1708046666771,"sourceSize":155677,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240216102426.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html","showInTree":true,"treeOrder":280,"backlinks":["600-알고리즘-&-코딩테스트/1613-역사.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html":{"title":"Pasted image 20240716094012","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/assets/pasted-image-20240716094012.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html"],"createdTime":1721133947612,"modifiedTime":1721133947612,"sourceSize":6599,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240716094012.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html","showInTree":true,"treeOrder":281,"backlinks":["600-알고리즘-&-코딩테스트/lis.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html":{"title":"테트리스, 퍼즐-20240904165402122","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html","pathToRoot":"../../..","attachments":["600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html"],"createdTime":1725436442051,"modifiedTime":1725436442051,"sourceSize":33338,"sourcePath":"600-알고리즘 & 코딩테스트/concept/assets/테트리스, 퍼즐-20240904165402122.png","exportPath":"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html","showInTree":true,"treeOrder":284,"backlinks":["600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html":{"title":"테트리스, 퍼즐","icon":"","description":"<a class=\"internal-link\" data-href=\"../theory/bfs,dfs.md\" href=\"600-알고리즘-&amp;-코딩테스트/theory/bfs,dfs.html\" target=\"_self\" rel=\"noopener nofollow\">bfs,dfs</a>dfs로 주로 푼다\n조각(스탭)의 개수가 같나?\n각 스탭마다 이동을 주어 모양을 만든다\n한붓그리기가 되는 모양과 안되는 모양간의 차이점이있다.\n한붓그리기가 되는가.\n되면 걍 다음index를 넘기는 식으로 하면되는데 안되면 저런식으로 방문한 자신을 담은 list를 줘야함. 그리고 이동하고 이동한값이 리스트에 없으면 담음파이썬에러 ValueError(index함수썻을때) IndexError (리스트초과)<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/217631\" target=\"_self\">https://wikidocs.net/217631</a><br>\n<img src=\"600-알고리즘-&amp;-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png\" target=\"_self\">회전만 가능한경우는 테이블자체를 회전하는것이 좋다.\n시계방향 90도\nlist(map(list, zip(*array [: : -1 ]))) 반시계방향 90도 list(map(list, zip(*array)))[: :-1]\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"회전","level":3,"id":"회전_0"}],"links":["600-알고리즘-&-코딩테스트/theory/bfs,dfs.html"],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html"],"createdTime":1725430075818,"modifiedTime":1726050962557,"sourceSize":861,"sourcePath":"600-알고리즘 & 코딩테스트/concept/테트리스, 퍼즐.md","exportPath":"600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","showInTree":true,"treeOrder":285,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html":{"title":"b_평범한배낭_12865-20240906191158114","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html","pathToRoot":"../../..","attachments":["600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html"],"createdTime":1725617518039,"modifiedTime":1725617518040,"sourceSize":667167,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html","showInTree":true,"treeOrder":288,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html"],"type":"attachment"},"600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html":{"title":"p_지게차와 크레인_388353","icon":"","description":"<a class=\"internal-link\" data-href=\"../../theory/bfs,dfs.md\" href=\"600-알고리즘-&amp;-코딩테스트/theory/bfs,dfs.html\" target=\"_self\" rel=\"noopener nofollow\">bfs,dfs</a><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/388353\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/388353</a>\n물류창고에 짐을빼냄\n다빼는경우가잇고\n겉에꺼만빼내는경우가 잇음\n겉에꺼 확인시 변경중는 변경사항이 반영되면안됨\n1. deepcopy를 이용하여 복제\n에러 사항 빈공간이 안에 뚤려잇을때 (도넛형태)\n이를계속 돌아 메모리초과 에러가낫었음\n방문처리해주면해결됨\nimport copy def solution(storage, requests): ylimit =len(storage) xlimit = len(storage[0]) answer = ylimit * xlimit for i in range(ylimit): storage[i] = list(storage[i]) # print(answer) for re in requests: if len(re) &gt; 1: storage,num = takeAll(storage,re[0],ylimit,xlimit) else: storage,num = takeOutSide(storage,re[0],ylimit,xlimit) answer -= num # print(answer) # print(storage) return answer def takeAll(storage,ch,ylim,xlim): cnt = 0 for i in range(ylim): for j in range(xlim): if storage[i][j] == ch: cnt += 1 storage[i][j] = \" \" return [storage,cnt] def takeOutSide(storage,ch,ylim,xlim): cnt = 0 tstorage= [] for i in range(ylim): tstor = copy.deepcopy(storage[i]) for j in range(xlim): if tstor[j] == ch: tmp = checkIsOut(copy.deepcopy(storage),i,j,ylim,xlim) if tmp: tstor[j] = \" \" cnt += 1 tstorage.append(tstor) storage = tstorage return [storage,cnt] def checkIsOut(storage,y,x,ylim,xlim): move =[[0,1],[0,-1],[1,0],[-1,0]] if y == 0 or y == ylim-1 or x == 0 or x == xlim-1: return True for m in move: dy = y + m[0] dx = x + m[1] if storage[dy][dx] == \" \": # print(\"\") # 사이클될수도잇을듯 storage[dy][dx] = \"_\" tmp = checkIsOut(storage,dy,dx,ylim,xlim) if tmp: return True return False\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":["600-알고리즘-&-코딩테스트/theory/bfs,dfs.html"],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html","pathToRoot":"../../..","attachments":[],"createdTime":1739866497759,"modifiedTime":1739867385185,"sourceSize":2166,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/p_지게차와 크레인_388353.md","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html","showInTree":true,"treeOrder":289,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html":{"title":"s_탑의 높이-20250207041323608","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html","pathToRoot":"../../..","attachments":["600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html"],"createdTime":1738869203591,"modifiedTime":1738869212273,"sourceSize":7325089,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/s_탑의 높이-20250207041323608.png","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html","showInTree":true,"treeOrder":290,"backlinks":[],"type":"attachment"},"600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html":{"title":"b_계단 오르기_2579","icon":"","description":"한번에 1,2 jump 가능\n연속된 3개 불가\n마지막껀 반드시밟아야\n애를밟앗을때가장높은점수\n애를안밟았을때 가장 높은점수\n약간 다이나믹프로그래믹\ndfs로 모두 모두 다 탐색하는 일종의 브루드포스로 풀어보았다.\n당연히 시간초과가 났다\nimport sys n = int(sys.stdin.readline().strip())\nstair = []\nfor i in range(n): stair.append(int(sys.stdin.readline().strip())) result = 0 def dfs(i,visited,value): global result # print(i,visited,value,result) canVisit = True if i&gt;=n: if bool(visited[i-1]): # print(\"비교!\") result=max(result,value) return if i&gt;1: canVisit = not (bool(visited[i-1] &amp; visited[i-2])) if canVisit: visited[i]=1 dfs(i+1,visited,value+stair[i]) visited[i]=0 dfs(i+1,visited,value) init_visit = [0]*n\ndfs(0,init_visit,0)\nprint(result) 다이나믹 프로그래밍방식으로 풀었다.\n0-안밟음,1-밟음밟을 수 있는 경우의 수\n101\n110\n011\n010\n100, 001, 000 은 당연히 101,010 보다 클 수 없으므로 제외햇다.\n그다음의 경우의 수\n101 - 이전 110 or 010\n110 - 이전 011\n011 - 이전 101\n010 - 이전 101import sys n = int(sys.stdin.readline().strip())\nstair = []\nfor i in range(n): stair.append(int(sys.stdin.readline().strip())) def get_point(i,arr): # print(i,arr) global stair global n if i &gt;= n-2: return max(arr[i-1][0],arr[i-1][2]) # i는 -2한거임 arr[i][0]= max(arr[i-1][1]+stair[i+2],arr[i-1][3]+stair[i+2]) arr[i][1]= arr[i-1][2] arr[i][2]= arr[i-1][0]+stair[i+2] arr[i][3]= arr[i-1][0] return get_point(i+1,arr) def solution(): global n global stair if n&lt;3: return sum(stair) arr = [[0]*4 for _ in range(n-2)] arr[0][0]= stair[0]+stair[2] arr[0][1]= stair[0]+stair[1] arr[0][2]= stair[1]+stair[2] arr[0][3]= stair[1] return get_point(1,arr) print(solution()) 다른 풀이\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://bio-info.tistory.com/158\" target=\"_self\">https://bio-info.tistory.com/158</a>\n점화식으로 풀엇다 나처럼 경우의 수를 직접지정하지않고\n항상 마지막 stair을 밟는다고 정하고 점화식을 설계하였다 ","aliases":[],"inlineTags":[],"frontmatterTags":["#DFS","#브루트포스","#시간초과","#다이나믹프로그래밍","#Python","#계단문제","#연속3개제한","#마지막계단필수","#12점프","#재귀"],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"풀이 1","level":3,"id":"풀이_1_0"},{"heading":"풀이2","level":3,"id":"풀이2_0"},{"heading":"풀이3","level":3,"id":"풀이3_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","pathToRoot":"../..","attachments":[],"createdTime":1757691040685,"modifiedTime":1757691657122,"sourceSize":2832,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_계단 오르기_2579.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","showInTree":true,"treeOrder":291,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html":{"title":"b_공유기설치_2110","icon":"","description":"집 N개\n집 같은 좌표 ㄴㄴ\n공유기 C개 설치하려고함\n최대한 많은곳에서 와이파이 사용하려고함\n가장인접한 공유기 사이의 거리를 가장크게하려고함dp라고생각했다. 응아니얌\n어디에 공유기 둘것인지 지정하지말고\n공유기 사이를 거리를 지정해야한다start = 1 # 공유기 거리 최소\nend = arr[-1] - arr[0] # 공유기 거리 최대\nresult = 0 # 재귀로 적절한 두 공유기 사이의 거리를 찾는다\nwhile (start &lt;= end): mid = (start + end) // 2 # 현재 공유기 거리 current = arr[0] count = 1 # 공유기 설치 몇 대 할 수 있는지 체크 for i in range(1, len(arr)): if arr[i] &gt;= current + mid: count += 1 current = arr[i] # 공유기 설치 수가 목표 보다 크면 공유기 사이 거리 늘림 if count &gt;= C: start = mid + 1 result = mid # 공유기 설치 수가 목표 보다 작으면 공유기 사이 거리 줄임 else: end = mid - 1 print(result)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","pathToRoot":"../..","attachments":[],"createdTime":1725679853888,"modifiedTime":1757347915114,"sourceSize":1342,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_공유기설치_2110.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","showInTree":true,"treeOrder":292,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html":{"title":"b_돌게임_9655","icon":"","description":"둘이서 즐기는게임~\n돌 n개, 1개 or 3개 가져갈 수 있음.\n마지막 돌가져가면 이김둘이한번에 돌을가지고갈 수 있는 2, 4, 6\n이다\n이건 베스킨라빈스 게임이랑 비슷하다.\n두번째 사람이 의도적으로 4를 맞출 수 있다.\n나머지가 1,3이면 먼저한사람이 이기고 나머지가 0,2면 다른사람이 이긴다.import sys n = int(sys.stdin.readline().strip())\nm = n%4\nif m == 1 or m ==3: print('SK')\nelse: print('CY')\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","pathToRoot":"../..","attachments":[],"createdTime":1725449391761,"modifiedTime":1757347917848,"sourceSize":782,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_돌게임_9655.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","showInTree":true,"treeOrder":293,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html":{"title":"b_등수구하기_1205","icon":"","description":"각노래마다 랭킹리스트.\n100, 90, 90, 80일 때 각각의 등수는 1, 2, 2, 4등\n몇등인지.\n랭킹리스트에올라갈 수 없을정도로 작음 -1\n입력\n점수수 , 새로운점수, 랭킹리스트 올라갈수 있는 수\n랭킹리스트단순 구현import sys\nn, ns, p = map(int,sys.stdin.readline().strip().split())\nscores = list(map(int,sys.stdin.readline().strip().split()))\n# 점수수 , 새로운점수, 랭킹리스트 올라갈수 있는 수\n# 랭킹리스트\nlens = len(scores) if lens &gt;= p and scores[lens-1]&gt;=ns: # 랭킹이 꽉차있고 마지막놈보다 작거나같을때 print(-1)\nelse: scores.append(ns) scores.sort(reverse=True) ans=scores.index(ns) print(ans+1)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","pathToRoot":"../..","attachments":[],"createdTime":1725536038719,"modifiedTime":1757347752392,"sourceSize":973,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_등수구하기_1205.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","showInTree":true,"treeOrder":294,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html":{"title":"b_비밀번호발음하기_4659","icon":"","description":"발음 가능한 패스워드를 만들어야함\naeiou 포함시켜야함\n모음 자음 3개연속오면안됨\n같은글자 연속 불가 but ee oo허용\nimport sys moem = ['a','e','i','o','u']\ndef check(value): # 연속된 케이스 채크 mtime = 0 jtime = 0 before = \"\" toggle = False for v in value: if before == v and before != 'e' and before != 'o': return False if v in moem: mtime +=1 jtime = 0 toggle = True else: jtime +=1 mtime = 0 if mtime&gt;2 or jtime &gt;2 : return False before = v if toggle: return True return False\ninput = \"\"\nans = \"\"\nwhile input != 'end': input = sys.stdin.readline().strip() if input =='end': break if check(input): ans += f\"&lt;{input}&gt; is acceptable.\\n\" else: ans += f\"&lt;{input}&gt; is not acceptable.\\n\" print(ans.strip())\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","pathToRoot":"../..","attachments":[],"createdTime":1725460009029,"modifiedTime":1757347929284,"sourceSize":1254,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_비밀번호발음하기_4659.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","showInTree":true,"treeOrder":295,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html":{"title":"b_비슷한단어_2607","icon":"","description":"구성이 같다 : 두단어가 같은 문자 ,각문자마다 개수도같음\n비슷하다 : 한문자를 더하거나 빼거나 하나를 다른문자하나로 바꾼경우.집합으로 하면 될 것같다 응안대 각 글자별로 개수 새야해서 딕셔너리로 했음\n길이의 개수가 작은경우에대한 조건이 부족햇음\n길이가 작은경우 무조건 하나의 문자를 추가해야하기에\n기존 문자에서 다 해결을 봐야함.import sys n = int(sys.stdin.readline().strip())\nsta_l = 0\nstand = {}\nans = 0\nfor i in range(n): tmp = sys.stdin.readline().strip() if i == 0: for t in tmp: if t in stand: stand[t] +=1 else: stand[t] =1 sta_l = len(tmp) # print(\"stand\",stand,sta_l) else: t_stand = stand.copy() wrong = 0 dif = sta_l - len(tmp) if dif &lt;2 and dif&gt;-2: for t in tmp: if t in t_stand and t_stand[t] &gt;0: t_stand[t]-=1 else: if dif == 1: wrong+=1 wrong+=1 if wrong&gt;1: break if wrong&lt;2: # print(\"비슷\",tmp) ans +=1\nprint(ans) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","pathToRoot":"../..","attachments":[],"createdTime":1725563711901,"modifiedTime":1757347935308,"sourceSize":1596,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_비슷한단어_2607.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","showInTree":true,"treeOrder":296,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html":{"title":"b_수레움직이기_250134","icon":"","description":"따라갈때문제가생김 무적건빨간색 먼저 움직이는 로직임.\"\"\"\nn*m크기\n시작&gt;도착\n각턴마다 상하좌우중인접한 한칸으로 움직여야함\n방문햇던곳갈수없음\n도착시 고정\n수레끼리 자라바꿀수없음(부딪히면안됨)\ndfs같은데용?\n\"\"\"\nimport math\nimport traceback def solution(maze): answer = [math.inf,len(maze)*len(maze[0])]# 빈칸 0 / 방문 빨,파 1,2/ def goBox(red_pos,blu_pos,red_dep,blu_dep,red_fin,blu_fin): # print(red_pos,blu_pos,red_dep,blu_dep,red_fin,blu_fin) turn = max(red_dep,blu_dep) red_clear = red_pos[0] == red_fin[0] and red_pos[1] == red_fin[1] blu_clear = blu_pos[0] == blu_fin[0] and blu_pos[1] == blu_fin[1] if turn&gt;answer[1]: return if red_clear and blu_clear: # print(\"도착!\",red_pos,blu_pos,turn) if turn &lt; answer[0]: answer[0] = turn return moves = [[0,1],[0,-1],[1,0],[-1,0]] for m in moves: if (red_dep&lt;=blu_dep or blu_clear) and not red_clear: tmp=ava_move(maze,red_pos,m,True) # 이동콛 if tmp: # red가움직임... bef,ny,nx = tmp if not (ny == blu_pos[0] and nx == blu_pos[1]): maze[ny][nx] = [1,bef[1]] # 이동처리 goBox([ny,nx],blu_pos,red_dep+1,blu_dep,red_fin,blu_fin) maze[ny][nx]= bef # 움직임 복귀 if (red_dep&gt;blu_dep or red_clear) and not blu_clear: tmp=ava_move(maze,blu_pos,m,False) if tmp: # blu가움직임... bef,ny,nx = tmp if not (ny == red_pos[0] and nx == red_pos[1]): maze[ny][nx] = [bef[0],1] # 이동처리 goBox(red_pos,[ny,nx],red_dep,blu_dep+1,red_fin,blu_fin) maze[ny][nx]= bef # 움직임 복귀 return red_pos,blu_pos = False,False red_fin,blu_fin = False,False for i in range(len(maze)): for j in range(len(maze[0])): if maze[i][j] != 5: if maze[i][j] == 1: maze[i][j] = [1,0] red_pos = [i,j] elif maze[i][j] == 2: maze[i][j] = [0,1] blu_pos = [i,j] else: if maze[i][j] == 3: red_fin = [i,j] elif maze[i][j] == 4: blu_fin = [i,j] maze[i][j] = [0,0] # print(red_pos,blu_pos) goBox(red_pos,blu_pos,0,0,red_fin,blu_fin); return 0 if math.inf==answer[0] else answer[0] def ava_move(maze,pos,move,isRed): y,x=pos dy,dx=move ny = y + dy nx = x + dx if ny&lt;0 or nx &lt;0 or ny&gt;len(maze)-1 or nx&gt;len(maze[0])-1: # 범위안에도 없음 return False val = maze[ny][nx] if val == 5 or (isRed and val[0] == 1) or (not isRed and val[1] == 1): return False # 움직일 순잇음용 if isRed: return [val,ny,nx] else: return [val,ny,nx] # 가능하움직임 벽 ㄴㄴ 격자 ㄴㄴ 방문한곳 ㄴㄴ\n둘다먼저 움직일 수있음 but\n계산횟수가 많아짐 예를들어\n2&gt;3턴넘어갈때 \"\"\"\nn*m크기\n시작&gt;도착\n각턴마다 상하좌우중인접한 한칸으로 움직여야함\n방문햇던곳갈수없음\n도착시 고정\n수레끼리 자라바꿀수없음(부딪히면안됨)\ndfs같은데용?\n\"\"\"\nimport math\nimport traceback def solution(maze): answer = [math.inf,len(maze)*len(maze[0])]# 빈칸 0 / 방문 빨,파 1,2/ def goBox(red_pos,blu_pos,red_dep,blu_dep,red_fin,blu_fin): print(red_pos,blu_pos,red_dep,blu_dep,red_fin,blu_fin) turn = max(red_dep,blu_dep) red_clear = red_pos[0] == red_fin[0] and red_pos[1] == red_fin[1] blu_clear = blu_pos[0] == blu_fin[0] and blu_pos[1] == blu_fin[1] if turn&gt;answer[1] or turn&gt;=answer[0]: return if red_clear and blu_clear: print(\"도착!\",red_pos,blu_pos,turn) if turn &lt; answer[0]: answer[0] = turn return moves = [[0,1],[0,-1],[1,0],[-1,0]] for m in moves: if ((blu_dep-red_dep&gt;=0 and blu_dep-red_dep&lt;2) or blu_clear) and not red_clear: tmp=ava_move(maze,red_pos,m,True) # 이동콛 if tmp: # red가움직임... bef,ny,nx = tmp if not (ny == blu_pos[0] and nx == blu_pos[1]): maze[ny][nx] = [1,bef[1]] # 이동처리 goBox([ny,nx],blu_pos,red_dep+1,blu_dep,red_fin,blu_fin) maze[ny][nx]= bef # 움직임 복귀 if ((red_dep-blu_dep&gt;=0 and red_dep-blu_dep&lt;2) or red_clear) and not blu_clear: tmp=ava_move(maze,blu_pos,m,False) if tmp: # blu가움직임... bef,ny,nx = tmp if not (ny == red_pos[0] and nx == red_pos[1]): maze[ny][nx] = [bef[0],1] # 이동처리 goBox(red_pos,[ny,nx],red_dep,blu_dep+1,red_fin,blu_fin) maze[ny][nx]= bef # 움직임 복귀 return red_pos,blu_pos = False,False red_fin,blu_fin = False,False for i in range(len(maze)): for j in range(len(maze[0])): if maze[i][j] != 5: if maze[i][j] == 1: maze[i][j] = [1,0] red_pos = [i,j] elif maze[i][j] == 2: maze[i][j] = [0,1] blu_pos = [i,j] else: if maze[i][j] == 3: red_fin = [i,j] elif maze[i][j] == 4: blu_fin = [i,j] maze[i][j] = [0,0] # print(red_pos,blu_pos) goBox(red_pos,blu_pos,0,0,red_fin,blu_fin); return 0 if math.inf==answer[0] else answer[0] def ava_move(maze,pos,move,isRed): y,x=pos dy,dx=move ny = y + dy nx = x + dx if ny&lt;0 or nx &lt;0 or ny&gt;len(maze)-1 or nx&gt;len(maze[0])-1: # 범위안에도 없음 return False val = maze[ny][nx] if val == 5 or (isRed and val[0] == 1) or (not isRed and val[1] == 1): return False # 움직일 순잇음용 if isRed: return [val,ny,nx] else: return [val,ny,nx] # 가능하움직임 벽 ㄴㄴ 격자 ㄴㄴ 방문한곳 ㄴㄴ ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","pathToRoot":"../..","attachments":[],"createdTime":1741703712270,"modifiedTime":1757347966666,"sourceSize":6994,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_수레움직이기_250134.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","showInTree":true,"treeOrder":297,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html":{"title":"b_쉬운 최단거리_14940","icon":"","description":"import sys\nfrom collections import deque\nN,M = map(int,input().strip().split())\narr = []\ndestination = []\nfor i in range(N): line = list(map(int,input().strip().split())) try: x=line.index(2) destination = [i,x] line[x] = 0 except: pass arr.append(line) def checkCanMove(y,x): if y&lt;0 or x&lt;0: return False if y&gt;= len(arr) or x&gt;=len(arr[0]): return False if arr[y][x]&lt;1: return False return True que = deque([destination])\n# print(que)\nmove = [[0,1],[0,-1],[1,0],[-1,0]]\nwhile que: y,x = que.popleft() val = arr[y][x] # print(y,x,val) for m in move: ny = y + m[0] nx = x + m[1] if checkCanMove(ny,nx): arr[ny][nx] = val-1 que.append([ny,nx]) for line in arr: output = \"\" for l in line: if l &lt; 0: l = -l elif l &gt; 0: l = -1 output += str(l)+' ' print(output) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","pathToRoot":"../..","attachments":[],"createdTime":1741955379681,"modifiedTime":1757347970227,"sourceSize":1259,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_쉬운 최단거리_14940.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","showInTree":true,"treeOrder":298,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html":{"title":"b_스위치켜고끄기_1244","icon":"","description":"스위치 개수\n1 ~ 스위치개수 이하 자연수\n1 on ,0 off\nif 남, 스위치 번호가 받은 수의 배수면 스위치 상태를 바꿈\nif 여, 스위치 번호 == 받은수 중심으로 좌우 대칭이면서 가장 많은 스위치를 포함한 구간의 스위치 상태를 바꿈 자기자신도 바꿈걍구현 비트연산자 토글할때 xor 즉 연산자 ^를 쓰면된다는 걸 알았다.import sys\nswi_n=int(sys.stdin.readline().strip()) # 스위치 수\nswitches = list(map(int,sys.stdin.readline().strip().split()))\nstu_n = int(sys.stdin.readline().strip()) def change_switches(arr,stu_g,stu_s): if stu_g == 1: # 남자 for i in range(len(arr)): if (i+1)%stu_s == 0: arr[i] ^= 1 else : # 여자 stu_s -= 1 # 이제부턴 인덱스쓸꺼라 ㄱㅊ arr[stu_s] ^= 1 for i in range(1,stu_s+1): left = stu_s - i right = stu_s + i if -1 &lt;left and right&lt;len(arr): if arr[left] == arr[right]: arr[left] ^= 1 arr[right] ^= 1 else: break else: break while stu_n&gt;0: student = list(map(int,sys.stdin.readline().strip().split())) stu_n -= 1 change_switches(switches,student[0],student[1]) ans = \"\"\nstart = 0\nswit_leng =len(switches)\nwhile start&lt;swit_leng: end = start+20 if end&gt;swit_leng: end = swit_leng ans+=(' '.join(map(str,switches[start:end]))) ans+='\\n' start += 20\nprint(ans)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","pathToRoot":"../..","attachments":[],"createdTime":1725559716294,"modifiedTime":1757347911601,"sourceSize":1813,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_스위치켜고끄기_1244.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","showInTree":true,"treeOrder":299,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html":{"title":"b_에디터_1406","icon":"","description":"커서 앞 뒤 중간. n+1 공간에 위치해있음\nL : 커서 왼쪽으로\nD : 커서 오른쪽으로\nB : 커서 왼쪽에 있는 문자를 삭제\nP: $문자를 왼쪽에 추가\n초기에 커서는 맨앞에시간초과 에러가 떳다..\n걍 배열을 두고 중간에 값을 insert하고 삭제하는 식으로 구현을 했다. &lt;&lt; 둘다 시간 복잡도 O(n)이 걸린다.커서기준으로 left right queue로 나눠야함.beforeimport sys words = list(sys.stdin.readline().strip())\n# 기본적으로 문자의 index와 커서가 같으면\n# 해당 문자 앞에있는 것. 마지막커서는 문자의 길이임\nwords_len = len(words)\nnow_cur = words_len\ndef editor(arr,com): global now_cur if com[0] == 'L': if now_cur &gt; 0: now_cur -= 1 elif com[0] == 'D': if now_cur &lt; words_len: now_cur += 1 elif com[0] == 'B': if now_cur &gt; 0: del arr[now_cur-1:now_cur] now_cur -= 1 else: _ , v=com.split() arr[now_cur:now_cur] = [v] now_cur += 1 k = int(sys.stdin.readline().strip())\ninput = []\nfor _ in range(k): input.append(sys.stdin.readline().strip()) for i in input: editor(words,i) print(\"\".join(words)) correct answerimport sys\nfrom collections import deque\nwords = list(sys.stdin.readline().strip())\nleft = deque(words)\nright = deque([])\n# 기본적으로 문자의 index와 커서가 같으면\n# 해당 문자 앞에있는 것. 마지막커서는 문자의 길이임 def editor(com): global now_cur if com[0] == 'L': if left: right.appendleft(left.pop()) elif com[0] == 'D': if right: left.append(right.popleft()) elif com[0] == 'B': if left: left.pop() else: _ , v=com.split() left.append(v) k = int(sys.stdin.readline().strip())\ninput = []\nfor _ in range(k): input.append(sys.stdin.readline().strip()) for i in input: editor(i) print(\"\".join(left+right)) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","pathToRoot":"../..","attachments":[],"createdTime":1725601043666,"modifiedTime":1757347977301,"sourceSize":2324,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_에디터_1406.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","showInTree":true,"treeOrder":300,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html":{"title":"b_연산자 끼워넣기_14888","icon":"","description":"입력\n수개수\n수 배열\n덧셈 뺄셈 곱셈 나눗샘 개수전형적인 백트래킹문제다.import sys\nimport math k = int(sys.stdin.readline().strip())\narr = list(map(int,sys.stdin.readline().strip().split()))\noper= list(map(int,sys.stdin.readline().strip().split()))\nmax_v = -math.inf\nmin_v = math.inf # 1, 첫숫자로시작\ndef solve(step,sum_v,oper): global max_v global min_v # print(step,sum_v,oper,max_v,min_v) if step &gt;= len(arr): # print(\"탈출\",sum_v) if max_v&lt; sum_v: max_v = int(sum_v) if min_v &gt; sum_v: min_v = int(sum_v) # print(max_v,min_v) return for i in range(len(oper)): if oper[i] &lt;= 0 : continue oper[i] -=1 if i == 0 : solve(step+1,sum_v+arr[step],oper) elif i == 1: solve(step+1,sum_v-arr[step],oper) elif i == 2: solve(step+1,sum_v*arr[step],oper) elif i == 3: tmp = 0 if sum_v &lt; 0: tmp = -((-sum_v)//arr[step]) else: tmp = (sum_v)//arr[step] solve(step+1,tmp,oper) oper[i] +=1 solve(1,arr[0],oper)\nprint(max_v)\nprint(min_v)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","pathToRoot":"../..","attachments":[],"createdTime":1725643417615,"modifiedTime":1757347979849,"sourceSize":1494,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_연산자 끼워넣기_14888.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","showInTree":true,"treeOrder":301,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_예산_2512.html":{"title":"b_예산_2512","icon":"","description":"if 모든요청이 다 ㄱㅊ &gt; 모두다 요청한대로\nelse 특정한 정수상한액 설정 그이상이면 상한액 이하면 요청한대로입력\n지방수\n요청수들\n총예슨이진탐색냄새가 솔솔난다.먼가 딱 맞지않으면 이진탐색이다.(내생각에) 역시 맞음ㅋimport sys\nsys.stdin.readline()\ncities = list(map(int,sys.stdin.readline().strip().split()))\nbudget = int(sys.stdin.readline().strip())\ncities.sort(reverse=True) def set_limit(start,end): if start &gt; end: return end # 정렬된 mid = (start+end)//2 b_sum = 0 for b in cities: if b&gt;mid: b_sum+=mid else: b_sum+=b if b_sum == budget: return mid elif b_sum &gt; budget: # 소요되는 금액이 예산보다많음 return set_limit(start,mid-1) else: return set_limit(mid+1,end) requires = sum(cities)\nif budget &gt;= requires: print(cities[0])\nelse: ans = set_limit(0,cities[0]) # 상한선 필요 print(ans)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","pathToRoot":"../..","attachments":[],"createdTime":1725562507211,"modifiedTime":1757347982583,"sourceSize":1310,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_예산_2512.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","showInTree":true,"treeOrder":302,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_오목_2615.html":{"title":"b_오목_2615","icon":"","description":"오목 (5개만 ㅇㅈ해드림)\nㅇㅈ되는 오목중 왼쪽 &gt; 같으면 위 에있는 인덱스 뽑아내샘\n둘이 동시에 이기는 경우는 없음\n방향을 사방으로가는게 아니라 방향중 첫스타트가 왼쪽이 되는걸 먼저 돌려야함\n이후에 확인할때 방문햇음으로 확인하면 겹치는게 문제생길 수 있으므로 가려는 방향과 음수인 반대값에 이미 같은값이있으면 방문햇음으로 판단하면 됨\nimport sys\nimport math\nimport heapq farr = []\ninput =list( map(int,sys.stdin.readline().strip().split()))\nxlen = len(input)\nwhile input: farr.append(input) input = list(map(int,sys.stdin.readline().strip().split()))\n# for fa in farr:\n# print(fa) ylen = len(farr)\n# print(xlen,ylen) def isInArr(y,x): if y &gt;=0 and ylen&gt;y and x&gt;=0 and xlen&gt;x: return True return False def dfs(tarr,dy,dx,y,x,depth): if depth&gt;=6 : return 6 ty = y + dy tx = x + dx # print(ty,tx,depth) if isInArr(ty,tx): if tarr[y][x]!= tarr[ty][tx]: return depth return dfs(tarr,dy,dx,ty,tx,depth+1) return depth\n# 한방향으로 가니까 중복될 리가 없음용\ndef visiting(): moves = [[1,0],[1,1],[0,1],[-1,1]] # 대칭인건 지워도됨 for i in range(ylen): for j in range(xlen): if farr[i][j] !=0: for my,mx in moves: # print(\"dfs\",i,j,my,mx,'---') cv = farr[i][j] dv = farr[i-my][j-mx] if isInArr(i-my,j-mx) else -1 # 반대방향에 이미같은게 있으면 계산된거 if cv != dv: d=dfs(farr,my,mx,i,j,1) # print(\"dfs end\",d) if d == 5: return f\"{farr[i][j]}\\n{i+1} {j+1}\" return 0\nresult = visiting()\nprint(result)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"정답","level":3,"id":"정답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","pathToRoot":"../..","attachments":[],"createdTime":1738950716344,"modifiedTime":1757347999645,"sourceSize":2137,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_오목_2615.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","showInTree":true,"treeOrder":303,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html":{"title":"b_우주신과의교감_1774","icon":"","description":"우주신과 황선자씨랑교신해야함(바로 교신할필요없음)\n일부 우주신은 이미황선자씨와 교신할수있음\n짧은 통로를 좋아함\n우주신 개수 N,이미연결된 통로 Mimport sys\ninput = sys.stdin.readline\nn,m= map(int,input().strip().split())\nparents = [i for i in range(n+1)]\nnodes = [] # 번호, y, x\nedges = [] # 비용, 번호1, 번호2 def find_parent(n): if parents[n] !=n: parents[n] = find_parent(parents[n]) return parents[n] for i in range(n): y,x = map(int,input().strip().split()) nodes.append((i+1,y,x)) def union_p(n1,n2): np1 = find_parent(n1) np2 = find_parent(n2) if np1 != np2: if np1&lt;np2: parents[np2] = np1 else: parents[np1] = np2 return True return False for i in range(m): n1,n2 = map(int,input().strip().split()) union_p(n1,n2) for i in range(n): n1 = nodes[i] for j in range(i+1,n): n2 = nodes[j] cost=((n1[1]-n2[1])**2 + (n1[2]-n2[2])**2) ** 0.5 edges.append((round(cost,2),n1[0],n2[0])) edges.sort()\nanw = 0\nfor e in edges: c,n1,n2 = e if union_p(n1,n2): anw +=c print(format(anw, \".2f\"))\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","pathToRoot":"../..","attachments":[],"createdTime":1728713393240,"modifiedTime":1757348006873,"sourceSize":1489,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_우주신과의교감_1774.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","showInTree":true,"treeOrder":304,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html":{"title":"b_읽어버린괄호_1541","icon":"","description":"dp로해야한다고생각햇다. 그것도 아마 될것은 같지만..\n+인걸 먼저import sys\nS = sys.stdin.readline().strip().split('-') # - 기준으로 괄호를 치면 최소로 만들 수 있음\ntemp = []\nfor i in S: # 각 요소에 대해 cnt = 0 for j in i.split('+'): # +로 짼 요소들을 cnt += int(j) # 더하고 temp.append(cnt) # 모아주자\n# 모아준 temp들을 맨 앞 인덱스 제외하고 전부 빼면 최소값\nresult = temp[0]\nfor i in temp[1:]: result -= i\nprint(result)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","pathToRoot":"../..","attachments":[],"createdTime":1727879502746,"modifiedTime":1757348010785,"sourceSize":807,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_읽어버린괄호_1541.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","showInTree":true,"treeOrder":305,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html":{"title":"b_임스미니게임_25757","icon":"","description":"Y : 2 ,F :3 , O:4\n인원수가 맞아야함\n여러번 같은사람과 플레이불가\n최대 몇번 게임가능?걍구현문제임import sys\nn,m = sys.stdin.readline().strip().split()\nnum = 0\nif m == 'Y': num= 1\nelif m == 'F': num = 2\nelse: num = 3\narr = set([])\nwhile True: input = sys.stdin.readline().strip() if input =='': break arr.add(input) print(len(arr)//num) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","pathToRoot":"../..","attachments":[],"createdTime":1725534857235,"modifiedTime":1757347752392,"sourceSize":652,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_임스미니게임_25757.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","showInTree":true,"treeOrder":306,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html":{"title":"b_주유소_13305","icon":"","description":"N개 도시\n도시마다 리터당 가격이다름\n왼 to 오쉬움import sys\nimport math\nsys.stdin.readline()\nv =list(map(int,sys.stdin.readline().strip().split()))\nn =list(map(int,sys.stdin.readline().strip().split())) small = math.inf\ntotal = 0\nfor i in range(len(n)): small = min(small,n[i]) if i &gt;= len(v): continue total += (small * v[i]) print(total)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","pathToRoot":"../..","attachments":[],"createdTime":1727885610637,"modifiedTime":1757348016830,"sourceSize":657,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_주유소_13305.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","showInTree":true,"treeOrder":307,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_집합_11723.html":{"title":"b_집합_11723","icon":"","description":"내답\n집합으로 단순구현하였는데 틀렷다.import sys input = sys.stdin.readline\nN = int(input().strip())\narr = set([])\noutput = \"\"\nfor _ in range(N): data=input().strip() if data == \"all\": arr = set( [ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\"]) elif data == \"empty\": arr.clear() else: op,num = data.split() if op == \"add\": arr.add(num) elif op == \"check\": output += (\"1\\n\" if num in arr else \"0\\n\") elif op == \"remove\": if num in arr: arr.remove(num) elif op == \"toggle\": if num in arr: arr.remove(num) else: arr.add(num) print(output) print합쳐서해서메모리초과난듯용;;import sys input = sys.stdin.readline\nN = int(input().strip())\ns = 0b0\noutput = \"\"\nfor _ in range(N): data=input().strip() # print(\"s\",bin(s)) if data == \"all\": s = 0b111111111111111111111 elif data == \"empty\": s = 0b0 else: op,num = data.split() num = int(num) if op == \"add\": s = s | (0b1&lt;&lt;num) elif op == \"check\": if s &amp; (0b1&lt;&lt;num): print(1) else: print(0) elif op == \"remove\": s= s &amp; ~(0b1&lt;&lt;num) elif op == \"toggle\": s = s ^ (0b1&lt;&lt;num)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","pathToRoot":"../..","attachments":[],"createdTime":1741940627833,"modifiedTime":1757348020125,"sourceSize":1819,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_집합_11723.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","showInTree":true,"treeOrder":308,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html":{"title":"b_특정한최단경로","icon":"","description":"1 &gt; N 두정점 u,v 거처야함\n1 &gt; u &gt; v &gt; N\n1 &gt; v &gt; u &gt; N여러경로에 대한 최단거리를 알아야하기에 플루이드 워셜이 낫다고 판단햇다.맞는데 시간초과가 뜬다. n^3이라서그런듯. 경로가 쨋든 정해저잇기만한다면 걍 다익스트라쓰는것이 나은가보다.import sys\nimport math\nimport heapq\ninput = sys.stdin.readline N,E= map(int,input().strip().split())\ngraph = [[math.inf]*(N+1) for _ in range(N+1)] for i in range(E): n1,n2,c = map(int,input().strip().split()) graph[n1][n2] = c graph[n2][n1] = c\nv1,v2 = map(int,input().strip().split())\nfor i in range(1,N+1): for j in range(i,N+1): for k in range(1,N+1): graph[k][k] = 0 graph[i][j] = min(graph[i][j],graph[i][k]+graph[k][j]) graph[j][i]=graph[i][j] result = min(graph[1][v1] +graph[v1][v2]+graph[v2][N],graph[1][v2] +graph[v2][v1]+graph[v1][N])\nprint(result)\n역시 킹갓 힙으로해야..[]import sys\nimport math\nimport heapq\ninput = sys.stdin.readline N,E= map(int,input().strip().split())\ngraph = [[] for _ in range(N+1)]# 간선담을..\ndist1 = [math.inf] * (N+1) # 1에서 무언다도착햇을때 최단거리\ndist2 = [math.inf] * (N+1) # v1에서 무언가 도착햇을때 최단거리\ndist3 = [math.inf] * (N+1) # v2에서 무언가 도착햇을때 최단거리 for i in range(E): n1,n2,c = map(int,input().strip().split()) graph[n1].append((c,n2)) graph[n2].append((c,n1)) # print(graph)\nv1,v2 = map(int,input().strip().split()) def dij(start,dist): dist[start] = 0 heap = [] heapq.heappush(heap,(0,start)) while heap: d,now=heapq.heappop(heap) if dist[now]&lt;d: continue for c,n in graph[now]: # 인접노드 현재 거리에 이동한 거리더하기 cost = d + c if cost &lt; dist[n]: # 연결하고 인접한..거힙에추가 dist[n] = cost heapq.heappush(heap,(cost,n)) dij(1,dist1)\ndij(v1,dist2)\ndij(v2,dist3)\nresult= min(dist1[v1]+dist2[v2]+dist3[N],dist1[v2]+dist2[N]+dist3[v1])\nif result == math.inf: result = -1\nprint(result)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","pathToRoot":"../..","attachments":[],"createdTime":1728747236711,"modifiedTime":1757347752367,"sourceSize":2452,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_특정한최단경로.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","showInTree":true,"treeOrder":309,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html":{"title":"b_평범한배낭_12865","icon":"","description":"최대 k무게 넣을수 있을때 최대로 가치있게 즐기고픔입력\n믈픔수, 최대무게\n무게 , 가치하나씩 넣는다고하고 생각하면된다..\n이제생각할때 물건하나씩 넣는다고생각한다\n그리고 이전에 넣은물건이 있는지 무게가 가장큰 dp부터확인을 쭉하고\n물건에 넣은 무게가 있으면 거기에다가 현재넣을 물건을 비교해서 최대값을 해당무게가 가진다.\n여기서 젤 중요했던것이 무게가 가장 큰 dp부터확인한다이다.\n적은 dp부터확인하면 이미더한값에서 또더해서 개수를 중복되게 더해진다.O(n * k)import sys # n:물건, k : limit무게\nn, k = map(int,sys.stdin.readline().strip().split())\nweight = [] worth = [] # 가치\nbag =[0] * (k+1) # 물건개수만큼 for문 == 물건을하나씩넣어봣을때의 가치를잼\nfor _ in range(n): w, v=map(int,sys.stdin.readline().strip().split()) if w &lt; k+1: for i in range(k+1,0,-1): 는무게 if i+w&lt;=k and bag[i] != 0: tmpw = i + w if tmpw &lt;k+1: bag[tmpw] = max(bag[tmpw],bag[i]+v) bag[w] = max(bag[w],v) # 처음이면 무적건v갯죵 # print(w,bag) print(max(bag)) <img src=\"600-알고리즘-&amp;-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html"],"createdTime":1725615214846,"modifiedTime":1757348027814,"sourceSize":1628,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_평범한배낭_12865.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","showInTree":true,"treeOrder":310,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html":{"title":"b_IF문대신_19637","icon":"","description":"전투력 기준으로 칭호를 붙여줄라고함if power &lt;= 10000 print WEAK\nelse if power &lt;= 100000 print NORMAL\nelse if power &lt;= 1000000 print STRONG\n칭호개수, 캐릭터개수\n칭호와 전투력겁나쉽잖아? &gt;&gt; 바로시간초과 ㅅㄱ\n이분탐색써서했음import sys\nfrom collections import deque\nn, m = map(int,sys.stdin.readline().strip().split())\nname = []\nname_dic = {}\ntmp_cnt =0\nfor j in range(n): tmp = sys.stdin.readline().strip().split() if j-tmp_cnt&gt;0: if name[j-tmp_cnt-1][1]==int(tmp[1]): tmp_cnt+=1 continue name.append([tmp[0],int(tmp[1])]) name_dic[tmp[1]] = tmp[0]\n# print(name)\nans = \"\"\ndef search(start,end,v): mid = (start + end)//2 # print(start,end,mid,v) if start&gt;end: return name[start][0] mid_v = name[mid][1] if mid_v == v: return name[mid][0] elif mid_v &lt; v: return search(mid+1,end,v) return search(start,mid-1,v)\nfor _ in range(m): tmp = int(sys.stdin.readline().strip()) c=\"\" start = 0 end = len(name)-1 if tmp in name_dic: c= name_dic[tmp] else: c = search(0,len(name)-1,tmp) # print('------'+c+'------') ans += (c+'\\n')\nprint(ans)\n","aliases":[],"inlineTags":[],"frontmatterTags":["#시간초과"],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","pathToRoot":"../..","attachments":[],"createdTime":1725609530299,"modifiedTime":1757348515479,"sourceSize":1547,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_IF문대신_19637.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","showInTree":true,"treeOrder":311,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/b_rgb거리.html":{"title":"b_RGB거리","icon":"","description":" 좌우와 색이 같아서는 안된다.\n입력 빨초파로칠햇을때 비용이 각나옴\n브루드 포스\ndp 좌우3방향 컨트롤해야할듯?\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://hongcoding.tistory.com/123\" target=\"_self\">https://hongcoding.tistory.com/123</a>\n사람들은천재다...\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","pathToRoot":"../..","attachments":[],"createdTime":1728791793125,"modifiedTime":1757348171357,"sourceSize":495,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_RGB거리.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","showInTree":true,"treeOrder":312,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html":{"title":"c_MaxNonoverlappingSegments","icon":"","description":"선분 N개가 한줄에 위치\n이미 end 가 앞인순으로 나열되어있음\nA : 시작 ,B: 끝 ,끝점을 기준으로 정렬\n겹치는 경우 겹치지 않는경우\nA[I] ≤ A[J] ≤ B[I] 또는 A[J] ≤ A[I] ≤ B[J]\n최대로 겹치지않는 세트를 구한다.각 선들마다 겹치는 선을구한다음에\n겹치는선이 적은순으로 정렬해서 선택한다.\n퍼포 엄청구리고 답도틀림. 내생각에는 sort시에 length뿐만아니라 index순의 조건을 추가해야한다고생각한다function solution(A, B) { let line = [] let end = [] for(let i =0;i&lt;A.length;i++){ line.push([i]) end.push(B[i]) let toggle = false for(let j =0;j&lt;i;j++){ if(!toggle &amp;&amp; end[j]&gt;=A[i]) toggle= true; if(toggle){ line[j].push(i); line[i].push(j); } } } line.sort((a,b)=&gt;a.length-b.length) let used = new Set([...line[0]]); let ans = 1; for(let i =1;i&lt;A.length;i++){ if(!used.has(line[i][0])){ ans++; used = new Set([...used,...line[i]]) } } return ans\n}\n걍끝점이랑 시작점이랑 겹치지않는수를 count하면된다.function solution(A, B) { const N = A.length; let res = 1; if (N &lt;= 1) { return N; } let start = 0; for (let i = 1; i &lt; N; i++) { if (B[start] &lt; A[i]) { res++; start = i; } } return res;\n}\n시작점기준으로정렬을 안해도된다! ex\n1-3\n4-5 끝점 3 &gt; 5\n2-5 안됨1-3\n2-5 끝점 겹침 적용ㄴㄴ 3\n4-5 끝점 3 &gt; 5","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"},{"heading":"Wrong Answer","level":4,"id":"Wrong_Answer_0"},{"heading":"Right Answer","level":4,"id":"Right_Answer_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","pathToRoot":"../..","attachments":[],"createdTime":1728623371365,"modifiedTime":1757348114782,"sourceSize":2023,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_MaxNonoverlappingSegments.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","showInTree":true,"treeOrder":313,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/c_minabssum.html":{"title":"c_MinAbsSum","icon":"","description":"배열 A(정수로 구성),S(-1,1로구성)\n최소화.. 양끝에 절대값이잇음ㅋㅋㅋㅋdp 문제인걸몰랏으면 브루드 포스를햇을거임\n틀렷음. 웨? let minRes = Infinity\nfunction solution(A) { brud(A,0,0) return minRes\n} function brud(A,step,sum){ if(step&gt;=A.length){ let absSum=Math.abs(sum) if(minRes&gt;=absSum){ minRes=absSum } return minRes===0 } for(let i=0;i&lt;A.length;i++){ if(brud(A,step+1,sum-A[i])||brud(A,step+1,sum+A[i])){ //0이나왓으므로종료한다. return true } }\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/c_minabssum.html","pathToRoot":"../..","attachments":[],"createdTime":1728707630007,"modifiedTime":1757347752372,"sourceSize":922,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_MinAbsSum.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_minabssum.html","showInTree":true,"treeOrder":314,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html":{"title":"c_NumberSolitaire","icon":"","description":"N 배열\n정수구성 표시가능\n자갈을 N-1로 옮겻을때 표시된 정수의 합\n주사위 던짐 if 현재 + 주사위 == 배열인덱스, 이동&amp;표시\nelse 암것도하지않음\n보드에서 얻을수 있는 최대를반환3가지 조건\n전꺼랑 현재꺼랑둘다 표시\n현재꺼만표시\n전꺼만표시function solution(A) { let result = A[0] + A[A.length-1] if(A.length&lt;=2){ return result } let term = 0; for(let i = 2 ; i&lt;A.length-1; i++){ if(A[i]&gt;A[i-1] &amp;&amp; A[i]&gt;A[i]+A[i-1]){ term++; if(term&lt;=6){ A[i] = A[i]; continue; } } term = 0 A[i] = Math.max(A[i-1],A[i]+A[i-1]) } return A.length&lt;7? Math.max(result,result+A[A.length-2]):result+A[A.length-2]\n}\n특정인덱스의 정답값은 이전 6개의 인덱스의 정답값 + 현재인덱스 값을 더하것임.(마지막은항상방문에해야하기에)function solution(A) { for(let i = 1; i&lt;A.length; i++){ let sStart = i-6; if(sStart&lt;0) sStart=0; let tmpSl= A.slice(sStart,i) // tmpSl 1일때 0부분만있기에 // 이후에 무조건 0을포함하게되어있음 A[i] = Math.max(...tmpSl) + A[i] } return A[A.length-1]\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"},{"heading":"WrongAnswer","level":4,"id":"WrongAnswer_0"},{"heading":"RightAnswer","level":4,"id":"RightAnswer_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","pathToRoot":"../..","attachments":[],"createdTime":1728644370296,"modifiedTime":1757348174596,"sourceSize":1643,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_NumberSolitaire.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","showInTree":true,"treeOrder":315,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/c_tieropes.html":{"title":"c_TieRopes","icon":"","description":"0 &lt;= L &lt; N 번 로프가 일열로 바닥에\n길이 배열 A[L]\n인접한 로프 묶을 수 있음\nk 보다 같거나 큰로프를 최대한많이 만들때의 개수작으면 차피 사용못하니깐 우측꺼에 연결한다고 가정한다.\n그러면겁나쉽게풀림function solution(K, A) { let ans = 0 for(let i = 0 ; i&lt; A.length; i++){ if(A[i]&gt;=K){ ans++; }else{ if(i!==A.length-1){ A[i+1] += A[i] } } } return ans\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/c_tieropes.html","pathToRoot":"../..","attachments":[],"createdTime":1728634469776,"modifiedTime":1757347752383,"sourceSize":753,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_TieRopes.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_tieropes.html","showInTree":true,"treeOrder":316,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/g_거리두기.html":{"title":"g_거리두기","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://codingbutterfly.tistory.com/31\" target=\"_self\">https://codingbutterfly.tistory.com/31</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/g_거리두기.html","pathToRoot":"../..","attachments":[],"createdTime":1732075566859,"modifiedTime":1757347752411,"sourceSize":324,"sourcePath":"600-알고리즘 & 코딩테스트/problem/g_거리두기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/g_거리두기.html","showInTree":true,"treeOrder":317,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html":{"title":"kt_꿀열매","icon":"","description":"동욱이는 N×M 격자판 미로를 탈출하려고 합니다. 동욱이는 미로를 상하좌우로 한 칸씩 움직입니다. 이때 벽이 없는 칸으로만 이동할 수 있습니다. 미로에는 꿀열매라는 것이 있습니다.\n꿀열매를 먹으면 동욱이가 하루 동안 움직일 수 있는 칸의 수가 1 증가합니다. 꿀열매를 먹지 않은 상태의 동욱이는 하루에 한 칸씩 움직일 수 있습니다. 꿀열매는 여러 번 먹어도 효과가 중첩되지 않습니다. 집이 그리운 동욱이는 최적의 방법으로 미로를 탈출합니다. 동욱이가 미로를 탈출하는 데 며칠이 걸리는지 출력하는 프로그램을 작성해 주세요.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":2,"id":"문제_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","pathToRoot":"../..","attachments":[],"createdTime":1750156183779,"modifiedTime":1757348251102,"sourceSize":922,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_꿀열매.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","showInTree":true,"treeOrder":318,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/kt_누적합.html":{"title":"kt_누적합","icon":"","description":"import java.io.*;\nimport java.util.*; public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int n = Integer.parseInt(br.readLine().strip()); List&lt;String&gt; arr = new ArrayList&lt;&gt;(Arrays.asList(br.readLine().strip().split(\" \"))); int padN = 2; if(n&gt;1){ while(padN&lt;n){ padN = padN * 2; } padN -= n; for(int i =0;i&lt;padN;i++){ arr.add(\"0\"); } } // System.out.println(arr); String output = \"\"; do{ output = String.join(\" \",arr) +\" \\n\" + output; List&lt;String&gt; narr= new ArrayList&lt;&gt;(); int tmp = 0; for (int i = 0 ; i&lt;arr.size(); i++){ int a = Integer.parseInt(arr.get(i)); tmp += a; if(i%2==1){ narr.add(String.valueOf(tmp)); tmp = 0; } } arr = narr; // System.out.println(narr); }while(arr.size()&gt;1); output = String.join(\" \",arr) +\" \\n\" + output; System.out.println(output); }\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/kt_누적합.html","pathToRoot":"../..","attachments":[],"createdTime":1745927206677,"modifiedTime":1757347752419,"sourceSize":1494,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_누적합.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_누적합.html","showInTree":true,"treeOrder":319,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/kt_태국택시.html":{"title":"kt_태국택시","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":2,"id":"문제_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","pathToRoot":"../..","attachments":[],"createdTime":1744689161827,"modifiedTime":1757347752380,"sourceSize":224,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_태국택시.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","showInTree":true,"treeOrder":320,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html":{"title":"kt_효율적인 화패 구성","icon":"","description":"어떤 나라에는 가치가 서로 다른 N가지 동전이 있습니다. 이 동전들을 이용해서 가치의 합이 M이 되게 하는 동전 개수의 최솟값을 구하는 프로그램을 작성하세요. 예를 들어 가치가 2, 3인 단위의 동전이 있을 때는 가치 15를 만들기 위해 가치 3짜리 동전 5개를 사용하는 것이 동전의 개수가 가장 최소가 됩니다.그리디 5원3원가정coin 인덱스가 무게를 넘을지를 생각하지 못햇다. ㅋㅋimport sys from collections import deque\ninput = sys.stdin.readline def solve(): n,m = map(int,input().strip().split()) arr = [10001] * (m + 1) coin = [] for _ in range(n): k = int(input().strip()) if k == m: return 1 if k &gt; m : continue arr[k] = 1 coin.append(k) for i in range(m+1): if arr[i] != 0 : for c in coin: ni = i + c if ni&lt;=m: arr[ni] = min(arr[ni],arr[i]+1) return arr[m] if arr[m]&lt;10001 else -1 print(solve())\nimport sys from collections import deque\ninput = sys.stdin.readline def solve(): n,m = map(int,input().strip().split()) coins = [] for _ in range(n): k = int(input().strip()) if k == m: return 1 if k &gt; m : continue coins.append(k) q = deque(list(map(lambda x:(x,1),coins))) while len(q) &gt; 0: v, step = q.popleft() for a in coins: tmp = v + a if tmp == m: return step+1 elif tmp &lt; m: q.append((tmp,step+1)) return -1 print(solve()) ``` ```python\nimport sys from collections import deque\ninput = sys.stdin.readline def solve(): n,m = map(int,input().strip().split()) coins = [] visited = set() for _ in range(n): k = int(input().strip()) if k == m: return 1 if k &gt; m : continue coins.append(k) visited.add(k) q = deque(list(map(lambda x:(x,1),coins))) # print(q) while len(q) &gt; 0: v, step = q.popleft() # print(q) for a in coins: tmp = v + a if tmp in visited: continue if tmp == m: return step+1 elif tmp &lt; m: visited.add(tmp) q.append((tmp,step+1)) return -1 print(solve())\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":2,"id":"문제_0"},{"heading":"답","level":2,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","pathToRoot":"../..","attachments":[],"createdTime":1744111609256,"modifiedTime":1757347752402,"sourceSize":2724,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_효율적인 화패 구성.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","showInTree":true,"treeOrder":321,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html":{"title":"kt_n을 보는 시각","icon":"","description":"import sys a = sys.stdin.readline().strip() cnt60 = 0\nfor i in range(60): # 60 단위에서는 몇 번볼수잇나 if a in str(i): cnt60 += 1 cnt24 = 0\nfor i in range(24): if a in str(i): cnt24 += 1\n# print(cnt60,cnt24)\nh = cnt24 * 60 * 60\nm = (24-cnt24) * cnt60 * 60\ns = (24-cnt24) * (60-cnt60) * cnt60\nanswer = h + m + s\nprint(answer)\n// don't place package name. import java.io.*; import java.util.*; // don't change 'Main' class name and 'public' accessor. public class Main { public static void main(String[] args) throws IOException { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String a = br.readLine(); int cnt60 = 0; for(int i = 0; i&lt; 60; i++){ String si = String.valueOf(i); if(si.contains(a)){ cnt60 += 1; } } int cnt24 = 0; for(int i =0 ;i&lt;24; i++){ String si = String.valueOf(i); if(si.contains(a)){ cnt24 += 1; } } int h = cnt24 * 60 * 60; int m = (24-cnt24) * cnt60 * 60; int s = (24-cnt24) * (60-cnt60) * cnt60; System.out.println(h+m+s); }\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":2,"id":"문제_0"},{"heading":"답","level":2,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","pathToRoot":"../..","attachments":[],"createdTime":1745910932990,"modifiedTime":1757347752413,"sourceSize":1526,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_n을 보는 시각.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","showInTree":true,"treeOrder":322,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html":{"title":"p_도넛과막대그래프_258711","icon":"","description":"정점번호, 도넛,막대,8자\n막대 조건 : 시작 노드가 input이없다.\n최종노드가 outpu이없다\n정점 : input 없고 output많은것\n'생성된 정점'은 나가는 간선의 수가 2 이상이고, 들어오는 간선의 수가 0이다.\n'막대 모양 그래프'의 수는 나가는 간선의 수가 0, 들어오는 간선의 수가 1인 노드의 개수와 같다.\n'8자 모양 그래프'의 수는 나가는 간선의 수가 2, 들어오는 간선의 수도 2인 노드의 개수와 같다.\n'도넛 모양 그래프'는 '생성된 정점'의 나가는 간선의 수에서 막대 모양 그래프와 8자 모양 그래프의 개수를 빼서 구한다.\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@mino0121/ProgrammersPython-%EB%8F%84%EB%84%9B%EA%B3%BC-%EB%A7%89%EB%8C%80%EA%B7%B8%EB%9E%98%ED%94%84\" target=\"_self\">https://velog.io/@mino0121/ProgrammersPython-%EB%8F%84%EB%84%9B%EA%B3%BC-%EB%A7%89%EB%8C%80%EA%B7%B8%EB%9E%98%ED%94%84</a>도넛 모양 그래프, 막대 모양 그래프, 8자 모양 그래프가 여러 개 있습니다. 이 그래프들과 무관한 정점을 하나 생성한 뒤, 각 도넛 모양 그래프, 막대 모양 그래프, 8자 모양 그래프의 임의의 정점 하나로 향하는 간선들을 연결했습니다.이말을 확실히 봐야만했엇다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","pathToRoot":"../..","attachments":[],"createdTime":1727942997983,"modifiedTime":1757347752386,"sourceSize":1381,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_도넛과막대그래프_258711.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","showInTree":true,"treeOrder":323,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html":{"title":"p_동영상재생기","icon":"","description":"10초 전이동 : if 10초 미만 , 0으로이동\n10초 후이동 : if end-current &lt;10sec , end로 이동\n오프닝건너뛰기 : if current == opening구간 , opening끝으로 이동\n오프닝 사이이면 자동으로 끝으로 이동해야함단순구현문제라 쉬웠다.function solution(video_len, pos, op_start, op_end, commands) { video_len = convertToTime(video_len); pos = convertToTime(pos); op_start = convertToTime(op_start); op_end = convertToTime(op_end); for(let c of commands){ pos = checkOpening(op_start,op_end,pos) if(c === \"prev\"){ pos[1] -= 10 if(pos[1]&lt;0){ pos[1] += 60 pos[0] -= 1 } if(pos[0]&lt;0){ pos = [0,0] } }else if(c === \"next\"){ pos[1] += 10 if(pos[1]&gt;59){ pos[1] -= 60 pos[0] += 1 } if(pos[0]&gt;video_len[0]||(pos[0]===video_len[0]&amp;&amp;pos[1]&gt;video_len[1])){ pos = [...video_len] } } // console.log(pos) } pos = checkOpening(op_start,op_end,pos) // console.log(pos) let answer = pos[0].toString().padStart(2,'0') + ':' + pos[1].toString().padStart(2,'0') return answer;\n} function convertToTime(value){ return [parseInt(value[0]+value[1]),parseInt(value[3]+value[4])]\n} function checkOpening(start,end,current){ if(start[0]&gt;current[0] || (start[0]===current[0] &amp;&amp; start[1]&gt;current[1])){ // 시작보다 앞이면 리턴 return current; } if(end[0]&lt;current[0] || (end[0]===current[0] &amp;&amp; end[1]&lt;current[1])){ // 끝보다 뒤면 리턴 return current; } return [...end]\n} ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","pathToRoot":"../..","attachments":[],"createdTime":1731827945482,"modifiedTime":1757348441723,"sourceSize":2047,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_동영상재생기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","showInTree":true,"treeOrder":324,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html":{"title":"p_두원사이의정수쌍_181187","icon":"","description":"1차답 시간초과# 둘다정수임\ndef solution(r1, r2): inner = 0 edge = 0 for x in range(r2+1): for y in range(r2+1): if x+y&lt;r1: continue des = calDes(x,y) if des &lt;=r2 and r1&lt;=des: if x == 0 or y == 0: edge +=1 else: inner +=1 return inner*4 + edge*2 def calDes(x,y): return (x**2 + y ** 2)**0.5\ndef solution(r1, r2): answer = 0 cntR1 = 0 cntR2 = 0 print('cntR2 count') for k in range(1 , r2): cntR2 = cntR2 + int((r2 ** 2 - (k) ** 2) ** 0.5) print('cntR1 count') for k in range(1 , r1): if (r1 ** 2 - (k) ** 2) ** 0.5 == int((r1 ** 2 - (k) ** 2) ** 0.5): cntR1 = cntR1 + int((r1 ** 2 - (k) ** 2) ** 0.5) - 1 else: cntR1 = cntR1 + int((r1 ** 2 - (k) ** 2) ** 0.5) answer = cntR2 - cntR1 + r2 - r1 + 1 return 4 * answer\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","pathToRoot":"../..","attachments":[],"createdTime":1741878429302,"modifiedTime":1757348435053,"sourceSize":1279,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_두원사이의정수쌍_181187.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","showInTree":true,"treeOrder":325,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html":{"title":"p_등굣길_42898","icon":"","description":"최단거리개수의합\n아래와 오른쪽으로만갈수있음bfs를 이용해야겠다라는 생각을했다. 그리고 이미 방문한곳을 아예갈수 없는게 아니라 같은 스텝의 경우는 허용되기에 이부분을 어떻게 처리할지 고민이 깊었다.\n근데 고민할 필요가없엇다 아래와 오른쪽으로만 갈 수 있다는 조건 이있었기에 각기 다른방향에서오는 최단거리를 고대로 합해주는 식으로 하면됐었다.\n이때 주요포인트가 각자 다른 거리지만 한목적지를 향해서 오는 것에 대해서는 나중에 방문햇던 리스트목록에 set으로 넣어야한다는 것이다. 아니면 중복처리가 된다.\ndef solution(m, n, puddles): ways =[[0,1],[1,0]] visit =[[0]*m for _ in range(n)] q = {(0,0)} visit[0][0] = 1 while q and visit[n-1][m-1] == 0: tq = set([]) for y,x in q: before = visit[y][x] for dy,dx in ways: ny = y+dy nx = x+dx if [nx+1,ny+1] in puddles: continue if 0&lt;=ny and 0&lt;=nx and ny&lt;n and nx&lt;m: visit[ny][nx] +=before tq.add((ny,nx)) q = tq return visit[n-1][m-1] % 1000000007\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","pathToRoot":"../..","attachments":[],"createdTime":1727931166650,"modifiedTime":1757348430874,"sourceSize":1588,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_등굣길_42898.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","showInTree":true,"treeOrder":326,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_붕대감기.html":{"title":"p_붕대감기","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/250137\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/250137</a>\n체력회복 : t초 * x\nt초연속 붕대감기 성공시 +y추가 회복\n최대 체력이 존재함\n공격 당하면 기술과 체력회복이 취소당함\n공격시 정해진 피해량만큼 체력줄어듬\nif 체력 0이하 &gt; 캐릭터주금공격과 공겨사이 기간동안 추가회복이 한번만이뤄지는게아니라 여러번 이뤄질 수 있다는 것을 유의해야한다function solution(bandage, health, attacks) { let prevTime = 0; let curHealth = health; for(let a of attacks){ let [at,ad] = a; let remainTime = at- prevTime-1; curHealth = getRecovery(remainTime,curHealth,bandage,health); // console.log(remainTime,\"초 회복후\",curHealth) curHealth -= ad; // console.log(\"공격후\",curHealth) // console.log('-----',at) prevTime = at; if(curHealth&lt;=0) return -1 } return curHealth;\n} function getRecovery(time,curHealth,bandage,health){ let [bTime, bRecover, bAddRecover]=bandage; curHealth += time * bRecover if(time&gt;=bTime){ curHealth += bAddRecover *parseInt(time/bTime); } if(curHealth&gt;=health) return health; return curHealth;\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","pathToRoot":"../..","attachments":[],"createdTime":1731932117204,"modifiedTime":1757348665765,"sourceSize":1462,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_붕대감기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","showInTree":true,"treeOrder":327,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html":{"title":"p_비밀코드해독_388352","icon":"","description":"\n백트래킹\n5개 정답코드\n질문에몇개가 맞는지 나옴\n이질문에 해당하는 정답코드를 구하삼요 정답코드 될수잇는거 다구해서 질문에 맞는걸 거르기\n5중 for문\nimport itertools 이용\nlist(itertools.combinations(range(1, n + 1), 5))\n백트래킹,브루드포스 &lt;&lt; 나의 코드임\n처음에 탈출 조건을잘못둬서에러가났음\ndepth &gt;= n or cnt == 5 이렇게 하면 오류가남\n왜냐면 check는질문지에 맞는지를 체크하는거지5개인지체크하는게아님result=0으로두고 계속 더하면됨요def solution(n, q, ans): arr = [0]*n answer = brute(arr,0,0,n,q,ans) return answer def brute(arr,depth,cnt,n,q,ans): result = 0 if cnt &gt; 5: return 0 if cnt == 5: if check(arr,q,ans): # + check # print(\"suc\",arr) return 1 # print(\"fail\",arr) return 0 if depth &gt;= n: return 0 for i in range(depth,n): arr[i] = 1 # 방문처리 result += brute(arr,i+1,cnt+1,n,q,ans) # print(result,i,cnt) arr[i] = 0 return result def check(arr,q,ans): for i in range(len(q)): cnt = 0 for j in range(5): if arr[q[i][j]-1] == 1: cnt +=1 if ans[i] != cnt: return False return True\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","pathToRoot":"../..","attachments":[],"createdTime":1739865990013,"modifiedTime":1757347752370,"sourceSize":1559,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_비밀코드해독_388352.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","showInTree":true,"treeOrder":328,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html":{"title":"p_서버 증설 횟수_389479","icon":"","description":"m명당 서버 하나\n한번 증설한 서버는 k시간동안 운영하고 반납함from collections import deque\ndef solution(players, m, k): que = deque([])# 시작 시간 넣을꺼임 answer = 0 for i in range(len(players)): while que: diff = i-que[0] if diff&gt;= k: que.popleft() else: break n = len(que) p = players[i] need = p // m - n if need &lt;= 0: continue for _ in range(need): que.append(i) answer += need return answer\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","pathToRoot":"../..","attachments":[],"createdTime":1739903478432,"modifiedTime":1757348402784,"sourceSize":907,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_서버 증설 횟수_389479.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","showInTree":true,"treeOrder":329,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html":{"title":"p_스킬트리_49993","icon":"","description":"","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","pathToRoot":"../..","attachments":[],"createdTime":1747730460664,"modifiedTime":1757347752384,"sourceSize":173,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_스킬트리_49993.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","showInTree":true,"treeOrder":330,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html":{"title":"p_시험장나누기_81305","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/81305\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/81305</a>유니온파인드하면서 합치면될듯?내답import heapq def solution(k, num, links): N = len(num) # 노드의 개수 parent = [i for i in range(N)] # 직계 부모 weight = [] for i in range(N): weight.append([-num[i],i]) for i in range(N): l,r = links[i] increase= 0# 음수임 if l &gt; -1: parent[l] = i increase += weight[l][0] if r &gt; -1: parent[r] = i increase += weight[r][0] weight[i][0] += increase update(parent,weight,increase,i) # print(i,\"------\") # print(parent,weight,increase) heapq.heapify(weight) # heap 사용하고 최소힙이니깐 - 이용함 # k만큼 for 문 # 앞에꺼하나 뺌 # 자식이없음. &gt; 걍그거 리턴하시면됨. # 자식보다 부모가 항상큼 &gt; 고로 pop하면서 아니면 다시넣어주고 이런식으로하면댐 # 자식이잇음 &gt; 자식이 하나면 그거랑 끊고 자식이 2명이면 둘중 큰거랑 끊음&gt; 나랑 직계부모 업데이트, 부모정보도 업데이트+링크정보도 업뎃 # print('w',weight) for _ in range(k-1): w,i = heapq.heappop(weight) l,r = links[i] if parent[l] != i: # 이미 끊어 졋던거임 l = -1 links[i][0]= -1 if parent[r] != i: r = -1 links[i][1]= -1 if l&lt;0 and r&lt;0: return -w else: targetW = None depth = 0 remain = [] while targetW is None: # print(depth) if depth &gt;N: break depth +=1 nw,ni = heapq.heappop(weight) if ni == l or ni == r: targetW = [nw,ni] else: remain.append([nw,ni]) for rem in remain: heapq.heappush(weight,rem) # print(targetW) # 부모랑 연결끊기 if targetW is None: return -w tw,ti=targetW w -= tw parent[ti] = ti heapq.heappush(weight,[w,i]) heapq.heappush(weight,targetW) # print(weight) # print(parent) # print(\"-\") return -weight[0][0] def update(parent,weight,value,idx): i = idx while parent[i] != i: i = parent[i] weight[i][0] += value\n실제 답<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://loosie.tistory.com/342\" target=\"_self\">https://loosie.tistory.com/342</a>","aliases":[],"inlineTags":[],"frontmatterTags":["#모름"],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","pathToRoot":"../..","attachments":[],"createdTime":1739991129485,"modifiedTime":1757348596149,"sourceSize":2857,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_시험장나누기_81305.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","showInTree":true,"treeOrder":331,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html":{"title":"p_아날로그 시계_250135","icon":"","description":"초침 기준으로 분침과 시침이 겹치면 알람이 울린다.\n울리는 알람의 횟수를 알려줘주의점 시침과 분침이 겹치면 1번으로 고려한다.1차답\"\"\"\n시분초침이잇음용\n속도는 일정\n시침 분침 겹칠때마다알림\n초침이 시침or분침과 겹치면알람울림 start각도를 구함\n구간임\n\"\"\" def solution(h1, m1, s1, h2, m2, s2): difS = (h2*3600+m2*60 +s2)- (h1*3600+m1*60 +s1) # 초앵글을 기준으로 리셋시킴 h_angle = h1 * 30 + m1 * 0.5 + s1 * 0.5/60 m_angle = m1 * 6 + s1 * 6/60 s_angle = s1 * 6 h_angle -= s_angle m_angle -= s_angle if h_angle&lt;0: h_angle += 360 if m_angle&lt;0: m_angle += 360 s_angle = 0 # print(difS,h_angle,m_angle,s_angle) # 일자로 생각해보셈 속력을 구하자 # 1도 도는데 속력 sec기준 # 함수로 생각해보셈 x초에 만난다. # 최대2번임 x가 음수면 안만남요 h_speed = 30/3600 m_speed = 6/60 s_speed = 360/60 # h_angle + x*h_speed = s_angle + x*s_speed # h_angle-s_angle = x(s_speed-h_speed) # 360 answer = 0 # 1분에 초가 360도도니깐 1분이기준이 되어야합니다 븅띤아! # 1분에 분침은 6도를돈다. while difS &gt;= 60: limit = 60 difS -= 60 flag = False xh = round((h_angle)/(s_speed-h_speed),4) xm = round((m_angle)/(s_speed-m_speed),4) h_angle,m_angle = add_angel_by_minute(h_angle,m_angle) if 0&lt;=xh and xh&lt;60: flag = True answer += 1 # print(xh) if 0&lt;=xm and xm&lt;60: flag = True answer += 1 if flag and xh == xm: answer -= 1 # print(\"중복일치\",xh,xm) # print(xh,xm,difS,flag,answer,h_angle,m_angle) if difS &gt; 0: limit = difS flag = False xh = round((h_angle)/(s_speed-h_speed),4) xm = round((m_angle)/(s_speed-m_speed),4) h_angle,m_angle = add_angel_by_minute(h_angle,m_angle,difS/60) if 0&lt;=xh and xh&lt;=difS: flag = True answer += 1 # print(xh) if 0&lt;=xm and xm&lt;=difS: flag = True answer += 1 if flag and xh == xm: answer -= 1 # print(\"중복일치\",xh,xm) # print(xh,xm,difS,flag,answer,h_angle,m_angle) return answer def add_angel_by_minute(h_angle,m_angle,time = 1): h_angle += 0.5/time m_angle += 6/time if h_angle &gt;= 360: h_angle -= 360 if m_angle &gt;= 360: m_angle -= 360 return [h_angle,m_angle] 30 179.75 177.0 0\n30.000000000000004 29.999999999999996 -30 True 1\n다음과같은 문제가 있다.\n시작 지점인 h1 m1 s1으로 잡으면 마지막 구간을 판별을 못하고 마지막 지점인 h2 m2 s2로 잡으면 시작 구간을 판별하지 못합니다. (테스트 케이스 19번 문제)\n생각해보니 0시정각인데\n0, 0, 0, 23, 0, 0\n27352차답\n역시사람들은 뻐킹진어스하다.\n60초만남았을때 즉\n0이상 60초미만인상황에서\n0&lt;=t&lt;60초만세고 60초 즉 다시 0초된상황을 포함시지않았던것이 문제였다.\ndef solution(h1, m1, s1, h2, m2, s2): difS = (h2*3600+m2*60 +s2)- (h1*3600+m1*60 +s1) # 초앵글을 기준으로 리셋시킴 h_angle = h1 * 30 + m1 * 0.5 + s1 * 0.5/60 m_angle = m1 * 6 + s1 * 6/60 s_angle = s1 * 6 h_angle -= s_angle m_angle -= s_angle if h_angle&lt;0: h_angle += 360 if m_angle&lt;0: m_angle += 360 s_angle = 0 # print(difS,h_angle,m_angle,s_angle) # 일자로 생각해보셈 속력을 구하자 # 1도 도는데 속력 sec기준 # 함수로 생각해보셈 x초에 만난다. # 최대2번임 x가 음수면 안만남요 h_speed = 30/3600 m_speed = 6/60 s_speed = 360/60 # h_angle + x*h_speed = s_angle + x*s_speed # h_angle-s_angle = x(s_speed-h_speed) # 360 answer = 0 # 1분에 초가 360도도니깐 1분이기준이 되어야합니다 븅띤아! # 1분에 분침은 6도를돈다. while difS &gt; 60: limit = 60 difS -= 60 flag = False xh = round((h_angle)/(s_speed-h_speed),4) xm = round((m_angle)/(s_speed-m_speed),4) h_angle,m_angle = add_angel_by_minute(h_angle,m_angle) if 0&lt;=xh and xh&lt;60: flag = True answer += 1 # print(xh) if 0&lt;=xm and xm&lt;60: flag = True answer += 1 if flag and xh == xm: answer -= 1 # print(\"중복일치\",xh,xm) # print(xh,xm,difS,flag,answer,h_angle,m_angle) if difS &gt; 0: limit = difS flag = False xh = round((h_angle)/(s_speed-h_speed),4) xm = round((m_angle)/(s_speed-m_speed),4) h_angle,m_angle = add_angel_by_minute(h_angle,m_angle,difS/60) if 0&lt;=xh and xh&lt;=difS: flag = True answer += 1 # print(xh) if 0&lt;=xm and xm&lt;=difS: flag = True answer += 1 if flag and xh == xm: answer -= 1 # print(\"중복일치\",xh,xm) # print(xh,xm,difS,flag,answer,h_angle,m_angle) return answer def add_angel_by_minute(h_angle,m_angle,time = 1): h_angle += 0.5/time m_angle += 6/time if h_angle &gt;= 360: h_angle -= 360 if m_angle &gt;= 360: m_angle -= 360 return [h_angle,m_angle] def solution(h1, m1, s1, h2, m2, s2): difS = (h2*3600+m2*60 +s2)- (h1*3600+m1*60 +s1) # 초 앵글을 기준으로 리셋시킴 즉 초앵글이 12로 가게끔. s_angle = s1 * 6 m_angle = m1 * 6 + s1 * 6/60 - s_angle h_angle = h1 * 30 + m1 * 0.5 + s1 * 0.5/60 - s_angle if h_angle&lt;0: h_angle += 360 if m_angle&lt;0: m_angle += 360 s_angle = 0 # print(difS,h_angle,m_angle,s_angle) # 일자로 생각해보셈 속력을 구하자 # 속력 per 초 # 단 초가 0~60사이 여야함. 한바뀌단위로 측정해야함.ㅇㅇ h_speed = 30/3600 m_speed = 6/60 s_speed = 360/60 # h_angle + x*h_speed = s_angle + x*s_speed # &gt;&gt; h_angle - s_angle = x(s_speed-h_speed) answer = 0 # 1분에 초가 360도도니깐 1분이기준이 되어야 함. while difS &gt; 0: isPassed = False isEnd = False if difS &lt;= 60 : isEnd = True limit = difS if isEnd else 60 difS -= 60 xh = round((h_angle)/(s_speed-h_speed),4) xm = round((m_angle)/(s_speed-m_speed),4) h_angle,m_angle = add_angel_by_minute(h_angle,m_angle) if 0&lt;=xh and (xh&lt;limit or (isEnd and xh == limit)): isPassed = True answer += 1 if 0&lt;=xm and (xm&lt;limit or (isEnd and xm == limit)): isPassed = True answer += 1 if isPassed and xh == xm: answer -= 1 # print(\"중복일치\",xh,xm) # print(xh,xm,difS,flag,answer,h_angle,m_angle) return answer def add_angel_by_minute(h_angle,m_angle,time = 1): h_angle += 0.5/time m_angle += 6/time if h_angle &gt;= 360: h_angle -= 360 if m_angle &gt;= 360: m_angle -= 360 return [h_angle,m_angle] ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"},{"heading":"코드최적화","level":3,"id":"코드최적화_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","pathToRoot":"../..","attachments":[],"createdTime":1741308748662,"modifiedTime":1757348375265,"sourceSize":7644,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_아날로그 시계_250135.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","showInTree":true,"treeOrder":332,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html":{"title":"p_완전 범죄_389480","icon":"","description":"흔적누적시 붙잡힘\nA가 가장 누적해서 적게 남기는 경우를 골라라1차답\n시간초과 - 점수40점def solution(info, n, m): result = [n] hasA = [False] def steal(l_n,l_m,start): # print(l_n,l_m,start) if l_n&lt;=0 or l_m&lt;=0: return if start&gt;= len(info): # print(result) hasA[0] = True # print(\"&gt;&gt;\",l_n,l_m) if result[0] &gt; n - l_n: result[0] = n - l_n return a,b = info[start] steal(l_n-a,l_m,start+1)# 왼쪽꺼 훔침 steal(l_n,l_m-b,start+1) # 오른쪽 꺼 훔침 # print(\"----\") steal(n,m,0) return result[0] if hasA[0] else -1\n2차답\n5개면\n왼왼왼왼왼\n오왼왼왼왼\n4개의 데이터를\n뒤에서부터\n(a,b)\ndp 2차원 dp일것같긴하다ai답def solution(info, n, m): # DP 테이블 초기화 dp = [[[float('inf')] * (m + 1) for _ in range(n + 1)] for _ in range(len(info) + 1)] dp[0][0][0] = 0 # 기본 케이스: 물건이 없을 때, 흔적도 없음 # 각 물건에 대해 반복 for i in range(1, len(info) + 1): a_trace, b_trace = info[i - 1] for a in range(n + 1): for b in range(m + 1): # A가 물건을 훔치는 경우 if a &gt;= a_trace: dp[i][a][b] = min(dp[i][a][b], dp[i-1][a-a_trace][b] + a_trace) # B가 물건을 훔치는 경우 if b &gt;= b_trace: dp[i][a][b] = min(dp[i][a][b], dp[i-1][a][b-b_trace]) # A의 최소 흔적 개수 찾기 min_a_traces = min(dp[len(info)][a][b] for a in range(n) for b in range(m)) print(dp) return min_a_traces if min_a_traces != float('inf') else -1 다른사람 풀이답def solution(info, n, m): INF = 100000 size = len(info) dp = [[INF] * m for _ in range(size + 1)] dp[0][0] = 0 for i in range(1, size + 1): a, b = info[i-1] for j in range(m): # A 선택 dp[i][j] = min(dp[i][j], dp[i-1][j] + a) # B 선택 if j + b &lt; m: dp[i][j + b] = min(dp[i][j + b], dp[i-1][j]) min_value = min(dp[size]) return -1 if min_value &gt;= n else min_value ","aliases":[],"inlineTags":[],"frontmatterTags":["#모름","#시간초과"],"headers":[{"heading":"문제","level":2,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","pathToRoot":"../..","attachments":[],"createdTime":1739983488193,"modifiedTime":1757347892633,"sourceSize":2682,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_완전 범죄_389480.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","showInTree":true,"treeOrder":333,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html":{"title":"p_요격시스템_181188","icon":"","description":"ㅁ사일 요격하려고함\n미사일 최소로 사용해서 ㅇㅇ\nx축의 값이 같으면 한번에 요격가능\ns &gt; e 로 갈때 s와 e 값의 요격미사일은 격추 불가.\nx축값은 실수임(정수가아님)개구간범위를 잘확인해야한다.import heapq\ndef solution(targets): answer= 0 start = -1 end = -1 heapq.heapify(targets) while targets: s,e = heapq.heappop(targets) if start == -1: start = s if end == -1 or e&lt;end: end = e if s&gt;=end: start = s end = e answer += 1 # print(s,e,start,end,answer) if not (start == -1 or end == -1) : answer +=1 return answer\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","pathToRoot":"../..","attachments":[],"createdTime":1741612139659,"modifiedTime":1757348368786,"sourceSize":1025,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_요격시스템_181188.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","showInTree":true,"treeOrder":334,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html":{"title":"p_유연근무제_388351","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/388351\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/388351</a>\n1주일동안 출근희망시각에 늦지않게\n토일 이벤트영향 ㄴㄴ67알바없음\n출근희망시각 +10까지 ㄱㅊ\n1-7 월시작\n선물받을 직원구하삼startday포함 +7일인거 감안을 처음에안함\n시간 : 20분 걸림def solution(schedules, timelogs, startday): N = len(schedules) answer = N for i in range(N): limitT = schedules[i] + 10 limitH = int(limitT/100) + int((limitT%100)/60) limitM = (limitT%100)%60 limitT = limitH*100+limitM # print(limitT) flag = True for j in range(7): day = (j+startday)%7 if day == 0 or day == 6: # print(i,day,timelogs[i][j],\"통과\") continue if limitT&lt;timelogs[i][j]: flag = False break if flag is not True: answer -= 1 # print(i,day,\"탈락\") # print(\"---\") return answer\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","pathToRoot":"../..","attachments":[],"createdTime":1739865834852,"modifiedTime":1757348617711,"sourceSize":1247,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_유연근무제_388351.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","showInTree":true,"treeOrder":335,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html":{"title":"p_주사위고르기_258709","icon":"","description":"브루드포스주사위 n 개\nn/2 개씩 각각 가질때\n각각의 나오는 숫자과 확률 개수구해서 주사위 조합당 평균을 비교하면 되지않을까..\n일단 주사위의 조합을 구해보자.\n# dic길이 한자리수\ndic_comb = {} # 각주사위별 숫자조합\ncomb_idx = [] def solution(dice): answer = [] visited = [0] * len(dice) find_combin(visited,0,0,{},dice) # print(dic_comb) # print(comb_idx) winner = [-1,-1] # 주사위, 확률 for left,right in comb_idx: win = 0 lose = 0 for k1,v1 in dic_comb[left]: for k2,v2 in dic_comb[right]: if k1&gt;k2: win += v1 * v2 elif k1&lt;k2: lose += v1 * v2 if win &gt; lose and winner[1]&lt;win: winner[0] = left winner[1] = win elif win &lt; lose and winner[1] &lt; lose: winner[0] = right winner[1] = lose # print(winner) return list(map(lambda x: int(x)+1,winner[0])) def find_combin(visited,ind,depth,current,dice): leng = len(visited) # print(visited,depth,current) if depth &gt;= leng/2: global dic_comb global comb_idx tmpv = \"\" tmpl = \"\" for i in range(leng): if visited[i]: tmpv += str(i) else: tmpl += str(i) if tmpv[0] == '0': comb_idx.append((tmpv,tmpl)) clisted= list(current.items()) clisted.sort() dic_comb[tmpv] = clisted return for i in range(ind,leng): if visited[i]: continue visited[i] = 1 tmpc = {} for j in dice[i]: if current: for key,value in current.items(): if key+j in tmpc: tmpc[int(key)+j] += value else: tmpc[int(key)+j] = value else: if j in tmpc: tmpc[j] +=1 else: tmpc[j] = 1 find_combin(visited,i,depth+1,tmpc,dice) visited[i] = 0\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","pathToRoot":"../..","attachments":[],"createdTime":1728020151983,"modifiedTime":1757348358169,"sourceSize":2430,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_주사위고르기_258709.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","showInTree":true,"treeOrder":336,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html":{"title":"p_충돌위험찾기","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/340211\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/340211</a>n개의 좌표 (y,x) 포인트가 있음 각 포인트는 지정숫자를 가짐\n로봇마다 운송경로가 존재함\nroutes는 포인트들의 리스트로 이뤄져있음. 해당포인트를 거처야함.\nroutes[a] 는 a 번째 로봇의 운송 경로.\nroutes[a]의 값은 a번째 로봇이 순서대로 방문하는 포인트번호\n로봇은 x대 , 0초에 출발, 1초마다 상하좌우한칸씩만 갈수 있음\n이동시 항상최단경로. if 최단경로 여러개, y좌표 이동을 우선함\n마지막포인트에 도착한로봇은 물류센터 벗어남, 벗어나는 경로는 고려 ㄴㄴ2대이상모인다면 충돌할 가능성이 있는 위험상황으로 간주\n위험상황을 새라function solution(points, routes) { let crack = 0; let starts = []; let moves = []; let movesIndex = []; let pointCheck = {} for(let i = 0;i&lt;routes.length; i++){ let move = []; let before = []; for(let j = 0;j&lt;routes[0].length; j++){ let point = points[routes[i][j]-1] if(j===0){ let [y,x] = point; if(checkCrack(pointCheck,point)) crack++; starts.push([y,x]) }else{ let dy = point[0] - before[0]; let dx = point[1] - before[1]; move.push([dy,dx]) } before = point; } moves.push(move); movesIndex.push(0); } let time = 0; while(true){ time++; let currentPositions = {}; let allFinished = true; for(let i = 0; i &lt; routes.length; i++){ if(movesIndex[i] &gt;= moves[i].length){ continue; } allFinished = false; let [dy, dx] = moves[i][movesIndex[i]]; let [cy, cx] = starts[i]; if(dy !== 0){ starts[i][0] += dy &gt; 0 ? 1 : -1; } else if(dx !== 0){ starts[i][1] += dx &gt; 0 ? 1 : -1; } if(starts[i][0] === points[routes[i][movesIndex[i]+1]-1][0] &amp;&amp; starts[i][1] === points[routes[i][movesIndex[i]+1]-1][1]){ movesIndex[i]++; } let key = `${starts[i][0]},${starts[i][1]}`; if(currentPositions[key]){ currentPositions[key]++; if(currentPositions[key] === 2) crack++; } else { currentPositions[key] = 1; } } if(allFinished) break; } return crack;\n} function checkCrack(dict, point){ let [y,x] = point; let key = `${y}${x}` if(dict[key]){ dict[key]++; if(dict[key]===2) return true }else{ dict[key]=1 } return false\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","pathToRoot":"../..","attachments":[],"createdTime":1731859833075,"modifiedTime":1757348617712,"sourceSize":3102,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_충돌위험찾기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","showInTree":true,"treeOrder":337,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html":{"title":"p_택배 상자 꺼내기_389478","icon":"","description":"수직으로만 꺼냂 수잇음\nn으로 나눠서\n몫이 홀수면 왼쪽부터 짝수면 오른쪽부터임\n나머지가 0이면 풀 잇기 시작 하면 n-나머지 만큼공간이 비어잇음def solution(n, w, num): # 0부터시작 다. def xyCalculate(value): y = (value-1) // w # 몫 b = (value-1) % w # 나머지 isEven = y % 2 == 0 # 짝수면 왼쪽부터 x = b if isEven else w-1 - b return [y,x,isEven] n_y,n_x,n_isEven = xyCalculate(n) num_y,num_x,num_isEven = xyCalculate(num) answer = n_y-num_y if n_isEven: # 왼쪽부터참 if num_x&gt; n_x: answer -= 1 else: if num_x&lt;n_x: answer -= 1 return answer + 1\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","pathToRoot":"../..","attachments":[],"createdTime":1739903389291,"modifiedTime":1757348343297,"sourceSize":1053,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_택배 상자 꺼내기_389478.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","showInTree":true,"treeOrder":338,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html":{"title":"p_퍼즐게임챌린지","icon":"","description":"퍼즐난이도 : diff\n현퍼즐 소요시간:time_cur\n이전퍼즐 소요시간: time_prev\n내숙련도 : level\nif diff &lt;= level , +=time_cur\nif diff &gt; level , diff-level 만큼틀림\n틀릴때마다 time_cur + time_prev\n만약풀면 앞에꺼 다시안풀어도되니깐 time_cur\nlimit 시간이 정해져있음\n시간안에 해결할 수 있는 최소의 숙련도를 구하라.이분탐색이용하면 될꺼가튼데?\n문제를 잘못이해햇다 이전꺼전부를푸는게아니라 바로 이전꺼만 풀면되는것엿다.\n그리고 처음에는 Math.max썼는데 이거때매 에러남 인자길이가 너무길어지면 에러가 날 수 있다고 한다.\n그리고 숙련도가 양의 정수라는 지문을 뻬먹었엇다.function solution(diffs, times, limit) { let start = 0; let end = 100000; let mid; while(start&lt;=end){ let time_prev = 0 mid = parseInt((start+end)/2) for(let i in diffs){ if(diffs[i]&lt;= mid){ time_prev += times[i] }else{ let wrong = diffs[i]-mid let before = i&lt;1? 0: times[i-1] time_prev += before*wrong + times[i]*(wrong+1) } } // console.log(start,end,mid,time_prev,limit) if(time_prev === limit) return mid if(time_prev&lt;limit){ end = mid -1; }else{ start = mid + 1 } } if(start&lt;1) return 1 return start\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","pathToRoot":"../..","attachments":[],"createdTime":1731829864201,"modifiedTime":1757348335507,"sourceSize":1741,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_퍼즐게임챌린지.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","showInTree":true,"treeOrder":339,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html":{"title":"p_퍼즐조각채우기_84021","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/84021?language=python3\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/84021?language=python3</a>조각은 회전가능 뒤집기 불가기존에는 스탭에 따라 노드를 기억하거나 스탭(깊이)에 따른 이전스탭에 대한 차이값을 저장해야한다고생각했다, (이렇게하면 3차원이상...)근데 걍 기준점에 대해서 갈 수 있는 노드의 리스트를 얻으면 된다. 2차원배열. (x,y저장할때 1차원생기니깐)그리고 여기서는 조건이 있었다.from collections import deque\nimport copy\nmove = [[-1,0],[1,0],[0,-1],[0,1]] def bfs(arr,y,x,visit): # dif는 비교대상 visit table은0 다른건1 narr = copy.deepcopy(arr) limit = [len(narr)-1,len(narr[0])-1] q = deque([(y,x)]) shape = [(0,0)] # 기준점중심으로 바뀐 정도만 저장 narr[y][x] = visit while q: ny,nx = q.popleft() for m in move: my = ny + m[0] mx = nx + m[1] if my&lt;0 or mx&lt;0 or my&gt; limit[0] or mx &gt; limit[1]: continue if narr[my][mx] != visit: continue narr[my][mx] = visit shape.append((my-y,mx-x)) q.append((my,mx)) return shape def find_board(game_board,shapes): cnt = 0 for i in range(len(game_board)): for j in range(len(game_board[0])): if game_board[i][j] == 0: shape = bfs(game_board,i,j,1) if shape in shapes: shapes.remove(shape) cnt += 1 return [game_board,cnt] def solution(game_board, table): shapes = [] for i in range(len(table)): for j in range(len(table[0])): if table[i][j] == 1: shape = bfs(table,i,j,0) shapes.append(shape) cnt = 0 for _ in range(4): [game_board,n_cnt] = find_board(game_board,shapes) cnt += n_cnt print(shapes) game_board = list(map(list,zip(*game_board[::-1]))) [game_board,n_cnt] = find_board(game_board,shapes) cnt += n_cnt return cnt\n","aliases":[],"inlineTags":[],"frontmatterTags":["#모름"],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","pathToRoot":"../..","attachments":[],"createdTime":1725435943810,"modifiedTime":1757348631596,"sourceSize":2551,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_퍼즐조각채우기_84021.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","showInTree":true,"treeOrder":340,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html":{"title":"P_합승택시요금","icon":"","description":"서로다른 사람 A,B가 같은 곳에서 출발해서 각각 다른지점에 갈려고한다.플로이드워셜일 각이 빡온다.\n출발지는하나이나. 경유햇을경우!\n역시맞앗다 ㅋㅋ\n이때 유의해야할께 k가 가장 밖에잇어야한다는거시다.!function solution(n, s, a, b, fares) { //n 지점개수 , s 시작점, ab 각각 집들 //fares [c, d, f] c&lt;-&gt;d 의 비용 : f a -= 1; b -= 1; s-=1; let dist = []; for(let i =0;i&lt;n;i++){ let tmp = []; for(let j =0;j&lt;n;j++){ if(i===j){ tmp.push(0) }else{ tmp.push(Infinity); } } dist.push(tmp) } for(let i =0;i&lt;fares.length;i++){ let [c,d,f] = fares[i]; if(dist[c-1][d-1]&gt;f){ dist[c-1][d-1] = f dist[d-1][c-1] = f } } for(let k =0;k&lt;n;k++){ for(let i =0;i&lt;n;i++){ for(let j =0;j&lt;n;j++){ dist[i][j] = Math.min(dist[j][i],dist[i][j],dist[i][k]+dist[k][j]); dist[j][i] = dist[i][j] } } } // console.log(dist) let answer = dist[s][a]+dist[s][b]; // console.log(answer) for(let k =0;k&lt;n;k++){ let tmp = dist[s][k]+ dist[k][a]+dist[k][b]; answer = Math.min(tmp,answer) } return answer;\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","pathToRoot":"../..","attachments":[],"createdTime":1731907778421,"modifiedTime":1757348323107,"sourceSize":1628,"sourcePath":"600-알고리즘 & 코딩테스트/problem/P_합승택시요금.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","showInTree":true,"treeOrder":341,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html":{"title":"p_홀짝트리_388354","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/388354?language=python3\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/388354?language=python3</a>1차답\"\"\"\n홀짝 트리 : 노드번호의 홀짝여부와 자식노드의 개수의 홀짝여부가 일치\n역 ~ : ~가 반대\n모두다 트리긴함&lt;&lt; 사이클이ㅣ없음\n하나씩 루트노드로지정해서\n\"\"\"\nimport copy def solution(nodes, edges): dic = {} answer = [0,0] for n in nodes: dic[n]=[] for e in edges: dic[e[0]].append(e[1]) dic[e[1]].append(e[0]) for n in nodes: data=checkTree(n,copy.deepcopy(dic),None) if data != 0: answer[data-1] +=1 # print(\"결과\",n,data,answer) return answer def checkTree(root,dic,isHoljjak): # print(id(dic)) # isHoljjak : 1- 홀짝, 2-역홀짝 if isHoljjak is None: # 루트노드 childLen = len(dic[root]) if root%2 == childLen%2: isHoljjak = 1 else: isHoljjak = 2 else: # 자식노드 childLen = len(dic[root]) - 1 # 부모 제외 if root%2 == childLen%2: if isHoljjak != 1: return 0 else: if isHoljjak != 2: return 0 # 자식들 확인 for child in dic[root]: dic[child].remove(root) result = checkTree(child, dic, isHoljjak) if result == 0: return 0 return isHoljjak\n2차답def solution(nodes, edges): dic = {} answer = [0,0] for n in nodes: dic[n]=[] for e in edges: dic[e[0]].append(e[1]) dic[e[1]].append(e[0]) holjjak = [0, 0] # [홀짝 트리 수, 역홀짝 트리 수] for node in nodes: try: result = checkTree(node, dic.copy(), None) if result != 0: holjjak[result-1] += 1 except: pass return holjjak\n3차답\n아마 각노드마다 2가지경우가 있을 것같다\n루트노드인경우\n루트노드가아닌경우\n이렇게해서 저장을하고돌려야할것같다\n아님아님\n4차답\n레전드 한트리에 하나의 루트노드면 특정트리임\n그래서 루트일때자식일때 어떤노드인지 받아놓고\n한트리내에서 루트일때 A 자식일때 다 B면\n또 뻐킹 런타임에러가난다.\n근데 조금 개선되엇다.\n그냥queue를이용하는측면이ㅓㅇ떤가싶다.def solution(nodes, edges): graph = {n: [] for n in nodes} visited = set() for a, b in edges: graph[a].append(b) graph[b].append(a) holjjakDic = {} # 보닌이 홀찍인지 역홀짝인지 for n in nodes: childLen = len(graph[n]) a = n%2 b = childLen%2 c = (childLen-1)%2 # 루트일때 자식일때 holjjakDic[n] = [1 if a==b else 2,1 if a==c else 2] # print(holjjakDic) holjjak = [0, 0] # [홀짝 트리 수, 역홀짝 트리 수] def dfs(node,dic): if node in visited: return False visited.add(node) r,c=holjjakDic[node] Rkey = f'R{r}' Ckey = f'C{c}' dic[Rkey].append(node) dic[Ckey].append(node) for child in graph[node]: dfs(child,dic) for node in nodes: if node in visited: continue dic = { \"R1\":[], \"R2\":[], \"C1\":[], \"C2\":[], } dfs(node, dic) if len(dic[\"R1\"]) == 1: holjjak[0] +=1 if len(dic[\"R2\"]) == 1: holjjak[1] +=1 # print(node,dic) return holjjak\n5차답안 (성공!)\n역시 재귀는 쓰래기다\n라고하면안되겟죠?\ndepth가 커져서 메모리를 많이잡아 먹어 에러가 나는거 같다.\n따라서 dfs에서 bfs\n즉 queue와 while문을 이용하엿더니 통과하였다.from collections import deque def solution(nodes, edges): graph = {n: [] for n in nodes} visited = set() for a, b in edges: graph[a].append(b) graph[b].append(a) holjjakDic = {} # 보닌이 홀찍인지 역홀짝인지 for n in nodes: childLen = len(graph[n]) a = n%2 b = childLen%2 c = (childLen-1)%2 # 루트일때 자식일때 holjjakDic[n] = [1 if a==b else 2,1 if a==c else 2] # print(holjjakDic) holjjak = [0, 0] # [홀짝 트리 수, 역홀짝 트리 수] dic = {} for node in nodes: if node in visited: continue dic = { \"R1\":[], \"R2\":[], \"C1\":[], \"C2\":[], } queue = deque([node]) while len(queue)&gt;0: # print(queue) k = queue.popleft() if k in visited: continue visited.add(k) r,c=holjjakDic[k] Rkey = f'R{r}' Ckey = f'C{c}' dic[Rkey].append(k) dic[Ckey].append(k) for child in graph[k]: if child not in visited: queue.append(child) if len(dic[\"R1\"]) == 1: holjjak[0] +=1 if len(dic[\"R2\"]) == 1: holjjak[1] +=1 # print(node,dic) return holjjak\n","aliases":[],"inlineTags":[],"frontmatterTags":["#시간초과"],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","pathToRoot":"../..","attachments":[],"createdTime":1739871353110,"modifiedTime":1757348634458,"sourceSize":5645,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_홀짝트리_388354.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","showInTree":true,"treeOrder":342,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/s_나무공격.html":{"title":"s_나무공격","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://softeer.ai/practice/9657\" target=\"_self\">https://softeer.ai/practice/9657</a>import sys n,m = map(int,sys.stdin.readline().strip().split())\narr = []\nallN = 0\nfor _ in range(n): tmp = sys.stdin.readline().strip().split().count('1') arr.append(tmp) allN += tmp\nfor _ in range(2): s,e = map(int,sys.stdin.readline().strip().split()) for i in range(s-1,e): if arr[i] &gt; 0: arr[i] -= 1 allN -= 1 print(allN)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/s_나무공격.html","pathToRoot":"../..","attachments":[],"createdTime":1738951570311,"modifiedTime":1757347752421,"sourceSize":686,"sourcePath":"600-알고리즘 & 코딩테스트/problem/s_나무공격.md","exportPath":"600-알고리즘-&-코딩테스트/problem/s_나무공격.html","showInTree":true,"treeOrder":343,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html":{"title":"s_탑의 높이","icon":"","description":"초기에\n그냥 단순 바로 주변껄 보려고했다. 근데생각해보니 언제 오르막길이나타나는지 구해야할것같다\n그래프라고 생각해보자 언제 오르막과 언제 내리막이 나타나는지 구하면된다.\n!```python\nimport sysdef addHeight(tarr,idx,k):\nif k&lt;0:\nreturn -1\ntarr[idx] += 1\nk -= 1\nleft = idx - 1\nright = idx + 1\nif left &gt;= 0 and tarr[idx]-tarr[left]&gt;1:\nreturn addHeight(tarr,left,k)\nif right &lt; len(tarr) and tarr[idx]-tarr[right]&gt;1:\nreturn addHeight(tarr,right,k)\nreturn kn, k = map(int,sys.stdin.readline().strip().split())arr = list(map(int,sys.stdin.readline().split()))\nlength = len(arr)result = 0\nif length &lt; 2 :\nresult = arr[0] + k\nelse:\nkeyIdx = [0]\npickIdx = [0] if arr[0]-arr[1]&gt;0 else []\nl = 0\ni = 2\nwhile i&lt;length:\nm = i-1\nr = i\nif arr[m] == arr[r]:\ni += 1\nelse:\nldif = arr[l] -arr[m]\nrdif = arr[r]-arr[m]\ncheck = (ldif&gt;0 and rdif&gt; 0) or (ldif&lt;0 and rdif&lt;0)\nif check:\n# 꼭짓점이다. 기울기의 방향이 바뀌는 구간이다.\nkeyIdx.append(m)\nif ldif&lt;0 and rdif&lt;0: pickIdx.append(m)\nl = m\ni = m+2\nelse:\ni += 1\nif arr[length-1]-arr[keyIdx[-1]]&gt;0 : pickIdx.append(length-1)\nkeyIdx.append(length-1)\n# print(keyIdx,pickIdx)\nif len(pickIdx) is 0 :\nf = 0\nwhile k&gt;=0:\nf += 1\nk -= f\nresult = f+arr[0]-1else: top = arr[pickIdx[0]] # tmpkeyIdx = keyIdx[:] for p in pickIdx: tmpk = k tmparr = arr[:] pTop = tmparr[p] while tmpk &gt;0: tmpk = addHeight(tmparr,p,tmpk) # print('tmpk',tmpk,p,tmparr) if tmpk &gt;= 0 : pTop = tmparr[p] # print('pTop',pTop) if top &lt; pTop: top = pTop result = top\nprint(result)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"},{"heading":"고점을 고르고","level":1,"id":"고점을_고르고_0"},{"heading":"고점중에 주변이 차이가 안나느것을 고른다","level":1,"id":"고점중에_주변이_차이가_안나느것을_고른다_0"},{"heading":"안전하게 하나씩더하는 함수를 만들어야할듯","level":1,"id":"안전하게_하나씩더하는_함수를_만들어야할듯_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","pathToRoot":"../..","attachments":[],"createdTime":1738869117984,"modifiedTime":1757348285248,"sourceSize":2544,"sourcePath":"600-알고리즘 & 코딩테스트/problem/s_탑의 높이.md","exportPath":"600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","showInTree":true,"treeOrder":344,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/s_cpti.html":{"title":"s_CPTI","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://softeer.ai/practice/11002\" target=\"_self\">https://softeer.ai/practice/11002</a>중복제거를 할람면 sorting을행햐ㅏㅁ 걍 돌리는게맞음index + \":\" + 숫자 이렇게해서 각각 set을 만들어 차집합으로 하면 어떨까 생각햇지만 그것또한 for문이돌아서안댄다dif=bin(b ^ tmp)[2:] 자르기도 걸려서 안하는게 좋다..import sys n,m = sys.stdin.readline().strip().split(' ') # 사람 수 , 문자열 길이\n# 다른게 두개 이하면 친밀감 느낌 ans = 2** int(m) - 1\ncnt = 0 before = [] for _ in range(int(n)): tmp = int(sys.stdin.readline().strip(),2) nCnt = 0 for b in before: dif=bin(b ^ tmp).count('1') # print(dif,bin(b ^ tmp)[2:]) if dif &lt; 3 : nCnt += 1; cnt += nCnt # print(\"cnt\",cnt,nCnt) # print(\"----\") before.append(tmp) # print(before)\nprint(cnt)\n이렇게 하면 o(n^2 * m) 이다근데 이렇게 하면안된다 M이 훨씬적으니깐 m을 기준으로 찾아야한다.def count_intimate_pairs(N, M, cptis): cpti_count = {} # key는 M길이의 값이고 value는 그게 몇개인지 알려줌 total_pairs = 0 for cpti in cptis: x = int(cpti, 2) count = 0 # 동일한 CPTI count += cpti_count.get(x, 0) # 1비트 차이나는 CPTI for i in range(M): y = x ^ (1 &lt;&lt; i) # 하나씩 바꿔봐요 count += cpti_count.get(y, 0) # 2비트 차이나는 CPTI for i in range(M): for j in range(i+1, M): y = x ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; j)# 두개씩 바꿔봐요 count += cpti_count.get(y, 0) total_pairs += count cpti_count[x] = cpti_count.get(x, 0) + 1 # 몇개있는지 저장,업데이트 return total_pairs # 입력 처리\nN, M = map(int, input().split())\ncptis = [input().strip() for _ in range(N)] # 결과 출력\nresult = count_intimate_pairs(N, M, cptis)\nprint(result) M≤30이므로, 주어진 이진 문자열을 32비트 정수로 저장 가능하며 M비트 정수로 취급할 수 있습니다.각 사람의 CPTI를 순서대로 순회하며, 현재 사람의 CPTI를 나타내는 이진 문자열을 M비트 정수 xx로 변환한다고 합시다. 그러면 그 사람이 친밀감을 느낄 수 있는 CPTI는 x와 최대 두 위치의 비트가 다른 M비트 정수입니다. 이를 위해 고려할 경우는 다음 세 가지입니다:\nx와 동일한 값.\nx와 한 개의 비트에서만 차이가 나는 값.\nx와 두 개의 비트에서 차이가 나는 값.\n이 값들이 사람들의 CPTI 목록에서 이전에 등장한 횟수를 전부 더하면 현재 사람이 친밀감을 느끼는 사람의 수를 구할 수 있습니다. 등장 횟수를 효율적으로 구하고 저장하기 위해 HashMap이나 TreeMap을 사용합니다. 2번, 3번에 해당하는 값들 모두 bitwise XOR 연산을 사용해 각각 O(M)O, O(M^2)에 순회할 수 있습니다. 최종 시간 복잡도는 선택한 자료 구조에 따라\nO(N M^2 ) 또는 O(N M^2 * logN) 이 됩니다.한 가지 주의할 점은 각 사람에 대해 O(M2)O(M2)개의 후보들의 등장 횟수를 Map에 저장하는 방식으로 문제를 풀 경우 Map의 원소의 크기가 너무 커져서 시간/메모리초과가 발생하게 됩니다. 따라서 각 단계에서 xx의 등장 횟수만 Map에 누적해야 합니다.","aliases":[],"inlineTags":[],"frontmatterTags":["#모름"],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"},{"heading":"ㄹㅇ 답","level":3,"id":"ㄹㅇ_답_0"},{"heading":"추가해설","level":3,"id":"추가해설_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/s_cpti.html","pathToRoot":"../..","attachments":[],"createdTime":1738860106711,"modifiedTime":1757348322677,"sourceSize":3862,"sourcePath":"600-알고리즘 & 코딩테스트/problem/s_CPTI.md","exportPath":"600-알고리즘-&-코딩테스트/problem/s_cpti.html","showInTree":true,"treeOrder":345,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html":{"title":"t_1로만들기_217","icon":"","description":"4가지 연산이 주어 졌을때 연산을 최소화해서 1을 만들고자함\n연산횟수 구하세용이게 다이나믹프로그래밍로 풀어라는 방법이 안주어졌다면 햇갈렷을 것 같다. 그리디로 하면 틀린다.\nans이라는 이전 계산 스탭들을 저장하는 배열을 만들어서 활용했다.from collections import deque n = int(input.strip()) arr = deque([n])\nans = [-1] * (n+1)\nans[n] = 0 def cal(v, step): if v % 5 == 0: arr.append(v//5) ans[v//5]=step+1 if v % 3 == 0: arr.append(v//3) ans[v//3]=step+1 if v % 2 == 0: arr.append(v//2) ans[v//2]=step+1 arr.append(v-1) ans[v-1]=step+1 while ans[1] &lt; 0 and len(arr)&gt;0: tmp = arr.popleft() cal(tmp,ans[tmp]) print(ans[1])\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075819,"modifiedTime":1757347752420,"sourceSize":1054,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_1로만들기_217.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","showInTree":true,"treeOrder":346,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html":{"title":"t_1이될때까지_99","icon":"","description":"n이 1이 되야함 아래의 과정을 통해..\nN -1을한다\nN/k를 한다(나누어떨어질때만 가능)\n나누는게 더 극단적이니 나누는것 &gt; 빼는것을 고려해볼듯하다.\nN-1이니 나누는것보다 N-1이 더 빠를 가능성은 없다\n그리고 N/k의 값은 N-1로도 모두 구현이 가능하다.\nTHEREFORE GREEDYimport sys\nn,m = map(int, sys.stdin.readline().split()) cnt = 0\nwhile n&gt;1: tmp = n%m if tmp == 0: n //= m cnt += 1 else: n -= tmp cnt += tmp print(cnt)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075819,"modifiedTime":1757347752371,"sourceSize":778,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_1이될때까지_99.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","showInTree":true,"treeOrder":347,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html":{"title":"t_개미전사_220","icon":"","description":"식량창고는 일직선\n선택적으로 약탈, 인접한 식량창고가 공격당할시 알 수 있음, 최소한칸떨어저야함\n==&gt; 들키지 않고 식량창고를 약탈할때 얻을 수 있는 식량의 최대값의식적으로 해당 알고리즘을 쓴다고 생각하면 쉽게 나오는 것 같다.\n한칸뛰고 붙어있는거 두개를 비교해서 큰거를 적용하면된다. 이렇게 두가지 case가 있다는 것만 인식하면 될 것 같다.\n문제의 답안과 풀이가 조금 다르지만 개념자체는 비슷하게 가져간것 같고 답도 맞는 것 같다.from collections import deque input = \"\"\"\n4\n1 3 1 5\n\"\"\" input = input.strip().split('\\n')\nstor = list(map(int,input[1].split()))\nleng = len(stor)\nfor i in range(2,leng): b = i-2 bb = i-3 if bb &lt; 0: stor[i] += stor[b] continue stor[i] += max(stor[b],stor[bb]) print(stor) print(max(stor[leng-1],stor[leng-2])) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075819,"modifiedTime":1757348265575,"sourceSize":1191,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_개미전사_220.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","showInTree":true,"treeOrder":348,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html":{"title":"t_거스름돈_87","icon":"","description":"동전 500,100,50,10일때 거슬러줘야할 동전의 최소 개수큰화패단위부터 greedy하게 돌려줌.\n큰단위가 작은 단위의 배수이다. 500은 100의 배수 100은 50의 배수 ...등\n이 조건이 어긋나면 그리디하면안됨\nex) 500 400 100이면 500은 400의 배수가 아니기에 greedy를 쓰면 답이틀림 800일경우 greedy -&gt; 500,100,100,100\n정답 -&gt; 400,400 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"},{"heading":"WHY","level":4,"id":"WHY_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075819,"modifiedTime":1757347752423,"sourceSize":653,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_거스름돈_87.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","showInTree":true,"treeOrder":349,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html":{"title":"t_게임개발_118","icon":"","description":"n * m 직사각형 , 육지 0 바다1\n바다 갈수없음, 상하좌우 이동가능\n반시계 90도\n가본칸없음 &gt; 전진, else 1\n다갈수없음, 방향유지한채 뒤로한칸후 1번순서로이동 뒤에가 바다일시 stop 나는 여기서 check_valid라고 arr안에 존재하는지 제한을 주었다.\n여기서는 근데 외각이 항상 바다로 되어있다고 햇으므로 필요있진않았지만 있는게좋을듯^.^import sys\n# y,x\nways = [[-1,0],[0,1],[1,0],[0,-1]]\n# 0이 육지다 북동남서순\n# 0 육지 1 바다 -1 가본곳\n# 실제로 갈건 반시계방향 &gt; -1씩해야함\n# 캐릭터가 방문한 칸수\ncol,row = map(int, sys.stdin.readline().split())\nny, nx, nway = map(int, sys.stdin.readline().split())\narr =[]\nfor c in range(col): arr.append(list(map(int, sys.stdin.readline().split()))) def check_valid(y,x): return x &gt;-1 and y &gt; -1 and x&lt;row and y &lt; col\narr[ny][nx] = -1\ncnt = 1\nmiss = 0\nwhile True: print(ny,nx,nway,miss,cnt) nway -= 1 if nway&lt;0: nway += 4 tmpy = ny + ways[nway][0] tmpx = nx + ways[nway][1] if check_valid(tmpy,tmpx): if arr[tmpy][tmpx] == 0: arr[tmpy][tmpx] = -1 ny = tmpy nx = tmpx miss = 0 cnt +=1 continue miss +=1 if miss &gt; 3: # 바라본 방향을 유지한 채 뒤로간다. ny -= ways[nway][0] nx -= ways[nway][1] if check_valid(ny,nx): if arr[ny][nx] != 1: miss = 0 continue break print(cnt)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075819,"modifiedTime":1757347752390,"sourceSize":1840,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_게임개발_118.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","showInTree":true,"treeOrder":350,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html":{"title":"t_도시분할계획_300","icon":"","description":"n개의 마을, m개의 길 길양방향가능\n길유지비가있음\n마을을 분할하고싶음\n각분리된마을한의 집들끼리 연결되어있어야함 마을에는 집이하나이상\n길도 필요없는 건 없어고 비용을 줄이쉠처음엔문제가 이해가 안됏다 각마을에서 집들끼리는 최소하나의 길이있어야한다는건 이해했지만\n연결된 집합들이 원래 두개로 나뉘어지는 것으로 이해했다.\nBut 항상 한뭉텅이고 내가 길하나를 없애서 두개의 그룹으로 만드는 것같다input = input.strip().split('\\n')\nn,m = map(int, input[0].split()) edges = [] for i in range(1, m+1): a, b, c = map(int, input[i].split()) edges.append((c,a,b)) edges.sort() parents = []\nfor i in range(n+1): parents.append(i) def find_parent(parents,v): if parents[v] != v: parents[v] = find_parent(parents,parents[v]) return parents[v] sum = 0\nmax_r = -1\nfor e in edges: c,a,b = e pa = find_parent(parents,a) pb = find_parent(parents,b) if pa != pb : sum += c if max_r &lt; c: max_r = c if pa &lt; pb: parents[pb]=pa else: parents[pa]=pb print(sum - max_r)\n가장 마지막꺼가 cost가 당연히 젤클꺼기에(sort했잔슴;;)\n비교가 필요없다..","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075819,"modifiedTime":1757348256263,"sourceSize":1576,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_도시분할계획_300.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","showInTree":true,"treeOrder":351,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html":{"title":"t_떡볶이떡만들기_201","icon":"","description":"적어도 M만큼의 떡을 챙겨야함 == M이딱안맞을 수 있음높이가 가장높은것기준을 end로 잡고 이진탐색을하면될듯하다.\n탈출조건 : 합이 M보다 작음\n햇갈린 point : 탈출조건일때 Return값을 end를 줘야하나\n탈출조건에 갔다는건 딱 맞는 값을 못 찾았다는것.\n그렇다고 하면 start는 만족하는값을 충족시키지못하고 end는 만족하는값을 넘는 값이다. therefore end를 리턴해줘야함\n실전에서는 실수를 줄이기 위해서 떡양이 충분할때 계속 result값에 기록하는 편이 좋을 듯.import sys n, m = map(int, sys.stdin.readline().strip().split())\narr = list(map(int, sys.stdin.readline().strip().split())) def cal_sum(v): sum = 0 for a in arr: tmp = a - v if tmp&gt;0: sum +=tmp return sum # end def search(start,end): if start&gt;end: return end mid = (start+end)//2 sum = cal_sum(mid) if m == sum : return mid elif m &lt; sum: # sum이 크다 = 자르는 길이가 작다 return search(mid+1,end) return search(start,mid-1) print(search(0,max(arr))) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075820,"modifiedTime":1757347752376,"sourceSize":1408,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_떡볶이떡만들기_201.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","showInTree":true,"treeOrder":352,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html":{"title":"t_미래도시_259","icon":"","description":"<a data-href=\"비용이있는 최단경로\" href=\"600-알고리즘-&amp;-코딩테스트/theory/비용이있는-최단경로.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">비용이있는 최단경로</a>n의 회사 도로를 통해 연결되어 있다.\n1번회사에 위해 있으며 k번방문 &gt; x 번방문\n도로는 정확히 1만큼의 시간으로 이동할 수 있다출발지가 정해져있다. &gt; 다익스트라다\n라고 생각했지만 중간에 k &gt; x 로 가는 일이있으니깐 훼이엿다 플로이드 워셜이였다.# 1번회사에 위해 있으며 k번방문 &gt; x 번방문 input = input.strip().split('\\n')\nx , k = map(int, input.pop().split())\nn , m = map(int, input[0].split()) inf = int(1e9)\ngraph = [[inf]*(n+1) for _ in range(n+1)] for i in range(1, len(input)): a,b = map(int,input[i].split()) graph[a][b] = 1 graph[b][a] = 1 for a in range(1,n+1): for b in range(1,n+1): for k in range(1,n+1): if a == b or b == k or a ==k: graph[b][b] = 0 continue tmp = min(graph[a][b],graph[a][k]+graph[k][b]) graph[a][b] = tmp graph[b][a] = tmp\nsum = graph[1][k] + graph[k][x]\nprint(sum if sum &lt; inf else -1)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":["600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html"],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075820,"modifiedTime":1757348250034,"sourceSize":1306,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_미래도시_259.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","showInTree":true,"treeOrder":353,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html":{"title":"t_미로탈출_152","icon":"","description":"n * m 미로\nstart 1,1 // 출구 n,m\n괴물 o : 0 , 괴물 x : 1\n최소 개수, 시작칸과 마지막 칸 포함common한 bfs문제였다.import sys\nfrom collections import deque\nn,m = map(int, sys.stdin.readline().split())\narr = []\nfor i in range(n): arr.append(list(map(int,sys.stdin.readline().strip()))) # y,x\nways = [[-1,0],[1,0],[0,-1],[0,1]] # now\nny = 0\nnx = 0 def bfs(y,x): q = deque([[y,x]]) arr[y][x] = -1 while len(q)&gt;0: ty,tx = q.popleft() step = arr[ty][tx] for w in ways: dy = ty + w[0] dx = tx + w[1] if dy&gt;-1 and dx&gt; -1 and dy&lt;n and dx&lt;m: if arr[dy][dx] &gt; 0: q.append([dy,dx]) arr[dy][dx] = step-1 bfs(0,0)\nprint(-arr[n-1][m-1]) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075820,"modifiedTime":1757347752417,"sourceSize":1024,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_미로탈출_152.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","showInTree":true,"treeOrder":354,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html":{"title":"t_바닥공사_223","icon":"","description":"바닥을 덮개로 채워야한다. 가로 N, 세로 2이다.\n덮개는 (1,2) , (2,1) , (2, 2) 의 크기를 가지고 있다.\n바닥을 채우는 모든 경우의 수를 구하시오\n(2,2) = (1,2) 2 or (2,1) 2틀렸던 생각2,2 로 다 채우고 나머지는 1,2 로 매꾼다\n2,2 를 변형할 수 있는 다른 덮개로 바꾸는 경우를 샌다\n==&gt; 수학적으로 풀면 풀수 있을 듯하지만… 일단 못풀고 시험당일날 생각하기는 어려움\n옳은 답\n이미 다채워져 있고 나머지를 채운다는 식으로 접근을 한다\n하나남았을땐 1,2 인 직사각형\n2개 남았을 땐 1,2인거 두개 2,1인거 두개 2,2인거 하나 넣는 경우의수 3개가 존재한다.\n하지만 1,2인가 두개인경우는 하나남았을때를 두번 반복한것과 겹친다.\n고로 빼줘야한다.\nTherefore , 1 남았을 경우 1개 {(1,2)} , 2개 남았을 경우 2개 {(2,1),(2,2)} 이런식으로 된다.\n탑다운 형식\nrow = int(input.strip()) # a1 = 1 a2 = 3 def search(i): if i == 1 : return 1 if i == 2 : return 3 return search(i-1) + search(i-2)*2 print(search(row)%796796) 보텀업 형식\n# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화 n = int(input.strip()) d = [0] * 1001 d[1] = 1 d[2] = 3 for i in range(3, n + 1): d[i] = (d[i - 1] + 2 * d[i - 2]) % 796796 print(d[n])\n수가 매우 커지면 탑다운 형식은 메모리 문제가 생기기 쉽다. 재귀는 깊이 제한이 있기 때무네","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075820,"modifiedTime":1757348243171,"sourceSize":1837,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_바닥공사_223.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","showInTree":true,"treeOrder":355,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html":{"title":"t_부품찾기_197","icon":"","description":"\n천만계이상이라 이진탐색으로하는게 좋다\n계수정렬로도 충분히구현가능하다(시간복잡도는 낮으나 메모리많이소요)\n그냥 반복문 쓸꺼면 set을 이용하는편이 낫다.\nsearch함수에서 Return을 안해주는 오류를 범했다.\nreturn 을안해주면 재귀에서의 응답이 최종적으로 도출이안된다.\nimport sys n = int(sys.stdin.readline().strip())\nnarr = list(map(int, sys.stdin.readline().strip().split()))\nm = int(sys.stdin.readline().strip())\nmarr = list(map(int, sys.stdin.readline().strip().split())) narr.sort() def search(num,start,end): if start &gt; end: return False mid = (start+end)//2 if narr[mid] == num: return True elif narr[mid] &lt; num : return search(num,mid+1,end) return search(num,start,mid-1) ans = []\nfor ma in marr: tmp = 'yes' if search(ma,0,n-1) else 'no' ans.append(tmp) print(\" \".join(ans))\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075820,"modifiedTime":1757348238582,"sourceSize":1200,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_부품찾기_197.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","showInTree":true,"treeOrder":356,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html":{"title":"t_상하좌우_110","icon":"","description":"n * n 정사각형\n시작좌표 1,1 상하좌우의 이동문자를 통해 도착하는 목적지를 찾아라별거없음import sys\nnow = [1,1]\nmax = int(sys.stdin.readline().strip())\narr = sys.stdin.readline().split()\n# y,x\nway = { 'R' : [0,1], 'L' : [0,-1], 'U' : [-1,0], 'D' : [1,0]\n}\nfor a in arr: ny = way[a][0] + now[0] nx = way[a][1] + now[1] if(ny&lt;=max and nx &lt;= max and ny&gt;0 and nx &gt;0): now = [ny,nx] print(now)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075821,"modifiedTime":1757347752384,"sourceSize":711,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_상하좌우_110.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","showInTree":true,"treeOrder":357,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html":{"title":"t_숫자카드게임_96","icon":"","description":"n,m형태의 2차원배열\n행선택 &gt; 가장 낮은 카드 뽑음\n이때 가장 높은 수를 뽑고싶음해설할게없음.import sys n,m = map(int, sys.stdin.readline().split())\nmax_num = 0\nfor i in range(0,n): tmp = min(map(int, sys.stdin.readline().split())) if max_num &lt; tmp: max_num=tmp print(max_num)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075821,"modifiedTime":1757347752406,"sourceSize":559,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_숫자카드게임_96.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","showInTree":true,"treeOrder":358,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_시각_113.html":{"title":"t_시각_113","icon":"","description":"정수 n입력시 0시 0분 0초부터 n시 59분 59초까지 중 3이 포함되는 경우의 수걍 무작정돌면서 가지치기하는식으로 코드를 짜봤다 .\nbut 3이 포함되는 경우가 한정적이니, 이경우를 미리생각해서 숫자로 식을 구할수도 잇을듯하다.import sys\nlimit = int(sys.stdin.readline().strip()) # h 0-23 m 0-59 s 0-59\n# h&gt; 3,13,23 60*60\n# m &gt; 3,13,23 - 53 5 60개\nh = 0\nm = 0\ns = 0 count = 0 for h in range(0,limit+1): if '3' in str(h): count += 60*60 continue for m in range(0,60): if '3' in str(m): count += 60 continue for s in range(0,60): if '3' in str(s): count += 1 continue print(count) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_시각_113.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075821,"modifiedTime":1757347752378,"sourceSize":1015,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_시각_113.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_시각_113.html","showInTree":true,"treeOrder":359,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html":{"title":"t_왕실의나이트_115","icon":"","description":"8 * 8 체스판\n말형태로이동가능 가로세로 2,1 or 1,2\n행 1-8 , 열 a-h\na1형태로 입력8개의 경우의수가 있음 (기본적으로는)import sys\n# x a-h\n# y 1-8\nmax = 8\ninput = sys.stdin.readline().strip() x = ord(input[0])-ord('a')\ny = int(input[1])-1\ncnt = 0 way = [[1,2],[-1,2],[1,-2],[-1,-2],[2,1],[-2,1],[2,-1],[-2,-1]]\nfor tmx,tmy in way: tx = x+tmx ty = y+tmy if tx &gt; -1 and ty &gt; -1 and tx &lt; max and ty&lt; max: cnt+=1 print(cnt)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075821,"modifiedTime":1757347752386,"sourceSize":717,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_왕실의나이트_115.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","showInTree":true,"treeOrder":360,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html":{"title":"t_음료수얼려먹기_149","icon":"","description":"n * m\n구멍 뚤린부분 0, 칸막이 1\n상하좌우 붙어있는경우 연결되어있는 것으로 간주.\n얼음의 덩어리 개수가 몇갠가bfs가 더 올바르게 보인다.(복잡도가 더 떨어질듯)from collections import deque\nimport sys\narr = []\nwhile True: tmp = list(map(int, sys.stdin.readline().strip())) if len(tmp)&lt;1: break arr.append(tmp)\n# y,x\n# 상하좌우\nways= [[-1,0],[1,0],[0,-1],[0,1]]\nylimit = len(arr)\nxlimit = len(arr[0])\ncnt = 0 # visit = -1\ndef bfs(y,x): q = deque([[y,x]]) while len(q)&gt;0: ny,nx = q.popleft() arr[ny][nx]=-1 for way in ways: ty = ny + way[0] tx = nx + way[1] if ty&gt;-1 and tx &gt; -1 and ty &lt; ylimit and tx &lt; xlimit: if arr[ty][tx] ==0: q.append([ty,tx]) for y in range(ylimit): for x in range(xlimit): if arr[y][x] == 0: bfs(y,x) cnt +=1 print(cnt)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757347752381,"sourceSize":1201,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_음료수얼려먹기_149.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","showInTree":true,"treeOrder":361,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_전보_262.html":{"title":"t_전보_262","icon":"","description":"N개의 도시\na to b로 전보 보낼라면 a to b통로가 있어야함\n각각 통로마다 보내는 시간이 있음\nc출발하여 최대한 많이 퍼저 나갈것.각 통로마다 보내는 시간이 없으면 bfs로 해결이 가능할 것이다.\n실수한부분\nheapq에서는 우선순위로 두고싶은걸 앞에둬야한다!\n큐에담겨있으므로 앞에 더 짧은 비용이 온것들이 왔을수 있다. 나의 생각상으로는 인접 노드들 불러오는 for문안에 sum이 더작은가 하는 if문에서 걸러지긴하지만\n시간복잡도상으로는 이전에 더 짧은 시간이 온경우에는 continue처리해주는게 좋을것같다. import heapq input = \"\"\"\n3 2 1\n1 2 4\n1 3 2\n\"\"\" input = input.strip().split('\\n') n,m,s = map(int, input[0].split())\ngraph = [[] for _ in range(n+1)] for i in range(1,len(input)): x,y,z = map(int, input[i].split()) graph[x].append((y,z)) q = [] inf = 1e9\n# 받게되는 도시는 몇개이며 받는데까지 걸리는 시간 times = [inf] * (n+1) heapq.heappush(q,(0,s))\ntimes[s] = 0\nwhile q: node,cost = heapq.heappop(q) if times[node] &lt;cost: # 더 짧은 놈이 방문한경우가 있음. continue for n1,c1 in graph[node]: sum = cost + c1 if times[n1]&gt; sum: times[n1] = sum heapq.heappush(q,(sum , n1)) cnt = 0\nmax_v = 0 for t in times: if t&lt;inf: cnt += 1 if max_v&lt;t: max_v = t print(cnt,max_v)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_전보_262.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757348210489,"sourceSize":1770,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_전보_262.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_전보_262.html","showInTree":true,"treeOrder":362,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html":{"title":"t_커리큘럼_303","icon":"","description":"강의 1부터 n까지. 도잇에 여러강의 들을 수 있고 일부는 선수강의가 있다.\nn개 강의에 대하여 수강하기까지 걸리는 최소의 시간을 각각출력from collections import deque input = input.strip().split('\\n')\nn = int(input[0])\ntimes = [0]*(n+1)\nq = []\n# 진입차수가 0이다. = 강의를 들어도된다.\nfront = [[] for _ in range(n+1)]\nfor i in range(1,n+1): t,*arr,z = list(map(int,input[i].split())) times[i] = t front[i]= arr if len(arr) == 0 : q.append(i) while q: nq = [] syn = [[] for _ in range(n+1)] # q는 진입차수 0인거 for i in q: for j in range(1,n+1): leng = len(front[j]) if leng != 0 and i in front[j]: # 들은과목 들어야하는 과목에서빼준다.. syn[j].append(times[i]) if leng == 1: nq.append(j) times[j] += max(syn[j]) front[j].remove(i) q = nq for i in range(1,n+1): print(times[i])\n나는 while문에서 진입차수가 0인 즉 동시에 실행할 수있는 과목중에서\n특정 과목의 선수과목중에 윗줄에서 말한 과목이 있으면 리스트에 저장했다가\n해당과목을 들어야할때 즉 진입차수가 0일때 동시에 들어야할 과목중에 max를 선택하는식으로 짯다.책에서는\ntimes를 deepcopy하여\ndeepcopy를 하기 위해서는 import copy copy.deepcopy(list)를 이용하여 할 수 있다.result[i] = max(result[i], result[now] + time[i])\n이런식으로 해도됨.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757348202539,"sourceSize":1872,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_커리큘럼_303.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","showInTree":true,"treeOrder":363,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html":{"title":"t_큰수의법칙_92","icon":"","description":"배열이 있을때 합이 가장 클 때의 결과를 출력\n입력 : N M K\nM: M번 더 할 수 있음\nK : K번 연속으로 수를 사용할 수 있음 import sys k,n,m = map(int, sys.stdin.readline().split())\narr = list(map(int, sys.stdin.readline().split())) arr.sort(reverse=True) sum = 0\nflag = True while n &gt; 0: if flag: if n&lt;m: m=n sum += arr[0]*m n -= m flag=False else: sum += arr[1] n -= 1 flag= True print(sum)\n걍 눈속임을 준문제 사실상 0과 1 번째 밖에 안 필요함.\n예외 없음. 길이가 2이상이고 연속해서 사용하는횟수가 제한된거지","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757347752423,"sourceSize":899,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_큰수의법칙_92.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","showInTree":true,"treeOrder":364,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html":{"title":"t_팀결성_298","icon":"","description":"학생들에게 0부터 n까지 번호를 부여함\n모든학생은 처음에는 서로다른팀\n두가지 연산만 가능함. 팀합치기 &amp; 같은팀 여부확인\nif 같은팀 여부확인 연산일때 결과들을 출력함\n연산 a학생 b학생 0:합치기 1:같은팀여부확인걍 문제부터 유니온파인드 쓰라고 적혀져있는 문제라 방법은 딱히 고민하지 않아도된다.input = input.strip().split('\\n')\nn,m = map(int, input[0].split()) parents = [0] * (n+1)\nfor i in range(n+1): parents[i] = i def find_parent(parents,x): if parents[x] != x: parents[x] = find_parent(parents,parents[x]) return parents[x] arr = []\nfor i in range(1, m+1): f,a,b = map(int,input[i].split()) pa = find_parent(parents,a) pb = find_parent(parents,b) if f == 0: if pa &lt; pb: parents[pb] = pa else: parents[pa] = pb else: if pa != pb: print(\"NO\") else: print(\"YES\") ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757347752372,"sourceSize":1259,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_팀결성_298.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","showInTree":true,"treeOrder":365,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html":{"title":"t_효율적인화폐구성_228","icon":"","description":"화폐를 최소한으로 사용해서 합을 M이 되도록함\n만약 만들 수 없으면 -1, 몇번쓰는지 print이전에 말했드시 좀더 작은 값이 큰값의 배수가 아니므로 그리디로 풀 수 없다.input = input.strip().split('\\n') n,m = map(int,input[0].split())\narr = []\nans = -1\nfor i in range(1,len(input)): v = int(input[i]) if v == m: ans = 1 arr.append(v) q = deque(list(map(lambda x:[x,1],arr)))\nwhile len(q) &gt; 0 and ans == -1: v, step = q.popleft() for a in arr: tmp = v + a if tmp == m: ans = step+1 break elif tmp &lt; m: q.append([tmp,step+1]) print(ans)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757348189580,"sourceSize":934,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_효율적인화폐구성_228.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","showInTree":true,"treeOrder":366,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/구현.html":{"title":"구현","icon":"","description":"완전탐색(브루드포스), 시물레이션(한단계씩하는 것)재귀","aliases":[],"inlineTags":[],"frontmatterTags":["#완전탐색","#BruteForce","#시물레이션","#재귀"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/구현.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757344833023,"sourceSize":379,"sourcePath":"600-알고리즘 & 코딩테스트/theory/구현.md","exportPath":"600-알고리즘-&-코딩테스트/theory/구현.html","showInTree":true,"treeOrder":368,"backlinks":["600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html"],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/그리디.html":{"title":"그리디","icon":"","description":"\n현재 상황에서 지금 당장 좋은것을 고르는 방법!\n해법이 정당한지 검토해야함당장 눈에 보이는 더좋은것이 덜좋은 방법이랑 결론적으로 같은 지한번생각해보는게 좋은듯. 현재의 조건이 미래의 선택에 영향을 주지 않는다 ","aliases":[],"inlineTags":[],"frontmatterTags":["#현재상황","#고르는방법","#해법검토","#더좋은것","#덜좋은방법","#현재조건","#미래선택"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/그리디.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757345772471,"sourceSize":669,"sourcePath":"600-알고리즘 & 코딩테스트/theory/그리디.md","exportPath":"600-알고리즘-&-코딩테스트/theory/그리디.html","showInTree":true,"treeOrder":369,"backlinks":["600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html"],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html":{"title":"다이나믹프로그래밍","icon":"","description":"중복되는 연산을 줄이고 한번계산한 문제를 다시 계산치 않도록한다\n탑다운 : 큰문제해결위해 작은문제를 호출 보통 재귀로\n메모리제이션 방식이라고함\nrecursion depth : 재귀함수 깊이 오류 발생가능 보텀업 : 작은문제에서 순서대로 차근차근 해결 단순반복문,\nDP테이블을 통해서 결과 저장 점화식을 세워보는 것도 좋은 것 같다.\n선택하느냐 마느냐 특정 지점에 올때까지 최대값(주어진조건)\n배낭문제 st : 최대값을가지면서 특정값미만이어야함 제한된 용량 내에서 가치를 최대화하는 문제\n1처럼햇을때 계속 최대치를 추구하게되면 되는데 안되는경우가 발생할수잇음\n특정값을 배열로가져서 특정값이 되는경우중 최대값을 구하면됨 중복적인 연산이 많음\ndfs,bfs,재귀 로가능하지만 시간초과가 나는경우(케이스가 너무많은경우)\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=0bqfTzpWySY\" target=\"_self\">https://www.youtube.com/watch?v=0bqfTzpWySY</a>단일 배열에서 가장 긴 “증가하는” 수열을 찾을 때 사용하며, 순서가 중요한 문제에 적합합니다.\n이전수열중에 나보다 작은것중에 가장 숫자가큰(연속된다는 값이 큰) 것 +1두 개의 배열이나 문자열에서 공통적으로 나타나는 가장 긴 부분 수열을 찾는 데 사용하며, 두 데이터를 비교하고 공통 패턴을 찾는 데 적합합니다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"case가 내생각에는 2가지가잇음","level":3,"id":"case가_내생각에는_2가지가잇음_0"},{"heading":"특징","level":3,"id":"특징_0"},{"heading":"LIS  최장 증가 수열","level":3,"id":"LIS_최장_증가_수열_0"},{"heading":"LCS  최장 공통 문자열","level":3,"id":"LCS_최장_공통_문자열_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757345769852,"sourceSize":1845,"sourcePath":"600-알고리즘 & 코딩테스트/theory/다이나믹프로그래밍.md","exportPath":"600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","showInTree":true,"treeOrder":370,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html":{"title":"비용이있는 최단경로","icon":"","description":"여기서의 비용은 간선의 크기,또는 가중치이라고 불린다.\n양의 가중치여야함\n안 방문한 노드중 가장 비용이 적은 간선을 선택 방문한 노드는 최단거리가 확정이됨 특정지점에서 다른 노드들까지의 최단거리 1 to N 출발노드 있음 일종의 <a data-href=\"그리디\" href=\"600-알고리즘-&amp;-코딩테스트/theory/그리디.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">그리디</a> 배열 사용 import math input = sys.stdin.readline\nn,m = map(int,input().split()) # 노드 개수,간선\nstart = int(input())\n# 그래프에 대한 정보를 담는 노드\ngraph = [[] for i in range(n+1)]\nvisited = [False]*(n+1)\n# 시작 노드에 대한 최단 거리를 저장하는 리스트\ndistance = [math.inf]*(n+1) # 그래프 입력\nfor _ in range(m) a,b,c = map(int,input().split()) # a &gt; b , 비용은 c graph[a].append((b,c)) def get_smallest(): minV = math.inf node = 0 # 최단거리의 노드 for i in range(1,n+1): if not visited[i] and distance[i]&lt; minV: minV = distance[i] node = i return node def dijkstra(start): distance[start] = 0 visited[start] = True # 시작 노드와 연결된 노드의 거리를 입력 for j in graph[start]: distance[j[0]]=j[1] for i in range(n-1): now = get_smallest() visited[now] = True # 가장 짧은 노드 꺼내서 다른 연결된 노드를 확인하고 거리를 업데이트한다 for j in graph[now]: cost = distance[now] + j[1] if cost &lt; distance[j[0]]: distance[j[0]] = cost 우선순위큐(힙) 사용 우선순위큐는 내부적으로 최소힙 최대힙을 이용한다.\n현재 가장 가까운 노드를 저장하기위해서 우선순위 큐사용\n위에서의 getsmallest의 함수가 필요없음\nimport heapq\n# 그래프 입력 까지 같음\ndef dijkstra(start): q = [] # 거리, 노드로 입력받음 heapq.heappush(q,(0,start)) distance[start] = 0 while q: dist, now = heapq.heappop(q) # 이전에 입력된 거리가 더 짧다 == 처리된 적이 있는 노드 if distance[now] &lt; dist: continue #인접한 노드확인 for i in graph[now]: cost = dist + i[1] if cost &lt; distance[i[0]] : distance[i[0]] = cost heapq.heappush(q,(cost,i[0])) import sys\ninput = sys.stdin.readline\nINF = int(1e9) # 무한을 의미하는 값으로 10억을 설정 # 노드의 개수, 간선의 개수를 입력받기\nn, m = map(int, input().split())\n# 모든 간선에 대한 정보를 담는 리스트 만들기\nedges = []\n# 최단 거리 테이블을 모두 무한으로 초기화\ndistance = [INF] * (n + 1) # 모든 간선 정보를 입력받기\nfor _ in range(m): a, b, c = map(int, input().split()) # a번 노드에서 b번 노드로 가는 비용이 c라는 의미 edges.append((a, b, c)) def bf(start): # 시작 노드에 대해서 초기화 distance[start] = 0 # 전체 n - 1번의 라운드(round)를 반복 for i in range(n): # 매 반복마다 \"모든 간선\"을 확인하며 for j in range(m): cur_node = edges[j][0] next_node = edges[j][1] edge_cost = edges[j][2] # 현재 간선을 거쳐서 다른 노드로 이동하는 거리가 더 짧은 경우 if distance[cur_node] != INF and distance[next_node] &gt; distance[cur_node] + edge_cost: distance[next_node] = distance[cur_node] + edge_cost # n번째 라운드에서도 값이 갱신된다면 음수 순환이 존재 if i == n - 1: return True return False # 벨만 포드 알고리즘을 수행\nnegative_cycle = bf(1) # 1번 노드가 시작 노드 if negative_cycle: print(\"-1\")\nelse: # 1번 노드를 제외한 다른 모든 노드로 가기 위한 최단 거리를 출력 for i in range(2, n + 1): # 도달할 수 없는 경우, -1을 출력 if distance[i] == INF: print(\"-1\") # 도달할 수 있는 경우 거리를 출력 else: print(distance[i]) 모든지점에서 다른 모든지점까지의 최단경로 N to N\n출발점이여러개다!! 플로이드워셜\n시간 복잡도 3중반복문.. 2차원배열로 자기자신은 0 없는 간선은 inf, 있는 간선은 값을 넣음\na,b,c가 노드, a&gt; b일대와 a&gt; c , c&gt; b일때 머가 더 가까운지 비교해서 기입.\nimport math\nn,m = map(int, input().split())\n# 이차원 배열\ngraph = [[math.inf] * (n+1) for _ in range(n+1)] # 자기자신은 0으로\nfor a in range(1,n+1): graph[a][a] = 0 # 간선에 대한 정보 업데이트\nfor _ in range(m) a,b,c = map(int,input().split()) # 노드, 노드 ,비용 graph[a][b] = c for k in range(1,n+1): for a in range(1,n+1): for b in range(1,n+1): graph[a][b] = min(graph[a][b],graph[a][k]+graph[k][b])\n","aliases":[],"inlineTags":[],"frontmatterTags":["#Dijkstra","#BellmanFord","#FloydWarshall","#최단거리","#Python","#우선순위큐","#음수순환","#그리디"],"headers":[{"heading":"다익스트라","level":2,"id":"다익스트라_0"},{"heading":"구현 방법","level":4,"id":"구현_방법_0"},{"heading":"벨만포드","level":3,"id":"벨만포드_0"},{"heading":"플로이드 워셜","level":3,"id":"플로이드_워셜_0"}],"links":["600-알고리즘-&-코딩테스트/theory/그리디.html"],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757347140741,"sourceSize":5318,"sourcePath":"600-알고리즘 & 코딩테스트/theory/비용이있는 최단경로.md","exportPath":"600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","showInTree":true,"treeOrder":371,"backlinks":["600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html"],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html":{"title":"비트 연산,비트마스킹","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://un-gaemii.tistory.com/6\" target=\"_self\">https://un-gaemii.tistory.com/6</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://yiyj1030.tistory.com/267\" target=\"_self\">https://yiyj1030.tistory.com/267</a><br>\n<a class=\"internal-link\" data-href=\"구현.md\" href=\"600-알고리즘-&amp;-코딩테스트/theory/구현.html\" target=\"_self\" rel=\"noopener nofollow\">구현</a>","aliases":[],"inlineTags":[],"frontmatterTags":["#RAG","#LLM","#LangChain","#구현","#문서처리","#파이프라인","#성능최적화","#임베딩","#벡터DB","#AI개발"],"headers":[],"links":["600-알고리즘-&-코딩테스트/theory/구현.html"],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","pathToRoot":"../..","attachments":[],"createdTime":1738862386184,"modifiedTime":1757347149014,"sourceSize":478,"sourcePath":"600-알고리즘 & 코딩테스트/theory/비트 연산,비트마스킹.md","exportPath":"600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","showInTree":true,"treeOrder":372,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/세그먼트트리.html":{"title":"세그먼트트리","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=1d9sqmuLy-o&amp;t=476s\" target=\"_self\">https://www.youtube.com/watch?v=1d9sqmuLy-o&amp;t=476s</a>\n이진트리여야함\n리프노드만 원본\n종류 트리의 구간합을 구하는경우\n배열을 구간합으로 구하는경우 이때 배열의 각값은 리프노드가된다.\n이때 질의 인덱스를 세그먼트 트리인덱스로 바꿔야한다 질의인덱스+ 2^k -1 고로 리프노드 로 트리를 초기화해야함리프노트로 초기화할때 배열의 크기\n리프노드가 N개일 때 배열의 크기: start_index % 2== 1일 때 해당 노드를 선택한다. // 자식노드임 end_index % 2== 0일 때 해당 노드를 선택한다. //부모노드임 start_index depth 변경: start_index = (start_index + 1) / 2 연산을 실행한다. //부모노드로이동 end_index depth 변경: end_index = (end_index - 1) / 2 연산을 실행한다. //부모노드로 이동 1~4를 반복하다가 end_index &lt; start_index가 되면 종료한다.\n사람들은존나천재가틀림없다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","pathToRoot":"../..","attachments":[],"createdTime":1740114798905,"modifiedTime":1757344732582,"sourceSize":1244,"sourcePath":"600-알고리즘 & 코딩테스트/theory/세그먼트트리.md","exportPath":"600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","showInTree":true,"treeOrder":373,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html":{"title":"슬라이딩윈도우","icon":"","description":"aka Caterpillar Method","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","pathToRoot":"../..","attachments":[],"createdTime":1728619222739,"modifiedTime":1757347153481,"sourceSize":250,"sourcePath":"600-알고리즘 & 코딩테스트/theory/슬라이딩윈도우.md","exportPath":"600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","showInTree":true,"treeOrder":374,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/위상정렬.html":{"title":"위상정렬","icon":"","description":"\n방향 그래프의 노드를 방향성에 거스르지 않고 순서대로 나열하는 것\n예시 : Like 커리큘럼\n진입차수가 0인 노드를 큐에 넣는다\n큐가 빌때까지 큐에서 원소를 커내 해당노드에서 출발하는 간선을 제거한다.\n새롭게 진입차수가 0이 된 노드를 큐에 넣는다. from collections import deque # v 는 노드개수\n# graph[node].append(연결된노드)\ninde = [0] * (v+1) # 노드에 대한 진입차수 def topology_sort(): result = [] q = deque() # 진입차수가 0인거 큐에 삽입 for i in range(1,n+1): if inde[i] == 0: q.append(i) while q: now = q.popleft() result.append(now) #now 에서 출발한 간선에 대해서 진입차수 제거 for i in graph[now]: inde[i] -= 1 if inde[i] == 0: q.append(i) ","aliases":[],"inlineTags":[],"frontmatterTags":["#위상정렬","#방향그래프","#진입차수","#큐","#deque","#Python","#그래프알고리즘","#간선제거","#커리큘럼"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/위상정렬.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757347159413,"sourceSize":1240,"sourcePath":"600-알고리즘 & 코딩테스트/theory/위상정렬.md","exportPath":"600-알고리즘-&-코딩테스트/theory/위상정렬.html","showInTree":true,"treeOrder":375,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/유니온파인드.html":{"title":"유니온파인드","icon":"","description":"서로소집합을 찾는, 혹은 그래프끼리 연결되어있지 않는것을 찾는 알고리즘\n부모를 먼저자기자신으로 초기화\n루트노드를 찾아서 기록한다.\ndef find_parent(parent,x): # 루트노드가 아니라면 if parent[x]!= x: parent[x] = find_parent(parent,parent[x]) # 부모의 부모를찾는다 return parent[x] #간선이 있을 시 연결\ndef union_parent(parent,a,b): a = find_parent(parent,a) b = find_parent(parent,b) if a &lt; b: # 작은분이 우선루트노드 parent[b] = a else: parent[a] = b # 노드개수만큼 부모테이블 있어야하고 각 부모테이블의 기본값으로 자기자신으로 해야함\n무방향그래프에서의 사이클 판별할때 이용가능하다\n간선의 각각 노드의 부모노드가 같을때 사이클이 발생한다.\n방향이있을때는 dfs로 판별가능하다.if find_parent(parent, a) = = find_parent(parent, b): cycle = True break\n","aliases":[],"inlineTags":[],"frontmatterTags":["#서로소집합","#서로소집합알고리즘","#사이클판별","#무방향그래프","#그래프알고리즘","#O_VMlog2V","#find_parent","#union_parent"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/유니온파인드.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757347162455,"sourceSize":1442,"sourcePath":"600-알고리즘 & 코딩테스트/theory/유니온파인드.md","exportPath":"600-알고리즘-&-코딩테스트/theory/유니온파인드.html","showInTree":true,"treeOrder":376,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/이진탐색.html":{"title":"이진탐색","icon":"","description":"\n조건 값이 딱 떨어지지 않을 때 탐색범위가 매우 클때\n시작과 끝점 중간점 3가지의 포인트를 가지고 데이터를 반복적으로 비교하는것.\n탐색범위 : 1천만 이상일때 권함 O(logN)\n구현방식 : 재귀# 이진 탐색 소스코드 구현(재귀 함수) def binary_search(array, target, start, end): if start &gt; end: return None mid = (start + end) // 2 # 찾은 경우 중간점 인덱스 반환 if array[mid] = = target: return mid # 중간점의 값보다 찾고자 하는 값이 작은 경우 왼쪽 확인 elif array[mid] &gt; target: return binary_search(array, target, start, mid - 1) # 중간점의 값보다 찾고자 하는 값이 큰 경우 오른쪽 확인 else: return binary_search(array, target, mid + 1, end) # n(원소의 개수)과 target(찾고자 하는 문자열)을 입력받기\nn, target = list(map(int, input().split())) # 전체 원소 입력받기 array = list(map(int, input().split()))\n# 이진 탐색 수행 결과 출력 result = binary_search(array, target, 0, n - 1) if result = = None: print(\"원소가 존재하지 않습니다.\") else: print(result + 1)\n","aliases":[],"inlineTags":[],"frontmatterTags":["#이진탐색","#재귀함수","#Python","#O(logN)","#탐색범위"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/이진탐색.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757347167622,"sourceSize":1489,"sourcePath":"600-알고리즘 & 코딩테스트/theory/이진탐색.md","exportPath":"600-알고리즘-&-코딩테스트/theory/이진탐색.html","showInTree":true,"treeOrder":377,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/정렬.html":{"title":"정렬","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://hsp1116.tistory.com/33\" target=\"_self\">https://hsp1116.tistory.com/33</a>계수정렬버블정렬\n등..","aliases":[],"inlineTags":[],"frontmatterTags":["#계수정렬","#버블정렬"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/정렬.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075823,"modifiedTime":1757347174031,"sourceSize":353,"sourcePath":"600-알고리즘 & 코딩테스트/theory/정렬.md","exportPath":"600-알고리즘-&-코딩테스트/theory/정렬.html","showInTree":true,"treeOrder":378,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/최소신장트리.html":{"title":"최소신장트리","icon":"","description":"\n신장트리 : 하나의 그래프가 있을때 모든 노드를 포함하면서 사이클이 없는 그래프\n크루스칼은 최소신장트리(mst)를 구할때 사용함 크리스칼 알고리즘을 이용!!\n정렬 기준이 edge이다!!\n최소신장트리로 분할할라면 최소신장트리를하나만들고 젤큰간선을 없애면된다\n예로 다리를 최소한의 비용으로 놓아야하지만 다 놓아야할 때\n간선을 비용에 따라 오름차순으로 정렬한다\n사이클발생하는지 확인하고 발생하지 않을 시 mst에 포함시킨다. 이때 unionfind # 입력형식 a,b,c\n# 저장형식 edges.append((c,a,b)) 비용을 앞으로\n# node 개수 v\nparent = [0] * (v+1)\nsum_cost = 0\nedges.sort() def find_parent(parent,n): if parent[n] != n: parent[n] = find_parent(parent,parent[n]) return parent[n] for e in edges: c , a,b = e pa = find_parent(parent,a) pb = find_parent(parent,b) if pa != pb: sum_cost += c # 루트노드의 부모끼리 연결해야함 if pa &lt; pb: parent[pb] = pa else: parent[pa] = pb ","aliases":[],"inlineTags":[],"frontmatterTags":["#신장트리","#최소신장트리","#MST","#KruskalAlgorithm","#UnionFind","#O(ElogE)","#Python","#그래프","#사이클검출","#최소비용"],"headers":[],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/최소신장트리.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075824,"modifiedTime":1757347176918,"sourceSize":1623,"sourcePath":"600-알고리즘 & 코딩테스트/theory/최소신장트리.md","exportPath":"600-알고리즘-&-코딩테스트/theory/최소신장트리.html","showInTree":true,"treeOrder":379,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/bfs,dfs.html":{"title":"bfs,dfs","icon":"","description":"알아야할 lib\nfrom collections import deque\n&nbsp;한쪽경로의 끝을 확인할때 쓰임, 나는 이게 어떤 뭉탱이랑 구별되는지 같은거에 주로 썼음 스택(재귀)로 구현\n재귀도 스택형식임 그래프로 눈에 보이는건 deque으로 처리할 만함 방문처리\n백트래킹 : 방문처리후 돌고 방문처리를 다시 안함 걍 다도는 것 &nbsp;최단거리 구할 때(제일 먼저 push되는게 최단거리) / 같은 깊이를 비교할때 / 어떤 턴마다 확장되는 문제에서 많이 쓰였음 큐를 이용하여 구현\nwhile과함께하여 큐가 빌 때까지 도는게 일반적\n","aliases":[],"inlineTags":[],"frontmatterTags":["#DFS","#BFS","#collections.deque","#스택","#재귀","#큐","#백트래킹","#방문처리","#최단거리","#그래프"],"headers":[{"heading":"DFS","level":3,"id":"DFS_0"},{"heading":"BFS","level":3,"id":"BFS_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","pathToRoot":"../..","attachments":[],"createdTime":1725430075822,"modifiedTime":1757347184233,"sourceSize":1139,"sourcePath":"600-알고리즘 & 코딩테스트/theory/bfs,dfs.md","exportPath":"600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","showInTree":true,"treeOrder":380,"backlinks":["600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html"],"type":"markdown"},"600-알고리즘-&-코딩테스트/theory/graph.html":{"title":"graph","icon":"","description":"<img alt=\"assets/graph-20240831020857057.png\" src=\"600-알고리즘-&amp;-코딩테스트/assets/graph-20240831020857057.png\" target=\"_self\" style=\"width: 200px; max-width: 100%;\">\n거리와 가중치는 같은말임\n인접 리스트 방식 2차원배열로 나타내는 형식 각 index는 node임 그 값은 노드사이의 거리를 나타냄\n안이어졌으면 infinite import math math.inf 인접행렬 방식 각 index를 기준으로 인접한 node의 거리를 적음\n(node,거리)\n[ [(1,7),(2,5)] , [(0,7)] , [(0,5)]] ","aliases":[],"inlineTags":[],"frontmatterTags":["#인접리스트","#인접행렬","#2차원배열","#노드","#거리","#가중치"],"headers":[{"heading":"표현 방식","level":3,"id":"표현_방식_0"}],"links":[],"author":"Jeon MinJi","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/theory/graph.html","pathToRoot":"../..","attachments":["600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html"],"createdTime":1725430075822,"modifiedTime":1757347181433,"sourceSize":768,"sourcePath":"600-알고리즘 & 코딩테스트/theory/graph.md","exportPath":"600-알고리즘-&-코딩테스트/theory/graph.html","showInTree":true,"treeOrder":381,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/1613-역사.html":{"title":"1613 역사","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.acmicpc.net/problem/1613\" target=\"_self\">https://www.acmicpc.net/problem/1613</a>\n모순이 없다 == 사이클이 없다로 이해.\n그러면 위상정렬을 써도 되는것아닌가 ?\nㄴㄴ 안됨 이처럼 쪼개질시 쪼개진 노드끼리는 서순을 구분할 수 없음<br>\n<img alt=\"assets/Pasted image 20240216101645.png\" src=\"600-알고리즘-&amp;-코딩테스트/assets/pasted-image-20240216101645.png\" target=\"_self\"> 아래 코드 1번파트에서 한방향 말고 좌우 방향 다 고려해야하는것아니냐?<br>\n<img alt=\"assets/Pasted image 20240216102426.png\" src=\"600-알고리즘-&amp;-코딩테스트/assets/pasted-image-20240216102426.png\" target=\"_self\"> 사실 이 절반만 계산한다면 양방향체크해야하는게맞는데 여기서는걍 다체크해서 상관없음.bfs 냐 걍 dfs 쓰면되는거아님?\n맞음 근데 문제가 많아질수록 계속 처음부터구해야해서 복잡도가 늘어날것임.import sys\nimport math n,m = map(int, sys.stdin.readline().split())\narr = [[0]*(n+1) for _ in range(n+1)] for _ in range(m): [a,b]=list(map(int, sys.stdin.readline().split())) arr[a][b]=-1 arr[b][a]=1 for i in range(1,n+1):\n# 중간 간선 선정 for j in range(1,n+1): for k in range(1,n+1): # 돌면서 중간 간선을 일방향 통행으로 되는것을 고름 if(arr[j][i] == -1 and arr[i][k] == -1): # 1번파트 arr[j][k]=-1 arr[k][j]=1 z = int(sys.stdin.readline().strip())\nquestion = [list(map(int, sys.stdin.readline().split())) for _ in range(z)] for i in question: [a,b]=i print(arr[a][b]) ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"생각","level":4,"id":"생각_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/1613-역사.html","pathToRoot":"..","attachments":["600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html"],"createdTime":1707984649277,"modifiedTime":1708504936973,"sourceSize":1352,"sourcePath":"600-알고리즘 & 코딩테스트/1613 역사.md","exportPath":"600-알고리즘-&-코딩테스트/1613-역사.html","showInTree":true,"treeOrder":382,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/작성형식.html":{"title":"작성형식","icon":"","description":"<a href=\".?query=tag:실수\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#실수\">#실수</a> <a href=\".?query=tag:모름\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#모름\">#모름</a> <a href=\".?query=tag:작성시간초과\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#작성시간초과\">#작성시간초과</a> <a href=\".?query=tag:햇갈림\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#햇갈림\">#햇갈림</a> <a href=\".?query=tag:시간초과\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#시간초과\">#시간초과</a>이것이 코딩테스트다 : t문제쪽수\n백준 : b문제문제번호\n프로그래머스 : p문제문제번호\nkt질문 : 간략히 질문요약\n응답 <br><img alt=\"assets/작성형식-20250220033159798.png\" src=\"600-알고리즘-&amp;-코딩테스트/assets/작성형식-20250220033159798.png\" target=\"_self\" style=\"width: 300px; max-width: 100%;\"><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=Wx91sqfouCs\" target=\"_self\">https://www.youtube.com/watch?v=Wx91sqfouCs</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"tag들","level":4,"id":"tag들_0"},{"heading":"filename","level":4,"id":"filename_0"},{"heading":"content","level":4,"id":"content_0"}],"links":["?query=tag:%EC%8B%A4%EC%88%98","?query=tag:%EB%AA%A8%EB%A6%84","?query=tag:%EC%9E%91%EC%84%B1%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC","?query=tag:%ED%96%87%EA%B0%88%EB%A6%BC","?query=tag:%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC"],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/작성형식.html","pathToRoot":"..","attachments":["600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html"],"createdTime":1725608386226,"modifiedTime":1744605051718,"sourceSize":363,"sourcePath":"600-알고리즘 & 코딩테스트/작성형식.md","exportPath":"600-알고리즘-&-코딩테스트/작성형식.html","showInTree":true,"treeOrder":383,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/g_개미집합의지름.html":{"title":"g_개미집합의지름","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://level.goorm.io/exam/49060/%EA%B0%9C%EB%AF%B8-%EC%A7%91%ED%95%A9%EC%9D%98-%EC%A7%80%EB%A6%84/quiz/1\" target=\"_self\">https://level.goorm.io/exam/49060/%EA%B0%9C%EB%AF%B8-%EC%A7%91%ED%95%A9%EC%9D%98-%EC%A7%80%EB%A6%84/quiz/1</a>슬라이딩윈도우로해봤는데 안된다...// Run by Node.js\nconst readline = require('readline'); (async () =&gt; { let rl = readline.createInterface({ input: process.stdin }); let flag = true; let input = [] for await (const line of rl) { if(!line){ rl.close(); }else{ let arr = line.split(' ').map(x=&gt;+x); input.push(arr); } } let [N,D] = input[0]; //N마리 D 지름: 임의의 두 개미 사이의 거리중 가장 긴거리를 뜻함 let point = input[1].sort((a,b)=&gt;a-b); let end = point.length-1; // console.log(point,end) let current = point[end]-point[0]; let mid = end/2;///if 6 &gt; 2.5 , 012345 let s = 0; let e = end; while(current&gt;D){ // console.log(i,current,mid) if(s&gt;end || e&lt;0)return end; let addStart = point[e] - point[s+1]; let addEnd = point[e-1] - point[s]; addStart&lt;addEnd? s++ : e--; current = Math.min(addStart,addEnd) // console.log(addStart,addEnd,'|',s,e); } console.log(end-(e-s)); process.exit();\n})();\n//1 3 4 6 9 10\n//0 1 2 3 4 5 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/g_개미집합의지름.html","pathToRoot":"..","attachments":[],"createdTime":1732079683920,"modifiedTime":1732079723121,"sourceSize":1156,"sourcePath":"600-알고리즘 & 코딩테스트/g_개미집합의지름.md","exportPath":"600-알고리즘-&-코딩테스트/g_개미집합의지름.html","showInTree":true,"treeOrder":384,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/java.html":{"title":"java","icon":"","description":"자주 사용하는 코딩테스트 문법 정리\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://earthteacher.tistory.com/169#gsc.tab=0\" target=\"_self\">https://earthteacher.tistory.com/169#gsc.tab=0</a>\nimport java.util.*;기본 자료형 (Primitive Type)<br>\n자바에서 가장 기본이 되는 자료형으로, 메모리 크기와 값의 범위가 정해져 있습니다<a data-tooltip-position=\"top\" aria-label=\"https://vanslog.io/posts/language/java/primitive-type-and-reference-type/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://vanslog.io/posts/language/java/primitive-type-and-reference-type/\" target=\"_self\">1</a>.\n레퍼 클래스\nint →&nbsp;Integer\ndouble →&nbsp;Double\nchar →&nbsp;Character 참조 자료형 (Reference Type)<br>\n객체의 주소를 저장하는 자료형으로, 대표적으로 다음과 같습니다<a data-tooltip-position=\"top\" aria-label=\"https://vanslog.io/posts/language/java/primitive-type-and-reference-type/\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://vanslog.io/posts/language/java/primitive-type-and-reference-type/\" target=\"_self\">1</a>.\nString\n배열(Array)\n클래스(Class) 인터페이스(Interface) 열거형(Enum)\nimport java.io.*; BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\nString a = br.readLine().strip();\nSystem.out.println(h+m+s);\nint i = Integer.parseInt(\"123\"); // 문자열 → int\ndouble d = Double.parseDouble(\"3.14\"); // 문자열 → double Integer.toString(num);\nString s1 = String.valueOf(123); // int → 문자열\nString s2 = Double.toString(3.14); // double → 문자열 char c = 'A';\nint code = (int) c; // 문자 → 정수\nSystem.out.println(code); // 65 int i = 66;\nchar ch = (char) i; // 정수 → 문자\nSystem.out.println(ch); // 'B'\nString str = \"hello Java!\";\nSystem.out.println(str.contains(\"J\")); // true\nSystem.out.println(str.contains(\"java\")); // false (대소문자 구분) String str = \"hello Java!\";\nSystem.out.println(str.indexOf(\"J\")); // 6 (포함되어 있음)\nSystem.out.println(str.indexOf(\"z\")); // -1 (포함되어 있지 않음)\nString str = \"hello Java!\";\nSystem.out.println(str.contains(\"J\")); // true\nSystem.out.println(str.contains(\"java\")); // false (대소문자 구분)\nString str = \"hello Java!\";\nSystem.out.println(str.indexOf(\"J\")); // 6 (포함되어 있음)\nSystem.out.println(str.indexOf(\"z\")); // -1 (포함되어 있지 않음) 걍 list쓰셈\nlist 안에는 참조형 잇어야함( 기본형인건 래퍼클래스를 쓰샘)\nimport java.util.Arrays;\nimport java.util.List; List&lt;String&gt; list = Arrays.asList(\"A\", \"B\", \"C\"); List&lt;String&gt; list = new ArrayList&lt;&gt;(); List&lt;String&gt; list = new ArrayList&lt;&gt;(Arrays.asList(\"a\", \"b\", \"c\"));\nSet&lt;Integer&gt; set = new HashSet&lt;&gt;(Arrays.asList(1, 2, 3));\nList&lt;String&gt; list = new ArrayList&lt;&gt;() {{ add(\"a\"); add(\"b\");\n}};\nMap&lt;String, Integer&gt; map = new HashMap&lt;&gt;() {{ put(\"key1\", 1); put(\"key2\", 2);\n}}; for (String s : arr) { list.add(s);\n}\nlist.add(\"사과\"); // 맨 끝에 추가\nlist.add(1, \"바나나\"); // 1번 인덱스에 삽입, 기존 값들은 뒤로 밀림\nint len = list.size(); // 리스트 길이 반환\nlist.clear(); // 리스트 비우기\nlist.remove(0); // 0번 인덱스 값 삭제 list.remove(\"바나나\"); // \"바나나\"라는 값 삭제 (처음 발견되는 값만)\nlist.set(1, \"딸기\"); // 1번 인덱스 값을 \"딸기\"로 변경\nString fruit = list.get(0); // 0번 인덱스 값 반환\nList&lt;String&gt; sub = list.subList(1, 3); // 1번~2번 인덱스 값 반환(3은 미포함) String result = String.join(\"-\", list); // 조인 // 리스트 자료형 변환\nfor (String s : strList) { intList.add(Integer.parseInt(s)); }\nList&lt;Integer&gt; intList = strList.stream() .map(Integer::parseInt) .collect(Collectors.toList()); // 정렬\nArrays.sort(fruits);\nCollections.sort(cars); //list의경우\nindex 에러int[] arr = {1, 2, 3}; try { System.out.println(arr[5]); // 인덱스 에러 발생\n} catch (ArrayIndexOutOfBoundsException e) { // pass: 아무 처리도 하지 않음\n} System.out.println(\"다음 코드 실행\"); // 정상적으로 실행됨 배열 인자로넘길때 주의사항check(park, limit, {i, j}); // ❌ 컴파일 에러!\ncheck(park, limit, new int[]{i, j}); // ✅ 올바른 방법\nSet&lt;int[]&gt; set1 = new HashSet&lt;&gt;();\nint[] arr1 = {1, 2};\nint[] arr2 = {1, 2};\nset1.add(arr1);\nset1.add(arr2);\nSystem.out.println(set1.size()); // 2 Set&lt;List&lt;Integer&gt;&gt; set2 = new HashSet&lt;&gt;();\nList&lt;Integer&gt; a = Arrays.asList(1, 2);\nList&lt;Integer&gt; b = Arrays.asList(1, 2);\nset2.add(a);\nset2.add(b);\nSystem.out.println(set2.size()); // 1 String[] arr = set.toArray(new String[0]); System.out.println(arr[0]); - `set.toArray(new 타입)` → 원하는 타입의 배열로 변환 (실무에서 권장) **java.util.Stack&nbsp;\n주요 메서드: push(E item): 스택에 값 넣기\npop(): 스택에서 값 꺼내기(제거)\npeek(): 스택 최상단 값 확인(제거하지 않음)\nisEmpty(): 비었는지 확인 import java.util.Stack; Stack&lt;Integer&gt; stack = new Stack&lt;&gt;();\nstack.push(1);\nstack.push(2);\nstack.push(3);\nSystem.out.println(stack.pop()); // 3\nSystem.out.println(stack.peek()); // 2\nSystem.out.println(stack.isEmpty()); // false java.util.Queue&nbsp;인터페이스와&nbsp;LinkedList&nbsp;또는&nbsp;ArrayDeque&nbsp;구현체를 주요 메서드: offer(E e): 큐에 값 넣기(뒤에 추가)\npoll(): 큐에서 값 꺼내기(앞에서 제거)\npeek(): 큐 맨 앞 값 확인(제거하지 않음)\nisEmpty(): 비었는지 확인 import java.util.Queue;\nimport java.util.LinkedList; Queue&lt;Integer&gt; queue = new LinkedList&lt;&gt;();\nqueue.offer(1);\nqueue.offer(2);\nqueue.offer(3);\nSystem.out.println(queue.poll()); // 1\nSystem.out.println(queue.peek()); // 2\nSystem.out.println(queue.isEmpty()); // false ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"자바의 자료형 종류","level":3,"id":"자바의_자료형_종류_0"},{"heading":"입출력","level":3,"id":"입출력_0"},{"heading":"형변환","level":3,"id":"형변환_0"},{"heading":"문자열 찾기","level":3,"id":"문자열_찾기_0"},{"heading":"배열","level":3,"id":"배열_0"},{"heading":"SET","level":3,"id":"SET_0"},{"heading":"스택 큐","level":3,"id":"스택_큐_0"},{"heading":"스택","level":4,"id":"스택_0"},{"heading":"큐","level":4,"id":"큐_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/java.html","pathToRoot":"..","attachments":[],"createdTime":1745912253688,"modifiedTime":1746556353546,"sourceSize":7664,"sourcePath":"600-알고리즘 & 코딩테스트/java.md","exportPath":"600-알고리즘-&-코딩테스트/java.html","showInTree":true,"treeOrder":385,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/lis.html":{"title":"LIS","icon":"","description":"<img src=\"600-알고리즘-&amp;-코딩테스트/assets/pasted-image-20240716094012.png\" target=\"_self\">각각인자마다 최장 증가수열을 찾음\n그다음 인자를 더할때는 이전 최장증가수열중 마지막 값(사실 각각이 다 마지막 인덱스임)이 자기보다 작은것중 가장 긴것을 선택한후 1을 더하고 자기자신을 추가함<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://namu.wiki/w/%EC%B5%9C%EC%9E%A5%20%EC%A6%9D%EA%B0%80%20%EB%B6%80%EB%B6%84%20%EC%88%98%EC%97%B4\" target=\"_self\">https://namu.wiki/w/%EC%B5%9C%EC%9E%A5%20%EC%A6%9D%EA%B0%80%20%EB%B6%80%EB%B6%84%20%EC%88%98%EC%97%B4</a>각각 인덱스의 최장 증가수열 구할때 순서\n이전것중 깃것부터 찾음\n그중 자기보다 작은 값이면 그값 +1 이 길이\nvoid&nbsp;LIS_DP()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp[i]&nbsp;=&nbsp;1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//해당&nbsp;원소에서&nbsp;끝나는&nbsp;LIS&nbsp;길이의&nbsp;최솟값.&nbsp;즉,&nbsp;자기&nbsp;자신\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;i;&nbsp;j++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//i번째&nbsp;이전의&nbsp;모든&nbsp;원소에&nbsp;대해,&nbsp;그&nbsp;원소에서&nbsp;끝나는&nbsp;LIS의&nbsp;길이를&nbsp;확인한다.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(arr[i]&nbsp;&gt;&nbsp;arr[j])&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//단,&nbsp;이는&nbsp;현재&nbsp;수가&nbsp;그&nbsp;원소보다&nbsp;클&nbsp;때만&nbsp;확인한다.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dp[i]&nbsp;=&nbsp;max(dp[i],&nbsp;dp[j]&nbsp;+&nbsp;1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//dp[j]&nbsp;+&nbsp;1&nbsp;:&nbsp;이전&nbsp;원소에서&nbsp;끝나는&nbsp;LIS에&nbsp;현재&nbsp;수를&nbsp;붙인&nbsp;새&nbsp;LIS&nbsp;길이\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\nint&nbsp;binary_search(vector&lt;int&gt;&nbsp;lis,&nbsp;int&nbsp;start,&nbsp;int&nbsp;end,&nbsp;int&nbsp;element)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;//이분&nbsp;탐색으로&nbsp;lis&nbsp;벡터&nbsp;내에서&nbsp;element의&nbsp;위치를&nbsp;반환\n&nbsp;&nbsp;&nbsp;&nbsp;//lis&nbsp;벡터의&nbsp;start&nbsp;-&nbsp;end&nbsp;구간에서만&nbsp;확인\n&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(start&nbsp;&lt;&nbsp;end)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;mid&nbsp;=&nbsp;(start&nbsp;+&nbsp;end)&nbsp;/&nbsp;2;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(element&nbsp;&gt;&nbsp;lis[mid])&nbsp;start&nbsp;=&nbsp;mid&nbsp;+&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;end&nbsp;=&nbsp;mid;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;end;\n} int&nbsp;LIS_BS()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;ret&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;vector&lt;int&gt;&nbsp;lis;\n&nbsp;&nbsp;&nbsp;&nbsp;lis.push_back(arr[0]);\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//만약&nbsp;lis&nbsp;벡터의&nbsp;마지막&nbsp;수보다&nbsp;i번째&nbsp;수가&nbsp;크다면,&nbsp;그냥&nbsp;뒤에&nbsp;붙인다.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(arr[i]&nbsp;&gt;&nbsp;lis.back())&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lis.push_back(arr[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;lis.size()&nbsp;-&nbsp;1;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//i번째&nbsp;수에&nbsp;대해,&nbsp;lis&nbsp;벡터&nbsp;내에서&nbsp;그&nbsp;수의&nbsp;위치를&nbsp;찾는다.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;pos&nbsp;=&nbsp;binary_search(lis,&nbsp;0,&nbsp;ret,&nbsp;arr[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lis[pos]&nbsp;=&nbsp;arr[i];\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ret&nbsp;+&nbsp;1;\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"DP 이용","level":3,"id":"DP_이용_0"},{"heading":"이분탐색","level":3,"id":"이분탐색_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"600-알고리즘-&-코딩테스트/lis.html","pathToRoot":"..","attachments":["600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html"],"createdTime":1721133947612,"modifiedTime":1721133947612,"sourceSize":2534,"sourcePath":"600-알고리즘 & 코딩테스트/LIS.md","exportPath":"600-알고리즘-&-코딩테스트/lis.html","showInTree":true,"treeOrder":386,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/p_석유시추.html":{"title":"p_석유시추","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/250136\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/250136</a>i guess 재귀로하면 function solution(land) { let ans = 0 let moves = [[0,1],[1,0],[0,-1],[-1,0]]; let gas = new Array(land[0].length).fill(0); for(let i = 0; i&lt;land.length; i++){ for(let j = 0; j&lt;land[i].length; j++){ if(land[i][j] === 1 ){ //방문시작! let cnt = 1; let visitX = new Set([j]); land[i][j] = -1; let arr = [[i,j]]; let arrInd = 0; while(arr.length-arrInd&gt;0){ let [y,x] = arr[arrInd]; arrInd++; for(let m of moves){ let dy = y+m[0]; let dx = x+m[1]; if(dy&gt;-1 &amp;&amp; dy &lt;land.length &amp;&amp; dx&gt;-1 &amp;&amp; dx &lt;land[y].length){ if(land[dy][dx] === 1){ arr.push([dy,dx]); land[dy][dx] = -1; cnt++; visitX.add(dx); } } } } for(let v of visitX){ gas[v] += cnt; if(ans&lt;gas[v]) ans = gas[v]; } // console.log(i,j) // console.log(gas) } } } return ans;\n}\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"문제","level":3,"id":"문제_0"},{"heading":"답","level":3,"id":"답_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/p_석유시추.html","pathToRoot":"..","attachments":[],"createdTime":1731959340278,"modifiedTime":1731984828701,"sourceSize":1507,"sourcePath":"600-알고리즘 & 코딩테스트/p_석유시추.md","exportPath":"600-알고리즘-&-코딩테스트/p_석유시추.html","showInTree":true,"treeOrder":387,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/p42895-n으로-표현.html":{"title":"P42895 N으로 표현","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://school.programmers.co.kr/learn/courses/30/lessons/42895\" target=\"_self\">https://school.programmers.co.kr/learn/courses/30/lessons/42895</a>\nN은 1 이상 9 이하입니다.\nnumber는 1 이상 32,000 이하입니다.\n수식에는 괄호와 사칙연산만 가능하며 나누기 연산에서 나머지는 무시합니다.\n최솟값이 8보다 크면 -1을 return 합니다.\n-&gt; 나누기 연산에서 나머지를 무시한다 &amp; 조건이 N의 숫자만 사용하는것.\n연산자 : 숫자 붙이기 &amp; 사칙연산 + - /\n5의 개수 마다 조합해서 만들면된다\n5 - 1개 : 5\n5 - 2개 : 55, 10 ,0,25,1\n5 - 3개 : (1개경우 연산자 2개경우)\n555, 5+55 ,5-55, 5 55, 5/55\n...\n2개경우 연산자 1개경우도해야함.. -와 나누기는 순서에따라 값이 달라지니깐..\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"생각","level":4,"id":"생각_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/p42895-n으로-표현.html","pathToRoot":"..","attachments":[],"createdTime":1708505964696,"modifiedTime":1708508127215,"sourceSize":742,"sourcePath":"600-알고리즘 & 코딩테스트/P42895 N으로 표현.md","exportPath":"600-알고리즘-&-코딩테스트/p42895-n으로-표현.html","showInTree":true,"treeOrder":388,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/p42897-도둑질.html":{"title":"p42897 도둑질","icon":"","description":"dfs로 모든경우의 수를 탐색하면 될것이라고 생각햇다.answer = 0\nhouse_num =0\ndef solution(money): global answer global house_num house_num = len(money) max_v = -1 visited = [0] * house_num dfs(visited,0,money,0) # 1- 2 3- 1 4 return answer def dfs(visited, nowi , money,sum): global answer global house_num if(sum&gt;answer): answer=sum if(nowi&gt;house_num-1): return print(visited,nowi,sum) if(money[nowi]&gt;0 and visited[nowi]==0): if not isNearbyVisited(visited,nowi): print(\"visit\") visited[nowi]=1 # 방문을 한경우 dfs(visited,nowi+2,money,sum+money[nowi]) visited[nowi]=0 # 방문을 안한경우 dfs(visited,nowi+1,money,sum) def isNearbyVisited(visited,index): global house_num left = index-1 right = index +1 if left&lt;0 : left+=house_num if right&gt;house_num-1: right-=house_num return visited[left] or visited[right] dfs 로 모든 경우의 수를 탐색하는 방법이다.\n2^n승에 가까운 시간복잡도를 가진다.\n하지만 시간초과로 틀렷다...그 시점에서 최대의 갈수있는 최대의 값을 선택한다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"생각","level":4,"id":"생각_0"},{"heading":"첫코드","level":4,"id":"첫코드_0"},{"heading":"두번째 코드","level":4,"id":"두번째_코드_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/p42897-도둑질.html","pathToRoot":"..","attachments":[],"createdTime":1708859221775,"modifiedTime":1708859480550,"sourceSize":1320,"sourcePath":"600-알고리즘 & 코딩테스트/p42897 도둑질.md","exportPath":"600-알고리즘-&-코딩테스트/p42897-도둑질.html","showInTree":true,"treeOrder":389,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/python.html":{"title":"python","icon":"","description":"파이썬 입력swi_n=int(sys.stdin.readline().strip()) # 스위치 수\nswitches = list(map(int,sys.stdin.readline().strip().split()))\nstu_n = int(sys.stdin.readline().strip())\nall anyfrom collections import deque\nimport heapq\nheap = []\nheapq.heappush(heap, 50)\nheapq.heapify(heap2)\nresult = heapq.heappop(heap)\nimport math\nfind 문자열 없어도 에러안나고 -1 뜸\nindex 없으면 에러남 시계방향 90도\nlist(map(list, zip(*array [: : -1 ]))) 반시계방향 90도 list(map(list, zip(*array)))[: :-1]\ns1 = set([1, 2, 3])\nl1 = list(s1)\n# 추가\ns1.add(4)\n# 여러개 추가\ns1.update([4, 5, 6])\n# 값 제거\ns1.remove(2)\n교집합 &amp; ,차집합 - , 합집합 |\nfor문돌릴수는잇음from collections import deque\nd = deque([1,2,3,4,5]) d.append(6) d deque([1, 2, 3, 4, 5, 6]) d.appendleft(0) d deque([0, 1, 2, 3, 4, 5, 6]) d.pop() # 6 d deque([0, 1, 2, 3, 4, 5]) d.popleft() # 0 d deque([1, 2, 3, 4, 5]) <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/104977\" target=\"_self\">https://wikidocs.net/104977</a>\n회전도가능하다!import heapq heap = [] heapq.heappush(heap, 50) heap2 = [50 ,10, 20] heapq.heapify(heap2)\nresult = heapq.heappop(heap)\n조인할때 대상이 str 인지확인해야함\n안그러면조인안됨.ans+=(' '.join(map(str,switches[start:end])))\nif isinstance(x, int):\nfor key, value in {'a': 10, 'b': 20, 'c': 30, 'd': 40}.items(): print(key, value) if \"name\" in car:\n파이썬에서 원본 배열(리스트)을 자르려면 슬라이싱 결과를 원본 리스트에 다시 할당하거나, 리스트의 일부를 삭제하는 방법을 사용할 수 있습니다. 슬라이싱은 기본적으로 새로운 리스트를 반환하므로, 이를 원본에 반영하려면 명시적으로 수정해야 합니다.import copy list_A = [\"ABC\",[\"DEF\",\"GHI\"]] list_B = copy.deepcopy(list_A)\nlist =[[0]*m for _ in range(n)] 슬라이싱 후 원본 리스트에 다시 할당하기\narr = [1, 2, 3, 4, 5] # 원본 리스트를 인덱스 1부터 3까지로 잘라서 다시 할당\narr = arr[1:3]\nprint(arr) # 출력: [2, 3] del , 슬라이싱을 사용해 리스트의 일부분을 삭제하기\narr = [1, 2, 3, 4, 5] # 인덱스 1부터 3까지 삭제 (인덱스 3은 포함되지 않음)\ndel arr[1:3]\nprint(arr) # 출력: [1, 4, 5] 리스트 메서드 pop() 사용\narr = [1, 2, 3, 4, 5] # 2번째 인덱스의 요소를 삭제\narr.pop(2)\nprint(arr) # 출력: [1, 2, 4, 5] remove() 메서드 사용\nremove()는 리스트에서 특정 값을 삭제합니다. 값이 여러 개 있을 경우, 첫 번째로 발견된 값을 삭제합니다.\narr = [1, 2, 3, 4, 3, 5] # 값 3을 삭제 (첫 번째로 등장한 3만 삭제됨)\narr.remove(3)\nprint(arr) # 출력: [1, 2, 4, 3, 5] **리스트의 일부분을 잘라내고 원본을 수정하는 방법 추가\narr = [1, 2, 3, 4, 5] # 인덱스 1부터 3까지의 값을 8, 9로 대체\narr[1:3] = [8, 9]\nprint(arr) # 출력: [1, 8, 9, 4, 5]\n# 인덱스 2에 [3, 4]를 삽입 arr = [1, 2, 5, 6]\narr[2:2] = [3, 4]\nprint(arr) # 출력: [1, 2, 3, 4, 5, 6] 문자열 치환\ntext = \"Hello world, Hello universe\"\nnew_text = text.replace(\"Hello\", \"Hi\")\nprint(new_text) # 출력: \"Hi world, Hi universe\" 앞뒤 패딩 채우기\nPython에서 문자열.zfill(길이) 함수를 통해 왼쪽에 0을 채울 수 있습니다.또한 문자열.rjust(길이, 채울문자), 문자열.ljust(길이, 채울문자) 함수를 통해 왼쪽, 오른쪽을 채울 수 있습니다.student_tuples.sort(key=lambda \bx: x[2],reverse={bool})\nsorted(arr, key=lambda x : (x[0], x[1])) // 여러개\n\u001f//기본으로 람다에오는 기준에서 오름차순으로 비교함 // True 가 false보다 커서 True가 되는 조건을기준으로 추가할 수 있음\n// 즉 false true 이순으로 온다는거임\narr.sort(key= lambda x:(int(x[0]), len(x)!=1, int(x[1])if len(x)&gt;1 else 1001))\n길이가 가변적이면 이렇게 할 수 있음\njoin<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blockdmask.tistory.com/468\" target=\"_self\">https://blockdmask.tistory.com/468</a>전개구문<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://zmade.tistory.com/50\" target=\"_self\">https://zmade.tistory.com/50</a>구조분해할당<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://sozerodev.tistory.com/196\" target=\"_self\">https://sozerodev.tistory.com/196</a>비트연산<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://un-gaemii.tistory.com/6\" target=\"_self\">https://un-gaemii.tistory.com/6</a><br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://yiyj1030.tistory.com/267\" target=\"_self\">https://yiyj1030.tistory.com/267</a>count 로 특정문자열 개수세는게 가능<br>\nstring ,array 다가능 <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev-note-97.tistory.com/17\" target=\"_self\">https://dev-note-97.tistory.com/17</a>파이썬 none<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gtidfocus.tistory.com/67\" target=\"_self\">https://gtidfocus.tistory.com/67</a>필터나 맵같은건 보통 앞에다가 함수를 씀<br>배열 위치 : <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://sxbxn.tistory.com/35\" target=\"_self\">https://sxbxn.tistory.com/35</a>a = None\nresult = a or \"default\"count, index, find, join, strip<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://pycoding.tistory.com/entry/python-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B0%EB%B3%B8%ED%95%A8%EC%88%98-count-index-find-join-strip\" target=\"_self\">https://pycoding.tistory.com/entry/python-%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B8%B0%EB%B3%B8%ED%95%A8%EC%88%98-count-index-find-join-strip</a>min max<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blockdmask.tistory.com/411\" target=\"_self\">https://blockdmask.tistory.com/411</a>삭제관련<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://lungfish.tistory.com/entry/%ED%8C%8C%EC%9D%B4%EC%8D%ACpython-%EB%A6%AC%EC%8A%A4%ED%8A%B8list-%ED%8A%B9%EC%A0%95-%EA%B0%92-%EC%A0%9C%EA%B1%B0-listremove-del-pop-%EB%93%B1\" target=\"_self\">https://lungfish.tistory.com/entry/%ED%8C%8C%EC%9D%B4%EC%8D%ACpython-%EB%A6%AC%EC%8A%A4%ED%8A%B8list-%ED%8A%B9%EC%A0%95-%EA%B0%92-%EC%A0%9C%EA%B1%B0-listremove-del-pop-%EB%93%B1</a>튜플<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/15\" target=\"_self\">https://wikidocs.net/15</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"회전","level":3,"id":"회전_0"},{"heading":"set","level":3,"id":"set_0"},{"heading":"큐","level":3,"id":"큐_0"},{"heading":"heapq","level":3,"id":"heapq_0"},{"heading":"join","level":3,"id":"join_0"},{"heading":"타입체크","level":3,"id":"타입체크_0"},{"heading":"dictionary","level":3,"id":"dictionary_0"},{"heading":"배열","level":2,"id":"배열_0"},{"heading":"깊은 복사","level":3,"id":"깊은_복사_0"},{"heading":"이차원배열","level":3,"id":"이차원배열_0"},{"heading":"원본 리스트를 직접 자르는 방법들:","level":3,"id":"원본_리스트를_직접_자르는_방법들_0"},{"heading":"문자열","level":3,"id":"문자열_0"},{"heading":"정렬","level":3,"id":"정렬_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/python.html","pathToRoot":"..","attachments":[],"createdTime":1725532382390,"modifiedTime":1739994251979,"sourceSize":5377,"sourcePath":"600-알고리즘 & 코딩테스트/python.md","exportPath":"600-알고리즘-&-코딩테스트/python.html","showInTree":true,"treeOrder":390,"backlinks":[],"type":"markdown"},"600-알고리즘-&-코딩테스트/site.html":{"title":"site","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://wikidocs.net/217779\" target=\"_self\">https://wikidocs.net/217779</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"600-알고리즘-&-코딩테스트/site.html","pathToRoot":"..","attachments":[],"createdTime":1725608400056,"modifiedTime":1725608405269,"sourceSize":27,"sourcePath":"600-알고리즘 & 코딩테스트/site.md","exportPath":"600-알고리즘-&-코딩테스트/site.html","showInTree":true,"treeOrder":391,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html":{"title":"동기 vs 비동기, 블로킹 vs 논블로킹-1757784480602","icon":"","description":"<img src=\"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html"],"createdTime":1757784480607,"modifiedTime":1757784480607,"sourceSize":262494,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757784480602.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html","showInTree":true,"treeOrder":394,"backlinks":[],"type":"attachment"},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html":{"title":"동기 vs 비동기, 블로킹 vs 논블로킹-1757786723764","icon":"","description":"<img src=\"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html"],"createdTime":1757786723771,"modifiedTime":1757786723771,"sourceSize":317745,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786723764.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html","showInTree":true,"treeOrder":395,"backlinks":[],"type":"attachment"},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html":{"title":"동기 vs 비동기, 블로킹 vs 논블로킹-1757786738823","icon":"","description":"<img src=\"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html"],"createdTime":1757786738831,"modifiedTime":1757786738832,"sourceSize":311217,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786738823.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","showInTree":true,"treeOrder":396,"backlinks":["700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html"],"type":"attachment"},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html":{"title":"동기 vs 비동기, 블로킹 vs 논블로킹-1757786764391","icon":"","description":"<img src=\"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html"],"createdTime":1757786764396,"modifiedTime":1757786764396,"sourceSize":223378,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786764391.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html","showInTree":true,"treeOrder":397,"backlinks":["700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html"],"type":"attachment"},"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html":{"title":"스크린샷 2024-01-20 오후 7.09.39","icon":"","description":"<img src=\"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html"],"createdTime":1705745382732,"modifiedTime":1705745382732,"sourceSize":146841,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-01-20 오후 7.09.39.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html","showInTree":true,"treeOrder":398,"backlinks":["700-컴퓨터과학/보안프로토콜.html"],"type":"attachment"},"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html":{"title":"스크린샷 2024-02-15 오후 4.28.41","icon":"","description":"<img src=\"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html"],"createdTime":1707982133196,"modifiedTime":1707982133196,"sourceSize":178277,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.28.41.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","showInTree":true,"treeOrder":399,"backlinks":["700-컴퓨터과학/알고리즘.html"],"type":"attachment"},"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html":{"title":"스크린샷 2024-02-15 오후 4.31.41","icon":"","description":"<img src=\"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html"],"createdTime":1707982317012,"modifiedTime":1707982317012,"sourceSize":163620,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.31.41.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html","showInTree":true,"treeOrder":400,"backlinks":["700-컴퓨터과학/알고리즘.html"],"type":"attachment"},"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html":{"title":"스크린샷 2024-03-10 오후 8.32.38","icon":"","description":"<img src=\"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html"],"createdTime":1710070360798,"modifiedTime":1710070360798,"sourceSize":143914,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.32.38.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html","showInTree":true,"treeOrder":401,"backlinks":["700-컴퓨터과학/폰노이만구조.html"],"type":"attachment"},"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html":{"title":"스크린샷 2024-03-10 오후 8.47.17","icon":"","description":"<img src=\"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html"],"createdTime":1710071241492,"modifiedTime":1710071241492,"sourceSize":28462,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.47.17.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","showInTree":true,"treeOrder":402,"backlinks":["700-컴퓨터과학/scale-up-&-scale-out.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240120190703.html":{"title":"Pasted image 20240120190703","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240120190703.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240120190703.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240120190703.html"],"createdTime":1705745223836,"modifiedTime":1705745223836,"sourceSize":260676,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240120190703.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240120190703.html","showInTree":true,"treeOrder":403,"backlinks":["700-컴퓨터과학/보안프로토콜.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240214193456.html":{"title":"Pasted image 20240214193456","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240214193456.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240214193456.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240214193456.html"],"createdTime":1707906896356,"modifiedTime":1707906896356,"sourceSize":44403,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240214193456.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240214193456.html","showInTree":true,"treeOrder":404,"backlinks":["700-컴퓨터과학/알고리즘.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240310202225.html":{"title":"Pasted image 20240310202225","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240310202225.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240310202225.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240310202225.html"],"createdTime":1710069745294,"modifiedTime":1710069745295,"sourceSize":62788,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310202225.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310202225.html","showInTree":true,"treeOrder":405,"backlinks":["700-컴퓨터과학/폰노이만구조.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240310203122.html":{"title":"Pasted image 20240310203122","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240310203122.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240310203122.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240310203122.html"],"createdTime":1710070282464,"modifiedTime":1710070282465,"sourceSize":52548,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310203122.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310203122.html","showInTree":true,"treeOrder":406,"backlinks":["700-컴퓨터과학/폰노이만구조.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240310204327.html":{"title":"Pasted image 20240310204327","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240310204327.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240310204327.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240310204327.html"],"createdTime":1710071007119,"modifiedTime":1710071007120,"sourceSize":170800,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310204327.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310204327.html","showInTree":true,"treeOrder":407,"backlinks":["700-컴퓨터과학/scale-up-&-scale-out.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240310204859.html":{"title":"Pasted image 20240310204859","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240310204859.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240310204859.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240310204859.html"],"createdTime":1710071339808,"modifiedTime":1710071339809,"sourceSize":128890,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310204859.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310204859.html","showInTree":true,"treeOrder":408,"backlinks":["700-컴퓨터과학/scale-up-&-scale-out.html"],"type":"attachment"},"700-컴퓨터과학/assets/pasted-image-20240323173037.html":{"title":"Pasted image 20240323173037","icon":"","description":"<img src=\"700-컴퓨터과학/assets/pasted-image-20240323173037.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/assets/pasted-image-20240323173037.html","pathToRoot":"../..","attachments":["700-컴퓨터과학/assets/pasted-image-20240323173037.html"],"createdTime":1711182637206,"modifiedTime":1711182637209,"sourceSize":48185,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240323173037.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240323173037.html","showInTree":true,"treeOrder":409,"backlinks":["700-컴퓨터과학/it기초-과제2.html"],"type":"attachment"},"700-컴퓨터과학/네트워크.html":{"title":"네트워크","icon":"","description":"스푸핑\n스위핑http\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://brunch.co.kr/@swimjiy/39\" target=\"_self\">https://brunch.co.kr/@swimjiy/39</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/네트워크.html","pathToRoot":"..","attachments":[],"createdTime":1705652995000,"modifiedTime":1716708183317,"sourceSize":58,"sourcePath":"700-컴퓨터과학/네트워크.md","exportPath":"700-컴퓨터과학/네트워크.html","showInTree":true,"treeOrder":410,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html":{"title":"동기 vs 비동기, 블로킹 vs 논블로킹","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://inpa.tistory.com/entry/%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB-%EB%8F%99%EA%B8%B0%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B8%94%EB%A1%9C%ED%82%B9%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC\" target=\"_self\">https://inpa.tistory.com/entry/%F0%9F%91%A9%E2%80%8D%F0%9F%92%BB-%EB%8F%99%EA%B8%B0%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B8%94%EB%A1%9C%ED%82%B9%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC</a><br><img alt=\"동기 vs 비동기, 블로킹 vs 논블로킹-1757786738823.png\" src=\"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png\" target=\"_self\"><br><img alt=\"동기 vs 비동기, 블로킹 vs 논블로킹-1757786764391.png\" src=\"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","pathToRoot":"..","attachments":["700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html"],"createdTime":1757784456201,"modifiedTime":1757786764945,"sourceSize":356,"sourcePath":"700-컴퓨터과학/동기 vs 비동기, 블로킹 vs 논블로킹.md","exportPath":"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","showInTree":true,"treeOrder":411,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"markdown"},"700-컴퓨터과학/디자인패턴.html":{"title":"디자인패턴","icon":"","description":"\n프로그램을 설계할 때 발생했던 문제점들을 객체 간의 상호 관계등을 이용하여 해결할 수 있도록 하나의 규약 형태로 만들어 놓은것\n하나의 클래스에 하나의 인스턴스, 데이터베이스 연결 모듈에 많이 사용//원리 constructor는 암묵적으로 this를 반환.\nclass SingletonA{ constructor( ) { if(!Singleton.instance){ Singleton.instance = this } return Singleton.instance } getInstance(){ return this.instance }\n} class SingletonB { static instance constructor() { if (instance) return instance; instance = this; }\n} const singleton1 = new Singleton();\nconst singleton2 = new Singleton(); const a1 = new Singleton();\nconst a2 = new Singleton();\nconsole.log(a1===a2) // true\nnode.js에서 mysql과 mongodb의 라이브러리에서 Connect할때 때 이러한 패턴을 실제로 사용한다.const URL = 'dburl';\nconst createConnection = url =&gt; ({\"url\":url}); class DB{ constructor(url){ if(!DB.instance){ DB.instance = createConnection(url); } return DB.instance; } connect(){ return this.instance }\n} const a = new DB(URL);\nconst b = new DB(URL); console.log(a===b);//true 인스턴트 생성 비용이 줄고 자원을 공유함.\n데이터베이스 또는 로그 연결 객체와 같이 애플리케이션 전체에서 공통으로 사용되는 리소스에 대해 일관된 접근 방식 제공 가능\n애플리케이션 전역에서 객체에 접근할 수 있으므로, 별도의 파라미터 전달이나 의존성 주입과 같은 과정이 필요없다. 의존성이 커짐(=모듈간의 결합을 강하게). -&gt; 단위 테스트에 걸림돌\n멀티스레드 환경처럼 다수의 클라이언트가 동시에 접근할 때 발생하는 객체의 상태 변화에 유의해야 함. 이런 환경에서 싱글턴 객체의 동기화가 보장되지 않는다면, 이에 의존하는 코드에 다양한 오류를 발생시킬 수 있음.\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://seongjin.me/woowacourse-three-design-patterns-in-javascript/\" target=\"_self\">https://seongjin.me/woowacourse-three-design-patterns-in-javascript/</a>\n<br>=&gt; 해결 방법! 의존성주입 <a data-href=\"의존성 주입\" href=\"700-컴퓨터과학/의존성-주입.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">의존성 주입</a>\n객체 생성부분을 떼어내 추상화한 패턴\n상위 클래스에서 중요한 뼈대를 결정하고 하위클래스에서 객체생성에 대한 구체적인 내용을 결정 상위클래스에서 인스턴스 생성 방식에 알 필요가없음 -&gt; 유연성 Up\n유지 보수성이 증가\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://aljjabaegi.tistory.com/617\" target=\"_self\">https://aljjabaegi.tistory.com/617</a>const Carfactory = function({name,price}){ this.name = name; this.price = price; this.getInfo = function(){ return this.name+\"의 가격은 \"+this.price+\" 입니다.\"; }\n}\nconst car1 = new Carfactory({name: \"아반떼\", price: \"1,570 ~ 2,453만원\"});\nconst car2 = new Carfactory({name: \"쏘나타\", price: \"2,386 ~ 3,367만원\"});\nconsole.log(car1, car2);\nclass Car{ constructor(info){ this.name = info.name; this.price = info.price; } getInfo(){ return this.name+\"의 가격은 \"+this.price+\" 입니다.\"; } static factory(name){ if(name === \"Avante\"){ return new Avante(); }else if(name === \"Sonata\"){ return new Sonata(); } }\n}\nclass Sonata extends Car{ constructor(){ super({name: \"쏘나타\", price: \"2,386 ~ 3,367만원\"}); }\n}\nclass Avante extends Car{ constructor(){ super({name: \"아반테\", price: \"1,570 ~ 2,453만원\"}); }\n}\nconst avante = Car.factory(\"Avante\");\nconst sonata = Car.factory(\"Sonata\");\nconsole.log(avante, sonata); 객체 지향 디자인 패턴 중 하나로 동일한 문제를 해결하기 위한 여러 알고리즘(전략)을 정의하고, 각각을 캡슐화하여 상호 교환 가능하도록 만드는 패턴 전략 추상화 공통적으로 수행하느 전략을 추상화하여 추상클래스/인터페이스로 정의한다.\n되도록이면 하나의 역할만 수행하는 것이 좋다. 전략 구현 추상화된 전략을 상속받아 구체적인 전략을 수립한다. 전략 등록(컨텍스트) 전략을 등록하고 실행하는 메서드를 정의한다. 전략에 맞게 사용 OOP의 집합체다.(SOLID 등..)\noauth나 payment에 주로 사용\n동작이 런테임에 실시간으로 교체되어야할때 사용\n장점 : 기능 확장에 용이\n단점 : 클래스 개수 너무 많아질 수 있음. // 카카오 로그인 전략 등록\npassport.use(new KakaoStrategy({ clientID, callbackURL }, async (accessToken, refreshToken, profile, done) =&gt; { // ...\n});\n// 네이버 로그인 전략 등록\npassport.use(new NaverStrategy({ clientID, clientSecret, callbackURL }, async (accessToken, refreshToken, profile, done) =&gt; { // ...\n});\n참고 링크 :<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://inpa.tistory.com/entry/GOF-%F0%9F%92%A0-%EC%A0%84%EB%9E%B5Strategy-%ED%8C%A8%ED%84%B4-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EB%B0%B0%EC%9B%8C%EB%B3%B4%EC%9E%90\" target=\"_self\">https://inpa.tistory.com/entry/GOF-%F0%9F%92%A0-%EC%A0%84%EB%9E%B5Strategy-%ED%8C%A8%ED%84%B4-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EB%B0%B0%EC%9B%8C%EB%B3%B4%EC%9E%90</a>\n객체의 상태변화를 관찰하다가 상태변화가 있을때 메서드를 통해서 옵저버 목록에 있는 옵저버들에게 변화를 알려줌\n<br><img alt=\"../daily/assets/스크린샷 2023-11-25 오후 7.13.54.png\" src=\"daily/assets/스크린샷-2023-11-25-오후-7.13.54.png\" target=\"_self\">\n주로 이벤트 기반 시스탬과 MVC 패턴에서 사용\ninterface Subject{ register(obj:Observer):void; unregister(obj:Observer):void; notifyObservers():void; getUpdate(obj:Observer):string;\n}\ninterface Observer{ update():void;\n} class Topic implements Subject{ private observers:Observer[] = []; private message:string = \"\"; register(obj:Observer):void{ this.observers.push(obj); } unregister(obj:Observer):void{ this.observers.splice(this.observers.indexOf(obj), 1); } notifyObservers():void{ this.observers.forEach((observer:Observer) =&gt; observer.update()); } getUpdate(obj:Observer):string|null{ if(this.observers.includes(obj)){ return this.message; } return \"can't accept to message\"; } postMesssage(msg:string):void{ console.log(\"msg sended to topic :\"+ msg); this.message = msg; this.notifyObservers(); } } class TopicSubscriber implements Observer{ private name:string; private topic:Subject; constructor(name:string, topic:Subject){ this.name = name; this.topic = topic; } update():void{ let msg:string = topic.getUpdate(this); console.log(this.name + \":: got message &gt;&gt; \" + msg) }\n} let topic = new Topic();\nlet a = new TopicSubscriber(\"a\", topic);\nlet b = new TopicSubscriber(\"b\", topic);\ntopic.register(a);\ntopic.register(b);\ntopic.postMesssage(\"amumu is op champion!!\");\n<br><img alt=\"../daily/assets/Pasted image 20231129141201.png\" src=\"daily/assets/pasted-image-20231129141201.png\" target=\"_self\"><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@esthevely/JS-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-Proxy-%EA%B0%9D%EC%B2%B4-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" target=\"_self\">https://velog.io/@esthevely/JS-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-Proxy-%EA%B0%9D%EC%B2%B4-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0</a>프록시\n보안\n익명화\n접근제어\n캐싱\n로드밸런싱\n포워드 프록시와 리버스 프록시는 두 가지 서로 다른 프록시 서버 유형입니다. 각각의 주요 특징은 다음과 같습니다: 포워드 프록시(Forward Proxy): 클라이언트가 인터넷에 직접 접근하는 것을 막고, 클라이언트의 요청을 대신 받아서 외부 서버로 전달합니다.\n클라이언트가 외부 리소스에 접근할 때 프록시 서버를 경유하여 보안, 로깅, 필터링, 캐싱 등의 기능을 수행합니다.\n주로 회사나 조직의 내부 네트워크에서 직원들의 인터넷 접근을 제어하고 모니터링하는 데 사용됩니다. 리버스 프록시(Reverse Proxy): 외부에서 내부로 들어오는 클라이언트의 요청을 받아들이고 이를 내부의 서버로 전달합니다.\n클라이언트가 웹 서버에 접근할 때, 리버스 프록시 서버가 요청을 받아들이고 요청을 처리할 적절한 내부 서버(예: 웹 서버, 애플리케이션 서버)로 라우팅합니다.\n보안, 부하 분산, 성능 향상 등을 위해 사용됩니다. 외부 요청에 대한 내부 시스템의 보호와 안전성을 높이며, 여러 서버 사이의 부하를 균형있게 분산시키는 역할을 합니다. 두 유형의 프록시 서버는 각각의 목적에 따라 구성되며, 네트워크 보안 및 성능 최적화를 위해 중요한 역할을 수행합니다.<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.cloudflare.com/ko-kr/learning/cdn/glossary/reverse-proxy/\" target=\"_self\">https://www.cloudflare.com/ko-kr/learning/cdn/glossary/reverse-proxy/</a><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://inpa.tistory.com/entry/NETWORK-%F0%9F%93%A1-Reverse-Proxy-Forward-Proxy-%EC%A0%95%EC%9D%98-%EC%B0%A8%EC%9D%B4-%EC%A0%95%EB%A6%AC\" target=\"_self\">https://inpa.tistory.com/entry/NETWORK-%F0%9F%93%A1-Reverse-Proxy-Forward-Proxy-%EC%A0%95%EC%9D%98-%EC%B0%A8%EC%9D%B4-%EC%A0%95%EB%A6%AC</a>","aliases":["싱글톤","팩토리","전략","정책","옵저버"],"inlineTags":[],"frontmatterTags":["#cs"],"headers":[{"heading":"싱글톤 패턴","level":2,"id":"싱글톤_패턴_0"},{"heading":"코드와 함께 설명","level":4,"id":"코드와_함께_설명_0"},{"heading":"기본 싱글톤 생성 방식","level":5,"id":"기본_싱글톤_생성_방식_0"},{"heading":"db에서 사용 예","level":5,"id":"db에서_사용_예_0"},{"heading":"장점","level":4,"id":"장점_0"},{"heading":"단점","level":4,"id":"단점_0"},{"heading":"팩토리패턴","level":2,"id":"팩토리패턴_0"},{"heading":"장점","level":4,"id":"장점_1"},{"heading":"코드와 함께 설명","level":4,"id":"코드와_함께_설명_1"},{"heading":"팩토리 패턴 이전코드","level":5,"id":"팩토리_패턴_이전코드_0"},{"heading":"팩토리 패턴","level":5,"id":"팩토리_패턴_0"},{"heading":"전략 패턴(== 정책 패턴)","level":2,"id":"전략_패턴(==_정책_패턴)_0"},{"heading":"방법","level":4,"id":"방법_0"},{"heading":"특징","level":4,"id":"특징_0"},{"heading":"예제","level":4,"id":"예제_0"},{"heading":"옵저버 패턴","level":2,"id":"옵저버_패턴_0"},{"heading":"예제","level":4,"id":"예제_1"},{"heading":"코드","level":5,"id":"코드_0"},{"heading":"코드 시각화","level":5,"id":"코드_시각화_0"},{"heading":"프록시 객체","level":4,"id":"프록시_객체_0"}],"links":["700-컴퓨터과학/의존성-주입.html"],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/디자인패턴.html","pathToRoot":"..","attachments":["daily/assets/스크린샷-2023-11-25-오후-7.13.54.png","daily/assets/pasted-image-20231129141201.png"],"createdTime":1705652995000,"modifiedTime":1734728639709,"sourceSize":9086,"sourcePath":"700-컴퓨터과학/디자인패턴.md","exportPath":"700-컴퓨터과학/디자인패턴.html","showInTree":true,"treeOrder":412,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/면접-노트.html":{"title":"면접 노트","icon":"","description":"\n데이터를 추상화시켜 상태와 행위를 가진 객체로 만들고 그 객체들 간의 상호작용을 통해 로직을 구성하는 프로그래밍 방법 장점 : 코드 재사용 및 유지보수 용이, 대형 프로젝트에 적합\n단점 : 처리속도 느림, 설계 시 많은 시간이 필요, 객체가 많을 시 용량이 커짐 캡슐화 : 변수와 함수를 하나의 단위로 묶는 것, 정보 은닉\n상속화 : 이미 정의된 상위 클래스의 모든 속성과 연산을 하위 클래스가 물려받는 것\n추상화 : 객체들의 공통적인 특징을 도출하는 것\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"객체지향 프로그래밍이 먼가","level":4,"id":"객체지향_프로그래밍이_먼가_0"},{"heading":"특징","level":5,"id":"특징_0"},{"heading":"프로세스와 스레드 차이","level":4,"id":"프로세스와_스레드_차이_0"},{"heading":"멀티프로세스와 멀티스레드 차이","level":4,"id":"멀티프로세스와_멀티스레드_차이_0"},{"heading":"STACK과 QUEUE 차이","level":4,"id":"STACK과_QUEUE_차이_0"},{"heading":"LIST,MAP,SET의 차이","level":4,"id":"LIST,MAP,SET의_차이_0"},{"heading":"라이브러리 프레임워크 차이","level":4,"id":"라이브러리_프레임워크_차이_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/면접-노트.html","pathToRoot":"..","attachments":[],"createdTime":1705652995000,"modifiedTime":1705652995000,"sourceSize":868,"sourcePath":"700-컴퓨터과학/면접 노트.md","exportPath":"700-컴퓨터과학/면접-노트.html","showInTree":true,"treeOrder":413,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/보안프로토콜.html":{"title":"보안프로토콜","icon":"","description":"SSL(Secure Socket Layer)\n<img alt=\"./assets/Pasted image 20240120190703.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240120190703.png\" target=\"_self\"><br>\n<img alt=\"./assets/스크린샷 2024-01-20 오후 7.09.39.png\" src=\"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png\" target=\"_self\">테스트테스트테스트","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/보안프로토콜.html","pathToRoot":"..","attachments":["700-컴퓨터과학/assets/pasted-image-20240120190703.html","700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html"],"createdTime":1705759533394,"modifiedTime":1705828113898,"sourceSize":160,"sourcePath":"700-컴퓨터과학/보안프로토콜.md","exportPath":"700-컴퓨터과학/보안프로토콜.html","showInTree":true,"treeOrder":414,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/알고리즘.html":{"title":"알고리즘","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://funveloper.tistory.com/16\" target=\"_self\">https://funveloper.tistory.com/16</a>문자열 index로 read는 가능한데 write는 불가능하다.<br><img alt=\"assets/Pasted image 20240214193456.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240214193456.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">\n방향이 있는 그래프를 방향대로 나열하는 것\n노드간의 선후관계를 나타내기 위해서 사용\nex ) 일의 순서 스케줄링..등.. 답이여러가지인 경우가 있을 수 있다. -&gt; 확정적인지 여부를 구분하기위해 쓰지는 않는다.\n복잡도 : &nbsp;O(N+E) 진입차수가 0인 노드가 있어야한다!\n간선의 가중치 없다! 각 노드의 진입차수를 확인한다.\n진입차수가 0인 노드부터 시작(큐에 넣음)\n큐에 있는 노드를 뺄 때 그노드와 연결된 노드을 큐에 넣고 진입차수를 하나씩 뺀다. 그냥 bfs로 해도되는것아닌가?... ㄴㄴ imo bfs의 한종류인듯.\n사이클이 있는 경우 어떤특징?\n위상정렬에의해 특정된 값은 무슨특징을 가짐?\n시작 노드 to 다른 노드 까지의 최단거리를 계산\n즉 한시작점에 대해서 모든 정점까지의 최단거리를 계산하는 것.\nelog(e) 간선 가중치 음수 ㄴㄴ\n시작 노드가 있어야함.\nO(ev)모든 노드 to 모든 노드까지의 최단거리를 계산한다.\n모든 노드사이의 최단 경로를 구한다.\n음수가중치도 가능하다.\n시간 복잡도 :&nbsp;O(n^3) 바로 이어진 노드끼리의 거리를 기록\n<br>중간 노드를 선택<img alt=\"assets/스크린샷 2024-02-15 오후 4.28.41.png\" src=\"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png\" target=\"_self\">\n<br>중간 노드와 연결된 노드의 거리를 최소값으로 갱신<img alt=\"assets/스크린샷 2024-02-15 오후 4.31.41.png\" src=\"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png\" target=\"_self\">\n2,3을 노드 개수만큼 반복<br>\n<a data-tooltip-position=\"top\" aria-label=\"알고리즘 예시들/1613 역사\" data-href=\"알고리즘 예시들/1613 역사\" href=\".html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">1613 역사</a>\n최소신장트리\nO(ElogE)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"배열회전","level":5,"id":"배열회전_0"},{"heading":"그래프","level":2,"id":"그래프_0"},{"heading":"위상\u001b정렬","level":3,"id":"위상\u001b정렬_0"},{"heading":"조건","level":4,"id":"조건_0"},{"heading":"방법","level":4,"id":"방법_0"},{"heading":"질문","level":4,"id":"질문_0"},{"heading":"예시","level":4,"id":"예시_0"},{"heading":"다익스트라 알고리즘","level":3,"id":"다익스트라_알고리즘_0"},{"heading":"조건","level":4,"id":"조건_1"},{"heading":"벨만포드","level":3,"id":"벨만포드_0"},{"heading":"플루이드 와샬","level":3,"id":"플루이드_와샬_0"},{"heading":"방법","level":4,"id":"방법_1"},{"heading":"크루스칼","level":3,"id":"크루스칼_0"}],"links":[".html"],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/알고리즘.html","pathToRoot":"..","attachments":["700-컴퓨터과학/assets/pasted-image-20240214193456.html","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html"],"createdTime":1705652995000,"modifiedTime":1708060526336,"sourceSize":1974,"sourcePath":"700-컴퓨터과학/알고리즘.md","exportPath":"700-컴퓨터과학/알고리즘.html","showInTree":true,"treeOrder":415,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/여러가지-상속.html":{"title":"여러가지 상속","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@hkoo9329/%EC%9E%90%EB%B0%94-extends-implements-%EC%B0%A8%EC%9D%B4\" target=\"_self\">https://velog.io/@hkoo9329/%EC%9E%90%EB%B0%94-extends-implements-%EC%B0%A8%EC%9D%B4</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/여러가지-상속.html","pathToRoot":"..","attachments":[],"createdTime":1710518340982,"modifiedTime":1710518349592,"sourceSize":83,"sourcePath":"700-컴퓨터과학/여러가지 상속.md","exportPath":"700-컴퓨터과학/여러가지-상속.html","showInTree":true,"treeOrder":416,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/의존성-주입.html":{"title":"의존성 주입","icon":"","description":"<a href=\".?query=tag:cs\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#cs\">#cs</a> <br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://blog.deercorp.com/frontend-unit-test-you-must-write/\" target=\"_self\">https://blog.deercorp.com/frontend-unit-test-you-must-write/</a>메인 모듈(클래스) - 의존성 주입자 - 하위 모듈원칙 : 상위 모듈은 하위모둘의 것을 가져오면 안된다. 추상화에 의존해야한다. 이때 세부사항에 의존하지 말아야한다.의존성을 인자로 전달해준다.장점 : 위에 직접 메인 모듈이 의존성을 주는 것 보다 의존성이 떨어짐 (= 디커플링된다).단점 : 클래스 수 증가로 복잡도가 늘어날 수 있음. 약간의 런타임 시간증가를 일으킴.<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://mangkyu.tistory.com/150\" target=\"_self\">https://mangkyu.tistory.com/150</a>\n이예시가 더맘에듬. 참고.<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://velog.io/@moongq/Dependency-Injection\" target=\"_self\">https://velog.io/@moongq/Dependency-Injection</a>const User = require('./User');\nconst UsersRepository = require('./users-repository'); async function getUsers() { return UsersRepository.findAll();\n} async function addUser(userData) { const user = new User(userData); return UsersRepository.addUser(user);\n} module.exports = { getUsers, addUser\n}\nconst User = require('./User'); function UsersService(usersRepository) { // check here async function getUsers() { return usersRepository.findAll(); } async function addUser(userData) { const user = new User(userData); return usersRepository.addUser(user); } return { getUsers, addUser };\n} module.exports = UsersService //사용법\nconst usersService = new UsersService(usersRepository);\n클래스를 쓸 경우class UsersService { constructor({ usersRepository, mailer, logger }) { this.usersRepository = usersRepository; this.mailer = mailer; this.logger = logger; } async findAll() { return this.usersRepository.findAll(); } async addUser(user) { await this.usersRepository.addUser(user); this.logger.info(`User created: ${user}`); await this.mailer.sendConfirmationLink(user); this.logger.info(`Confirmation link sent: ${user}`); }\n} module.exports = UsersService; const usersService = new UsersService({ usersRepository, mailer, logger\n});\nclass Singleton { constructor(dependency) { if (Singleton.instance) { return Singleton.instance; } Singleton.instance = this; this.dependency = dependency; } doSomething() { this.dependency.doSomething(); }\n}\n<br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://medium.com/@su_bak/design-pattern-dependency-injection-%EC%9D%B4%EB%9E%80-8403c62a225c\" target=\"_self\">https://medium.com/@su_bak/design-pattern-dependency-injection-%EC%9D%B4%EB%9E%80-8403c62a225c</a>\n이렇게 인자로 외부의 값을받는게아니라 초기에 지정을해도 의존성 주입이라고 하나??","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"일반적인 예시","level":3,"id":"일반적인_예시_0"},{"heading":"의존성 주입되기 전","level":5,"id":"의존성_주입되기_전_0"},{"heading":"의존성 주입 후","level":5,"id":"의존성_주입_후_0"},{"heading":"싱글톤에서의 의존성 주입","level":5,"id":"싱글톤에서의_의존성_주입_0"},{"heading":"질문","level":5,"id":"질문_0"}],"links":["?query=tag:cs"],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/의존성-주입.html","pathToRoot":"..","attachments":[],"createdTime":1705652995000,"modifiedTime":1709555086219,"sourceSize":2710,"sourcePath":"700-컴퓨터과학/의존성 주입.md","exportPath":"700-컴퓨터과학/의존성-주입.html","showInTree":true,"treeOrder":417,"backlinks":["700-컴퓨터과학/디자인패턴.html"],"type":"markdown"},"700-컴퓨터과학/폰노이만구조.html":{"title":"폰노이만구조","icon":"","description":"<a href=\".?query=tag:폰노이만구조\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#폰노이만구조\">#폰노이만구조</a> <a href=\".?query=tag:하버드구조\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#하버드구조\">#하버드구조</a> <a href=\".?query=tag:병목현상\" class=\"tag is-unresolved\" target=\"_self\" rel=\"noopener nofollow\" data-href=\"#병목현상\">#병목현상</a>당시에는 프로그램이 하드웨어에 종속되어있는 형태였다. 프로그램의 변경이 하드웨어 변경을 야기시켰다.\n따라서 폰노이만은 프로그램 내장방식\n순차처리방식 을 통해 하드웨어 변경없이 프로그램을 범용적으로 이용하고자 하였다.<br><img alt=\"assets/Pasted image 20240310202225.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240310202225.png\" target=\"_self\" style=\"width: 300px; max-width: 100%;\">\n프로그램메모리와 데이터메모리가 물리적으로 하나의 메모리안에 구분없이 속에 했다.\n이 데이터들은 cpu와 연결되는 하나의 버스를 통해 데이터가 전달 된다.\n장점 하드웨어변경 필요 ㄴㄴ\n구조 간단함. 단점 느린속도. (순차실행 &gt; 병목현상이 생기기 마련)\n모든프로그램이 메모리에 올라와 있어야한다. <br>하버드구조 <img alt=\"assets/Pasted image 20240310203122.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240310203122.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">\n데이터메모리와 프로그메모리를 구분하여 저장하고 두개의 버스를 통해서 cpu에 병렬적으로 접근이 가능하다.\n<br>메모리 계층구조<img alt=\"assets/스크린샷 2024-03-10 오후 8.32.38.png\" src=\"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">\n지역성에 따라 가장 많이쓰는 자원을 빠른(비싸고 용량이적음) 메모리에, 잘 안쓰이는 자원을 느린(싸고 용량이큼) 메모리에 저장한다.\n지역성은 가까운시간에 쓰인 자원이 가까운시간에 쓰일 확률이 높다는 뜻의 시간지역성과 해당 자원과 인접한 자원이 쓰일 가능성이 높다를 뜻하는 공간지역성으로 나뉜다.\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"배경","level":2,"id":"배경_0"},{"heading":"구조","level":2,"id":"구조_0"},{"heading":"장단점","level":2,"id":"장단점_0"},{"heading":"해결책","level":2,"id":"해결책_0"}],"links":["?query=tag:%ED%8F%B0%EB%85%B8%EC%9D%B4%EB%A7%8C%EA%B5%AC%EC%A1%B0","?query=tag:%ED%95%98%EB%B2%84%EB%93%9C%EA%B5%AC%EC%A1%B0","?query=tag:%EB%B3%91%EB%AA%A9%ED%98%84%EC%83%81"],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/폰노이만구조.html","pathToRoot":"..","attachments":["700-컴퓨터과학/assets/pasted-image-20240310202225.html","700-컴퓨터과학/assets/pasted-image-20240310203122.html","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html"],"createdTime":1710069370432,"modifiedTime":1710071847049,"sourceSize":1603,"sourcePath":"700-컴퓨터과학/폰노이만구조.md","exportPath":"700-컴퓨터과학/폰노이만구조.html","showInTree":true,"treeOrder":418,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/합성데이터(synthetic-data).html":{"title":"합성데이터(synthetic-data)","icon":"","description":"PPT\ntitle : 합성데이터\n목차 합성데이터가 무엇인가 왜 이런데이터가 필요? 어떤 유형이 있는가 부분 합성 데이터\n완전 합성 데이터 어떤과정을통해 만드는가 시나리오 도메인 렌덤화 통계적\n딥러닝 생길수 있는 문제 평가지표 유용성 검증\n안정성 검증 - k 익명성 vae gan 비교\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://dev-hani.tistory.com/12\" target=\"_self\">https://dev-hani.tistory.com/12</a>합성데이터가 무엇인가\n컴퓨터로 생성되며 기존 데이터 세트나 알고리즘 및 모델에서 파생되어 실제 데이터의 속성과 특성을 복제함\n다양한 프로세스와 기술을 따름\n왜 이런데이터가 필요?\n쉽게 접근할수 없거나 기밀정보, 매우비쌈 =&gt; 인공지능과 기계학습의 데이터가 부족..\n장점: 쌈, 의도대로 완벽하게 레이블이 지정된 데이터가 될 수 있음\n목적과 의도에 따라 완벽히 분류된 데이터를 얻을 수 있음.\n가디언즈에 따르면 AI파이프라인에 공금하는데 피요한실제데이터ㅏㄱ 70퍼 줄어들것이다.~\n어떤과정을통해 만드는가\n일부 기존데이터 세트를 사용하고 이를 조작(노이즈를 추가하거나 일부변환)하여 세로운 예제를 만듬\nGAN : 기존데이터를 학습\n수학적 통계적 방법을 사용하여 특정 분포를 따르는 데이터를 생성 합성 데이터 생성기생길수 잇는 문제가 무엇인가\n현실세계의 실제요인을 항상정확하게설명할 수없음적용사례\n회사에 적용가능성 러시아 상트페테르부르크에 소재한 스테클로프 수학연구소(Steklov Institute of Mathematics)의 세르게이 I. 니콜렌코(Sergey I. Nikolenko)가 저작한 156쪽에 달하는 이 연구 보고서에서는 합성 데이터를 주제로 한 719개의 논문을 인용했습니다. 니콜렌코는 “합성 데이터는 딥 러닝 개발에 핵심적이다…(그리고) 더욱 많은 사용 사례가 앞으로 계속 나올 것”이라고 결론을 냈습니다.gan이 무엇인가<br>\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://m.blog.naver.com/euleekwon/221557899873\" target=\"_self\">https://m.blog.naver.com/euleekwon/221557899873</a><br><a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://medium.com/datafabrica/exploring-synthetic-data-use-cases-6114935a54d1\" target=\"_self\">https://medium.com/datafabrica/exploring-synthetic-data-use-cases-6114935a54d1</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/합성데이터(synthetic-data).html","pathToRoot":"..","attachments":[],"createdTime":1723048132854,"modifiedTime":1723048132854,"sourceSize":2209,"sourcePath":"700-컴퓨터과학/합성데이터(synthetic-data).md","exportPath":"700-컴퓨터과학/합성데이터(synthetic-data).html","showInTree":true,"treeOrder":419,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/해시.html":{"title":"해시","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://kang-james.tistory.com/entry/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%ED%95%B4%EC%8B%9CHASH-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" target=\"_self\">https://kang-james.tistory.com/entry/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-%ED%95%B4%EC%8B%9CHASH-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/해시.html","pathToRoot":"..","attachments":[],"createdTime":1713082266637,"modifiedTime":1713082269625,"sourceSize":133,"sourcePath":"700-컴퓨터과학/해시.md","exportPath":"700-컴퓨터과학/해시.html","showInTree":true,"treeOrder":420,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/db.html":{"title":"DB","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://gywn.net/category/my/\" target=\"_self\">https://gywn.net/category/my/</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"700-컴퓨터과학/db.html","pathToRoot":"..","attachments":[],"createdTime":1729817855130,"modifiedTime":1729817860425,"sourceSize":29,"sourcePath":"700-컴퓨터과학/DB.md","exportPath":"700-컴퓨터과학/db.html","showInTree":true,"treeOrder":421,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/it기초-과제2.html":{"title":"it기초 과제2","icon":"","description":" CPU와 GPU의 역할 및 특징과 차이점, 역할, 작업 분산 등을 조사하고 CPU와 GPU가 어떻게 컴퓨팅 성능을 향상시키는지 설명하라.\n<img alt=\"assets/Pasted image 20240323173037.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240323173037.png\" target=\"_self\">\nCpu는 중앙처리 장치로 각종 리소스들의 순서를 정하고 지휘하는 역할을 한다.다른 기기에 비해 코어성능이 강력하고 명령을 직렬 처리한다. 주요 &nbsp;제어장치, 누산기, ALU, 레지스터가 있다. 최근에는 코어수를 늘려 약간의 병렬처리도 지원하지만 비율이 gpu에 비해서는 현저히 낮다. Gpu는 복잡한 계산을 병렬적으로 처리하는 곳에 사용한다. 비교적 낮은 차원(cpu에 비해)의 계산을 방대하게 처리할 수 있어 이미지분석, 그래픽, 인공지능 학습에서도 많이 쓰인다\n현재에는 두가지 동시에 많이 쓰이며 Cpu에서 기본적인 프로그램제어를 하고 복잡한 계산을 작은차원의 계산으로 나눠서 gpu에게 병렬처리하도록 맡기는 방식으로 작동한다. 디스크의 회전수, 데이터 접근속도, 단위면적당 자기밀도가 각각 하드디스크의 성능에 어떻게 영향을 미치는지 조사하라.\n회전수는 데이터의 접근속도를 높여준다. 단위면적당 자기밀도는 같은 디스크 크기에 많은 용량을 저장할 수 있다. 이는 작은 물리적 이동으로 많은데이터를 처리할 수 이어 데이터 접근 속도에도 영향을 끼치기도한다. 데이터 접근속도는 하드 디스크의 역할, 데이터를 읽고 쓰는 속도기에 하드디스크의 성능이라고 볼 수 있다. 메인 메모리와 캐시 메모리의 역할과 구성에 대하여 설명하고, 최근&nbsp; PC에 사용되고 있는 메인 메모리와 캐시 메모리의 스펙에 대하여 조사하라.&nbsp; 또한 게임용 PC와 같이 고성능을 요구하는 PC와 일반용 저가용 PC에서 사용하는 스펙에 대하여 조사하고 차이점에 대하여 설명하라.\n메인 메모리 : 메인메모리(주기억장치)는 현재 처리중인 데이터와 명령을 담고 있는 메모리로 휘발성 메모리다. 하드디스크나 ssd에 비해서 빠르다. CPU 외부에 있는 메모리중에서는 가장 빠르며 CPU가 직접 접근 할 수 있는 장치다. 프로그램을 실행하기위해서는 반드시 메인메모리에 올라와야한다. 이 메인메모리가 많을 수록 많은 프로그램을 한번에 실행시킬 수 있다. 부족시에는 가상메모리라는 기법을 사용하여 실제 메모리보다 더 많은 정보를 저장할 수있다. Dram을 이용한다.\n캐시 메모리 : 캐쉬메모리는 메인 메모리와 cpu사이에 속도를 더 빨리 하기 위한 메모리다. 지역성의 특징을 가지고 사용될 데이터들을 미리 더 cpu에 가깝고 빠른 캐쉬 메모리에 저장시키므로써 속도 향상을 도모한다.\n메인메모리는 일반 상용컴퓨터에서 8G~64G까지 많이 이용하지만 캐시메모리의 경우 주로 4M~16M까지 사용한다고한다.\n게임용에서는 cpu i7or i5(높은세대), ram 16-32g, gpu rtx2060이면 충분히 게임용으로 사용 가능하다. 일반저사양 컴의경우 cpu는 i3-i5 , ram 4-8G ,gpu는 굳이 필요하지 않는 경우가 많다. 각각의 성능이 높은것도 중요하지만 성능의 균형을 맞추는것도 중요하다. 게임용의 경우, 복잡한계산작업을 빠르고 많이 해야하고 여러가지 정보를 많이 사용하기에 cpu , ram, gpu가 다 좋아야한다. 일반저사양 컴의 경우 요즘 cpu만으로도 기본적인 처리를 다 할 수 있을 만큼의 시대가 되었기 때문에 gpu까지는 굳이 필요없는 경우가 많다. ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/it기초-과제2.html","pathToRoot":"..","attachments":["700-컴퓨터과학/assets/pasted-image-20240323173037.html"],"createdTime":1711182542258,"modifiedTime":1711459159809,"sourceSize":3815,"sourcePath":"700-컴퓨터과학/it기초 과제2.md","exportPath":"700-컴퓨터과학/it기초-과제2.html","showInTree":true,"treeOrder":422,"backlinks":[],"type":"markdown"},"700-컴퓨터과학/scale-up-&-scale-out.html":{"title":"Scale Up & Scale Out","icon":"","description":"사양을 업그레이드하는것을 스케일 업이라고하고\n여러대를 확장하는것을 스케일 아웃이라고 한다.<img alt=\"assets/Pasted image 20240310204327.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240310204327.png\" target=\"_self\" style=\"width: 500px; max-width: 100%;\">관리에 용이함<br><img alt=\"assets/스크린샷 2024-03-10 오후 8.47.17.png\" src=\"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png\" target=\"_self\" style=\"width: 200px; max-width: 100%;\">\n성능에 비해 비용은 선형적으로 오르지 않음\n만약 고장이 났을 경우, 아예 작업이 불가함.<br><img alt=\"assets/Pasted image 20240310204859.png\" src=\"700-컴퓨터과학/assets/pasted-image-20240310204859.png\" target=\"_self\" style=\"width: 500px; max-width: 100%;\">일정 이상의 성능을 넘어섰을때 같은 비용대비 성능이 좋음\n한 서버에 작업량을 집중 시키지 않고 분산이 가능함\n장애가 생겼을시 다른 컴퓨터를 이용하여 작업이 가능함\n목적에 따라 물리적으로 분리도 가능관리하기 어려움. (관리하는데도 자원이 필요함.)\n만약같은 작업을 실시할경우 일관성에 문제가 생기기 쉽다.\n구조가 복잡해진다. (로드벨런서 같은걸 배치해야할 수 있음.)제 생각은 스케일업은 적은분량을 빠르게 처리하거나 적은 인원이 작업할 수 있는 양을 처리하는데 적합하다고 생각한다. 하지만 메인프레임은 복잡하고 많은 양의 작업을 처리하는 컴퓨터이다.\n스케일 아웃을 했을때 작업을 병렬적으로 처리가능하고 전체적으로는 더 높은 성능으로 작업을 처리가능하다. 또한 작업이 막혔을때 다른 컴퓨터로 대체가 가능한 안정성을 가지고 있다. 따라서 메인프레임에서는 스케일 아웃 하는게 좀 더 좋은 선택지가 되는 것 같다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"Scale Up &amp; Scale Out","level":1,"id":"Scale_Up_&_Scale_Out_0"},{"heading":"스케일업","level":2,"id":"스케일업_0"},{"heading":"장점","level":4,"id":"장점_0"},{"heading":"단점","level":4,"id":"단점_0"},{"heading":"스케일 아웃","level":2,"id":"스케일_아웃_0"},{"heading":"장점","level":4,"id":"장점_1"},{"heading":"단점","level":4,"id":"단점_1"},{"heading":"메인 프레임에서..","level":2,"id":"메인_프레임에서.._0"}],"links":[],"author":"","coverImageURL":".","fullURL":"700-컴퓨터과학/scale-up-&-scale-out.html","pathToRoot":"..","attachments":["700-컴퓨터과학/assets/pasted-image-20240310204327.html","700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","700-컴퓨터과학/assets/pasted-image-20240310204859.html"],"createdTime":1710070626413,"modifiedTime":1710124088019,"sourceSize":1669,"sourcePath":"700-컴퓨터과학/Scale Up & Scale Out.md","exportPath":"700-컴퓨터과학/scale-up-&-scale-out.html","showInTree":true,"treeOrder":423,"backlinks":[],"type":"markdown"}},"fileInfo":{"daily/assets/스크린샷-2023-11-25-오후-7.13.54.png":{"createdTime":1700907240282,"modifiedTime":1700907240283,"sourceSize":349544,"sourcePath":"daily/assets/스크린샷 2023-11-25 오후 7.13.54.png","exportPath":"daily/assets/스크린샷-2023-11-25-오후-7.13.54.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"daily/assets/pasted-image-20231129141201.png":{"createdTime":1701234721909,"modifiedTime":1701234721909,"sourceSize":137896,"sourcePath":"daily/assets/Pasted image 20231129141201.png","exportPath":"daily/assets/pasted-image-20231129141201.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/scripts/graph-wasm.wasm":{"createdTime":1756570684369,"modifiedTime":1756564405438.4292,"sourceSize":23655,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.wasm","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"site-lib/fonts/94f2f163d4b698242fef.otf":{"createdTime":1757859220482,"modifiedTime":1757859220482,"sourceSize":66800,"sourcePath":"","exportPath":"site-lib/fonts/94f2f163d4b698242fef.otf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/72505e6a122c6acd5471.woff2":{"createdTime":1757859220485,"modifiedTime":1757859220485,"sourceSize":104232,"sourcePath":"","exportPath":"site-lib/fonts/72505e6a122c6acd5471.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/2d5198822ab091ce4305.woff2":{"createdTime":1757859220485,"modifiedTime":1757859220485,"sourceSize":104332,"sourcePath":"","exportPath":"site-lib/fonts/2d5198822ab091ce4305.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/c8ba52b05a9ef10f4758.woff2":{"createdTime":1757859220485,"modifiedTime":1757859220485,"sourceSize":98868,"sourcePath":"","exportPath":"site-lib/fonts/c8ba52b05a9ef10f4758.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cb10ffd7684cd9836a05.woff2":{"createdTime":1757859220486,"modifiedTime":1757859220486,"sourceSize":106876,"sourcePath":"","exportPath":"site-lib/fonts/cb10ffd7684cd9836a05.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/293fd13dbca5a3e450ef.woff2":{"createdTime":1757859220486,"modifiedTime":1757859220486,"sourceSize":105924,"sourcePath":"","exportPath":"site-lib/fonts/293fd13dbca5a3e450ef.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/085cb93e613ba3d40d2b.woff2":{"createdTime":1757859220485,"modifiedTime":1757859220485,"sourceSize":112184,"sourcePath":"","exportPath":"site-lib/fonts/085cb93e613ba3d40d2b.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/b5f0f109bc88052d4000.woff2":{"createdTime":1757859220486,"modifiedTime":1757859220486,"sourceSize":105804,"sourcePath":"","exportPath":"site-lib/fonts/b5f0f109bc88052d4000.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cbe0ae49c52c920fd563.woff2":{"createdTime":1757859220487,"modifiedTime":1757859220487,"sourceSize":106108,"sourcePath":"","exportPath":"site-lib/fonts/cbe0ae49c52c920fd563.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/535a6cf662596b3bd6a6.woff2":{"createdTime":1757859220486,"modifiedTime":1757859220486,"sourceSize":111708,"sourcePath":"","exportPath":"site-lib/fonts/535a6cf662596b3bd6a6.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/70cc7ff27245e82ad414.ttf":{"createdTime":1757859220488,"modifiedTime":1757859220488,"sourceSize":192740,"sourcePath":"","exportPath":"site-lib/fonts/70cc7ff27245e82ad414.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/454577c22304619db035.ttf":{"createdTime":1757859220487,"modifiedTime":1757859220487,"sourceSize":161376,"sourcePath":"","exportPath":"site-lib/fonts/454577c22304619db035.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/52ac8f3034507f1d9e53.ttf":{"createdTime":1757859220487,"modifiedTime":1757859220487,"sourceSize":191568,"sourcePath":"","exportPath":"site-lib/fonts/52ac8f3034507f1d9e53.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/05b618077343fbbd92b7.ttf":{"createdTime":1757859220487,"modifiedTime":1757859220487,"sourceSize":155288,"sourcePath":"","exportPath":"site-lib/fonts/05b618077343fbbd92b7.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2":{"createdTime":1757859220482,"modifiedTime":1757859220482,"sourceSize":7876,"sourcePath":"","exportPath":"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/media/6155340132a851f6089e.svg":{"createdTime":1757859220482,"modifiedTime":1757859220482,"sourceSize":315,"sourcePath":"","exportPath":"site-lib/media/6155340132a851f6089e.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/media/2308ab1944a6bfa5c5b8.svg":{"createdTime":1757859220482,"modifiedTime":1757859220482,"sourceSize":278,"sourcePath":"","exportPath":"site-lib/media/2308ab1944a6bfa5c5b8.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/html/file-tree-content.html":{"createdTime":1757859222678,"modifiedTime":1757859222678,"sourceSize":160520,"sourcePath":"","exportPath":"site-lib/html/file-tree-content.html","showInTree":false,"treeOrder":0,"backlinks":[],"type":"html","data":null},"site-lib/scripts/webpage.js":{"createdTime":1757767056673,"modifiedTime":1757767056673,"sourceSize":110729,"sourcePath":"","exportPath":"site-lib/scripts/webpage.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-wasm.js":{"createdTime":1757767056673,"modifiedTime":1757767056673,"sourceSize":12885,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-render-worker.js":{"createdTime":1757767056673,"modifiedTime":1757767056673,"sourceSize":5681,"sourcePath":"","exportPath":"site-lib/scripts/graph-render-worker.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/media/favicon.png":{"createdTime":1757859220316,"modifiedTime":1757859220316,"sourceSize":1105,"sourcePath":"","exportPath":"site-lib/media/favicon.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/styles/snippets.css":{"createdTime":1757859220479,"modifiedTime":1757859220479,"sourceSize":25072,"sourcePath":"","exportPath":"site-lib/styles/snippets.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/obsidian.css":{"createdTime":1757859220529,"modifiedTime":1757859220529,"sourceSize":198316,"sourcePath":"","exportPath":"site-lib/styles/obsidian.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/theme.css":{"createdTime":1757767056841,"modifiedTime":1757767056841,"sourceSize":286560,"sourcePath":"","exportPath":"site-lib/styles/theme.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/global-variable-styles.css":{"createdTime":1757859220436,"modifiedTime":1757859220436,"sourceSize":616,"sourcePath":"","exportPath":"site-lib/styles/global-variable-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/supported-plugins.css":{"createdTime":1757859220436,"modifiedTime":1757859220436,"sourceSize":1689,"sourcePath":"","exportPath":"site-lib/styles/supported-plugins.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/main-styles.css":{"createdTime":1757767056692,"modifiedTime":1757767056692,"sourceSize":19521,"sourcePath":"","exportPath":"site-lib/styles/main-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/rss.xml":{"createdTime":1757859310490,"modifiedTime":1757859310490,"sourceSize":436515,"sourcePath":"","exportPath":"site-lib/rss.xml","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"home.html":{"createdTime":1756573499169,"modifiedTime":1756573506710,"sourceSize":12,"sourcePath":"home.md","exportPath":"home.html","showInTree":true,"treeOrder":903,"backlinks":[],"type":"markdown","data":null},"99-settings/1-topics/📖-100-데이터-분석-&-ai.html":{"createdTime":1756579218952,"modifiedTime":1757340459924,"sourceSize":393,"sourcePath":"99-Settings/1-Topics/📖 100 데이터 분석 & AI.md","exportPath":"99-settings/1-topics/📖-100-데이터-분석-&-ai.html","showInTree":true,"treeOrder":2,"backlinks":["99-settings/1-topics/📚-101-머신러닝.html","99-settings/1-topics/📚-102-딥러닝.html","99-settings/1-topics/📚-103-데이터-모델링.html","99-settings/1-topics/📚-104-통계-분석.html","99-settings/1-topics/📚-105-캐글.html","99-settings/1-topics/📚-106-llm-&-ai.html","99-settings/1-topics/📚-107-인공신경망.html","99-settings/1-topics/📚-108-의사결정나무.html","99-settings/1-topics/📚-109-연관성-분석.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-200-웹-개발.html":{"createdTime":1756579254926,"modifiedTime":1757340459925,"sourceSize":365,"sourcePath":"99-Settings/1-Topics/📖 200 웹 개발.md","exportPath":"99-settings/1-topics/📖-200-웹-개발.html","showInTree":true,"treeOrder":3,"backlinks":["99-settings/1-topics/📚-201-react.html","99-settings/1-topics/📚-202-vue.js.html","99-settings/1-topics/📚-203-next.js.html","99-settings/1-topics/📚-204-node.js.html","99-settings/1-topics/📚-205-웹팩-&-빌드.html","99-settings/1-topics/📚-206-상태관리.html","99-settings/1-topics/📚-207-css-&-스타일링.html","99-settings/1-topics/📚-208-웹-렌더링.html","99-settings/1-topics/📚-209-3d-웹.html","99-settings/1-topics/📚-210-electron-&-tauri.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-300-백엔드-개발.html":{"createdTime":1756579298665,"modifiedTime":1757340459924,"sourceSize":296,"sourcePath":"99-Settings/1-Topics/📖 300 백엔드 개발.md","exportPath":"99-settings/1-topics/📖-300-백엔드-개발.html","showInTree":true,"treeOrder":4,"backlinks":["99-settings/1-topics/📚-301-spring.html","99-settings/1-topics/📚-302-django.html","99-settings/1-topics/📚-303-fastapi.html","99-settings/1-topics/📚-304-express.js.html","99-settings/1-topics/📚-305-데이터베이스.html","99-settings/1-topics/📚-306-api-설계.html","99-settings/1-topics/📚-307-인증-&-보안.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-400-인프라-&-아키텍처.html":{"createdTime":1756579338312,"modifiedTime":1757340457449,"sourceSize":389,"sourcePath":"99-Settings/1-Topics/📖 400 인프라 & 아키텍처.md","exportPath":"99-settings/1-topics/📖-400-인프라-&-아키텍처.html","showInTree":true,"treeOrder":5,"backlinks":["99-settings/1-topics/📚-401-docker-&-kubernetes.html","99-settings/1-topics/📚-402-aws-&-클라우드.html","99-settings/1-topics/📚-403-시스템-설계.html","99-settings/1-topics/📚-404-마이크로서비스.html","99-settings/1-topics/📚-405-모니터링-&-로깅.html","99-settings/1-topics/📚-406-ci-cd.html","99-settings/1-topics/📚-407-네트워크-&-보안.html","99-settings/1-topics/📚-408-스케일링.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-500-모바일-개발.html":{"createdTime":1756579382845,"modifiedTime":1757340457447,"sourceSize":289,"sourcePath":"99-Settings/1-Topics/📖 500 모바일 개발.md","exportPath":"99-settings/1-topics/📖-500-모바일-개발.html","showInTree":true,"treeOrder":6,"backlinks":["99-settings/1-topics/📚-501-flutter.html","99-settings/1-topics/📚-502-android.html","99-settings/1-topics/📚-503-dart.html","99-settings/1-topics/📚-504-riverpod.html","99-settings/1-topics/📚-505-상태관리.html","99-settings/1-topics/📚-506-네트워킹.html","99-settings/1-topics/📚-507-빌드-&-배포.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html":{"createdTime":1756579422754,"modifiedTime":1757345670353,"sourceSize":662,"sourcePath":"99-Settings/1-Topics/📖 600 알고리즘 & 코딩테스트.md","exportPath":"99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html","showInTree":true,"treeOrder":7,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📚-601-구현-&-완전탐색.html","99-settings/1-topics/📚-602-그리디.html","99-settings/1-topics/📚-603-다이나믹프로그래밍.html","99-settings/1-topics/📚-604-최단경로.html","99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","99-settings/1-topics/📚-606-세그먼트트리.html","99-settings/1-topics/📚-607-슬라이딩윈도우.html","99-settings/1-topics/📚-608-위상정렬.html","99-settings/1-topics/📚-609-유니온파인드.html","99-settings/1-topics/📚-610-이진탐색.html","99-settings/1-topics/📚-611-정렬.html","99-settings/1-topics/📚-612-최소신장트리.html","99-settings/1-topics/📚-613-bfs-&-dfs.html","99-settings/1-topics/📚-614-그래프.html","99-settings/1-topics/📚-615-정렬알고리즘.html","99-settings/1-topics/📚-616-python.html","99-settings/1-topics/📚-617-java.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-700-컴퓨터-과학.html":{"createdTime":1756579505212,"modifiedTime":1757340457449,"sourceSize":287,"sourcePath":"99-Settings/1-Topics/📖 700 컴퓨터 과학.md","exportPath":"99-settings/1-topics/📖-700-컴퓨터-과학.html","showInTree":true,"treeOrder":8,"backlinks":["99-settings/1-topics/📚-701-디자인패턴.html","99-settings/1-topics/📚-702-네트워크.html","99-settings/1-topics/📚-703-데이터베이스.html","99-settings/1-topics/📚-704-운영체제.html","99-settings/1-topics/📚-705-보안.html","99-settings/1-topics/📚-706-시스템-설계.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-800-프로젝트.html":{"createdTime":1757342228257,"modifiedTime":1757342240987,"sourceSize":62,"sourcePath":"99-Settings/1-Topics/📖 800 프로젝트.md","exportPath":"99-settings/1-topics/📖-800-프로젝트.html","showInTree":true,"treeOrder":9,"backlinks":["99-settings/1-topics/📚-801-다-맡게팅.html"],"type":"markdown","data":null},"99-settings/1-topics/📖-900-기타.html":{"createdTime":1757341960279,"modifiedTime":1757342000625,"sourceSize":69,"sourcePath":"99-Settings/1-Topics/📖 900 기타.md","exportPath":"99-settings/1-topics/📖-900-기타.html","showInTree":true,"treeOrder":10,"backlinks":[],"type":"markdown","data":null},"99-settings/1-topics/📚-101-머신러닝.html":{"createdTime":1757340446876,"modifiedTime":1757340457473,"sourceSize":141,"sourcePath":"99-Settings/1-Topics/📚 101 머신러닝.md","exportPath":"99-settings/1-topics/📚-101-머신러닝.html","showInTree":true,"treeOrder":11,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-102-딥러닝.html":{"createdTime":1757340446833,"modifiedTime":1757340459925,"sourceSize":135,"sourcePath":"99-Settings/1-Topics/📚 102 딥러닝.md","exportPath":"99-settings/1-topics/📚-102-딥러닝.html","showInTree":true,"treeOrder":12,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-103-데이터-모델링.html":{"createdTime":1757340446899,"modifiedTime":1757340446900,"sourceSize":156,"sourcePath":"99-Settings/1-Topics/📚 103 데이터 모델링.md","exportPath":"99-settings/1-topics/📚-103-데이터-모델링.html","showInTree":true,"treeOrder":13,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-104-통계-분석.html":{"createdTime":1757340446897,"modifiedTime":1757340446897,"sourceSize":144,"sourcePath":"99-Settings/1-Topics/📚 104 통계 분석.md","exportPath":"99-settings/1-topics/📚-104-통계-분석.html","showInTree":true,"treeOrder":14,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-105-캐글.html":{"createdTime":1757340446894,"modifiedTime":1757340446894,"sourceSize":130,"sourcePath":"99-Settings/1-Topics/📚 105 캐글.md","exportPath":"99-settings/1-topics/📚-105-캐글.html","showInTree":true,"treeOrder":15,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-106-llm-&-ai.html":{"createdTime":1757340446905,"modifiedTime":1757340446905,"sourceSize":134,"sourcePath":"99-Settings/1-Topics/📚 106 LLM & AI.md","exportPath":"99-settings/1-topics/📚-106-llm-&-ai.html","showInTree":true,"treeOrder":16,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-107-인공신경망.html":{"createdTime":1757340446836,"modifiedTime":1757340446836,"sourceSize":148,"sourcePath":"99-Settings/1-Topics/📚 107 인공신경망.md","exportPath":"99-settings/1-topics/📚-107-인공신경망.html","showInTree":true,"treeOrder":17,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-108-의사결정나무.html":{"createdTime":1757340446977,"modifiedTime":1757340446977,"sourceSize":154,"sourcePath":"99-Settings/1-Topics/📚 108 의사결정나무.md","exportPath":"99-settings/1-topics/📚-108-의사결정나무.html","showInTree":true,"treeOrder":18,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-109-연관성-분석.html":{"createdTime":1757340446973,"modifiedTime":1757340446973,"sourceSize":150,"sourcePath":"99-Settings/1-Topics/📚 109 연관성 분석.md","exportPath":"99-settings/1-topics/📚-109-연관성-분석.html","showInTree":true,"treeOrder":19,"backlinks":["99-settings/1-topics/📖-100-데이터-분석-&-ai.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-201-react.html":{"createdTime":1757340446966,"modifiedTime":1757340457449,"sourceSize":116,"sourcePath":"99-Settings/1-Topics/📚 201 React.md","exportPath":"99-settings/1-topics/📚-201-react.html","showInTree":true,"treeOrder":20,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-202-vue.js.html":{"createdTime":1757340446843,"modifiedTime":1757340457485,"sourceSize":118,"sourcePath":"99-Settings/1-Topics/📚 202 Vue.js.md","exportPath":"99-settings/1-topics/📚-202-vue.js.html","showInTree":true,"treeOrder":21,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-203-next.js.html":{"createdTime":1757340446969,"modifiedTime":1757340446970,"sourceSize":121,"sourcePath":"99-Settings/1-Topics/📚 203 Next.js.md","exportPath":"99-settings/1-topics/📚-203-next.js.html","showInTree":true,"treeOrder":22,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-204-node.js.html":{"createdTime":1757340446873,"modifiedTime":1757340446873,"sourceSize":121,"sourcePath":"99-Settings/1-Topics/📚 204 Node.js.md","exportPath":"99-settings/1-topics/📚-204-node.js.html","showInTree":true,"treeOrder":23,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-205-웹팩-&-빌드.html":{"createdTime":1757340446921,"modifiedTime":1757340446922,"sourceSize":137,"sourcePath":"99-Settings/1-Topics/📚 205 웹팩 & 빌드.md","exportPath":"99-settings/1-topics/📚-205-웹팩-&-빌드.html","showInTree":true,"treeOrder":24,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-206-상태관리.html":{"createdTime":1757340446855,"modifiedTime":1757340446855,"sourceSize":131,"sourcePath":"99-Settings/1-Topics/📚 206 상태관리.md","exportPath":"99-settings/1-topics/📚-206-상태관리.html","showInTree":true,"treeOrder":25,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-207-css-&-스타일링.html":{"createdTime":1757340446951,"modifiedTime":1757340446951,"sourceSize":143,"sourcePath":"99-Settings/1-Topics/📚 207 CSS & 스타일링.md","exportPath":"99-settings/1-topics/📚-207-css-&-스타일링.html","showInTree":true,"treeOrder":26,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-208-웹-렌더링.html":{"createdTime":1757340446956,"modifiedTime":1757340446956,"sourceSize":133,"sourcePath":"99-Settings/1-Topics/📚 208 웹 렌더링.md","exportPath":"99-settings/1-topics/📚-208-웹-렌더링.html","showInTree":true,"treeOrder":27,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-209-3d-웹.html":{"createdTime":1757340446852,"modifiedTime":1757340446852,"sourceSize":119,"sourcePath":"99-Settings/1-Topics/📚 209 3D 웹.md","exportPath":"99-settings/1-topics/📚-209-3d-웹.html","showInTree":true,"treeOrder":28,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-210-electron-&-tauri.html":{"createdTime":1757340446823,"modifiedTime":1757340446824,"sourceSize":139,"sourcePath":"99-Settings/1-Topics/📚 210 Electron & Tauri.md","exportPath":"99-settings/1-topics/📚-210-electron-&-tauri.html","showInTree":true,"treeOrder":29,"backlinks":["99-settings/1-topics/📖-200-웹-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-301-spring.html":{"createdTime":1757340446925,"modifiedTime":1757340457481,"sourceSize":124,"sourcePath":"99-Settings/1-Topics/📚 301 Spring.md","exportPath":"99-settings/1-topics/📚-301-spring.html","showInTree":true,"treeOrder":30,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-302-django.html":{"createdTime":1757340446910,"modifiedTime":1757340457481,"sourceSize":124,"sourcePath":"99-Settings/1-Topics/📚 302 Django.md","exportPath":"99-settings/1-topics/📚-302-django.html","showInTree":true,"treeOrder":31,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-303-fastapi.html":{"createdTime":1757340446865,"modifiedTime":1757340446865,"sourceSize":127,"sourcePath":"99-Settings/1-Topics/📚 303 FastAPI.md","exportPath":"99-settings/1-topics/📚-303-fastapi.html","showInTree":true,"treeOrder":32,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-304-express.js.html":{"createdTime":1757340446947,"modifiedTime":1757340446947,"sourceSize":133,"sourcePath":"99-Settings/1-Topics/📚 304 Express.js.md","exportPath":"99-settings/1-topics/📚-304-express.js.html","showInTree":true,"treeOrder":33,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-305-데이터베이스.html":{"createdTime":1757340446936,"modifiedTime":1757340446936,"sourceSize":149,"sourcePath":"99-Settings/1-Topics/📚 305 데이터베이스.md","exportPath":"99-settings/1-topics/📚-305-데이터베이스.html","showInTree":true,"treeOrder":34,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-306-api-설계.html":{"createdTime":1757340446821,"modifiedTime":1757340446821,"sourceSize":133,"sourcePath":"99-Settings/1-Topics/📚 306 API 설계.md","exportPath":"99-settings/1-topics/📚-306-api-설계.html","showInTree":true,"treeOrder":35,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-307-인증-&-보안.html":{"createdTime":1757340446814,"modifiedTime":1757340446814,"sourceSize":143,"sourcePath":"99-Settings/1-Topics/📚 307 인증 & 보안.md","exportPath":"99-settings/1-topics/📚-307-인증-&-보안.html","showInTree":true,"treeOrder":36,"backlinks":["99-settings/1-topics/📖-300-백엔드-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-401-docker-&-kubernetes.html":{"createdTime":1757340446944,"modifiedTime":1757340457488,"sourceSize":158,"sourcePath":"99-Settings/1-Topics/📚 401 Docker & Kubernetes.md","exportPath":"99-settings/1-topics/📚-401-docker-&-kubernetes.html","showInTree":true,"treeOrder":37,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-402-aws-&-클라우드.html":{"createdTime":1757340446959,"modifiedTime":1757340446959,"sourceSize":157,"sourcePath":"99-Settings/1-Topics/📚 402 AWS & 클라우드.md","exportPath":"99-settings/1-topics/📚-402-aws-&-클라우드.html","showInTree":true,"treeOrder":38,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-403-시스템-설계.html":{"createdTime":1757340446817,"modifiedTime":1757340446817,"sourceSize":153,"sourcePath":"99-Settings/1-Topics/📚 403 시스템 설계.md","exportPath":"99-settings/1-topics/📚-403-시스템-설계.html","showInTree":true,"treeOrder":39,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html","400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-404-마이크로서비스.html":{"createdTime":1757340446929,"modifiedTime":1757340446929,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 404 마이크로서비스.md","exportPath":"99-settings/1-topics/📚-404-마이크로서비스.html","showInTree":true,"treeOrder":40,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-405-모니터링-&-로깅.html":{"createdTime":1757340446953,"modifiedTime":1757340446954,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 405 모니터링 & 로깅.md","exportPath":"99-settings/1-topics/📚-405-모니터링-&-로깅.html","showInTree":true,"treeOrder":41,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-406-ci-cd.html":{"createdTime":1757340446809,"modifiedTime":1757340446809,"sourceSize":131,"sourcePath":"99-Settings/1-Topics/📚 406 CI-CD.md","exportPath":"99-settings/1-topics/📚-406-ci-cd.html","showInTree":true,"treeOrder":42,"backlinks":[],"type":"markdown","data":null},"99-settings/1-topics/📚-407-네트워크-&-보안.html":{"createdTime":1757340446964,"modifiedTime":1757340446964,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 407 네트워크 & 보안.md","exportPath":"99-settings/1-topics/📚-407-네트워크-&-보안.html","showInTree":true,"treeOrder":43,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-408-스케일링.html":{"createdTime":1757340446933,"modifiedTime":1757340446933,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 408 스케일링.md","exportPath":"99-settings/1-topics/📚-408-스케일링.html","showInTree":true,"treeOrder":44,"backlinks":["99-settings/1-topics/📖-400-인프라-&-아키텍처.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-501-flutter.html":{"createdTime":1757340446883,"modifiedTime":1757340457485,"sourceSize":126,"sourcePath":"99-Settings/1-Topics/📚 501 Flutter.md","exportPath":"99-settings/1-topics/📚-501-flutter.html","showInTree":true,"treeOrder":45,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-502-android.html":{"createdTime":1757340446826,"modifiedTime":1757340446826,"sourceSize":127,"sourcePath":"99-Settings/1-Topics/📚 502 Android.md","exportPath":"99-settings/1-topics/📚-502-android.html","showInTree":true,"treeOrder":46,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-503-dart.html":{"createdTime":1757340446862,"modifiedTime":1757340446862,"sourceSize":121,"sourcePath":"99-Settings/1-Topics/📚 503 Dart.md","exportPath":"99-settings/1-topics/📚-503-dart.html","showInTree":true,"treeOrder":47,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-504-riverpod.html":{"createdTime":1757340446812,"modifiedTime":1757340446812,"sourceSize":129,"sourcePath":"99-Settings/1-Topics/📚 504 Riverpod.md","exportPath":"99-settings/1-topics/📚-504-riverpod.html","showInTree":true,"treeOrder":48,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-505-상태관리.html":{"createdTime":1757340446850,"modifiedTime":1757340446850,"sourceSize":147,"sourcePath":"99-Settings/1-Topics/📚 505 상태관리.md","exportPath":"99-settings/1-topics/📚-505-상태관리.html","showInTree":true,"treeOrder":49,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-506-네트워킹.html":{"createdTime":1757340446867,"modifiedTime":1757340446867,"sourceSize":147,"sourcePath":"99-Settings/1-Topics/📚 506 네트워킹.md","exportPath":"99-settings/1-topics/📚-506-네트워킹.html","showInTree":true,"treeOrder":50,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-507-빌드-&-배포.html":{"createdTime":1757340446838,"modifiedTime":1757340446839,"sourceSize":153,"sourcePath":"99-Settings/1-Topics/📚 507 빌드 & 배포.md","exportPath":"99-settings/1-topics/📚-507-빌드-&-배포.html","showInTree":true,"treeOrder":51,"backlinks":["99-settings/1-topics/📖-500-모바일-개발.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-601-구현-&-완전탐색.html":{"createdTime":1757340446831,"modifiedTime":1757340446831,"sourceSize":169,"sourcePath":"99-Settings/1-Topics/📚 601 구현 & 완전탐색.md","exportPath":"99-settings/1-topics/📚-601-구현-&-완전탐색.html","showInTree":true,"treeOrder":52,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-602-그리디.html":{"createdTime":1757340446961,"modifiedTime":1757340446961,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 602 그리디.md","exportPath":"99-settings/1-topics/📚-602-그리디.html","showInTree":true,"treeOrder":53,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/theory/그리디.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-603-다이나믹프로그래밍.html":{"createdTime":1757340446907,"modifiedTime":1757340446908,"sourceSize":181,"sourcePath":"99-Settings/1-Topics/📚 603 다이나믹프로그래밍.md","exportPath":"99-settings/1-topics/📚-603-다이나믹프로그래밍.html","showInTree":true,"treeOrder":54,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-604-최단경로.html":{"createdTime":1757340446859,"modifiedTime":1757340446859,"sourceSize":151,"sourcePath":"99-Settings/1-Topics/📚 604 최단경로.md","exportPath":"99-settings/1-topics/📚-604-최단경로.html","showInTree":true,"treeOrder":55,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html":{"createdTime":1757340446840,"modifiedTime":1757340446841,"sourceSize":187,"sourcePath":"99-Settings/1-Topics/📚 605 비트연산 & 비트마스킹.md","exportPath":"99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","showInTree":true,"treeOrder":56,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-606-세그먼트트리.html":{"createdTime":1757340446848,"modifiedTime":1757340446848,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 606 세그먼트트리.md","exportPath":"99-settings/1-topics/📚-606-세그먼트트리.html","showInTree":true,"treeOrder":57,"backlinks":["600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-607-슬라이딩윈도우.html":{"createdTime":1757340446880,"modifiedTime":1757340446880,"sourceSize":169,"sourcePath":"99-Settings/1-Topics/📚 607 슬라이딩윈도우.md","exportPath":"99-settings/1-topics/📚-607-슬라이딩윈도우.html","showInTree":true,"treeOrder":58,"backlinks":["600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-608-위상정렬.html":{"createdTime":1757340446891,"modifiedTime":1757340446891,"sourceSize":151,"sourcePath":"99-Settings/1-Topics/📚 608 위상정렬.md","exportPath":"99-settings/1-topics/📚-608-위상정렬.html","showInTree":true,"treeOrder":59,"backlinks":["600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-609-유니온파인드.html":{"createdTime":1757340446857,"modifiedTime":1757340446857,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 609 유니온파인드.md","exportPath":"99-settings/1-topics/📚-609-유니온파인드.html","showInTree":true,"treeOrder":60,"backlinks":["600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-610-이진탐색.html":{"createdTime":1757340446902,"modifiedTime":1757340446902,"sourceSize":151,"sourcePath":"99-Settings/1-Topics/📚 610 이진탐색.md","exportPath":"99-settings/1-topics/📚-610-이진탐색.html","showInTree":true,"treeOrder":61,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-611-정렬.html":{"createdTime":1757340446912,"modifiedTime":1757340446913,"sourceSize":139,"sourcePath":"99-Settings/1-Topics/📚 611 정렬.md","exportPath":"99-settings/1-topics/📚-611-정렬.html","showInTree":true,"treeOrder":62,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/theory/정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-612-최소신장트리.html":{"createdTime":1757340446915,"modifiedTime":1757340446915,"sourceSize":163,"sourcePath":"99-Settings/1-Topics/📚 612 최소신장트리.md","exportPath":"99-settings/1-topics/📚-612-최소신장트리.html","showInTree":true,"treeOrder":63,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-613-bfs-&-dfs.html":{"createdTime":1757340446807,"modifiedTime":1757340446807,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 613 BFS & DFS.md","exportPath":"99-settings/1-topics/📚-613-bfs-&-dfs.html","showInTree":true,"treeOrder":64,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-614-그래프.html":{"createdTime":1757340446845,"modifiedTime":1757340446845,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 614 그래프.md","exportPath":"99-settings/1-topics/📚-614-그래프.html","showInTree":true,"treeOrder":65,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-615-정렬알고리즘.html":{"createdTime":1757345585891,"modifiedTime":1757345670353,"sourceSize":173,"sourcePath":"99-Settings/1-Topics/📚 615 정렬알고리즘.md","exportPath":"99-settings/1-topics/📚-615-정렬알고리즘.html","showInTree":true,"treeOrder":66,"backlinks":["600-알고리즘-&-코딩테스트/theory/정렬.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-616-python.html":{"createdTime":1757340446941,"modifiedTime":1757340446941,"sourceSize":139,"sourcePath":"99-Settings/1-Topics/📚 616 Python.md","exportPath":"99-settings/1-topics/📚-616-python.html","showInTree":true,"treeOrder":67,"backlinks":["99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-617-java.html":{"createdTime":1757340446828,"modifiedTime":1757340446828,"sourceSize":135,"sourcePath":"99-Settings/1-Topics/📚 617 Java.md","exportPath":"99-settings/1-topics/📚-617-java.html","showInTree":true,"treeOrder":68,"backlinks":["600-알고리즘-&-코딩테스트/problem/kt_누적합.html","99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-701-디자인패턴.html":{"createdTime":1757340446888,"modifiedTime":1757340446888,"sourceSize":143,"sourcePath":"99-Settings/1-Topics/📚 701 디자인패턴.md","exportPath":"99-settings/1-topics/📚-701-디자인패턴.html","showInTree":true,"treeOrder":69,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-702-네트워크.html":{"createdTime":1757340446939,"modifiedTime":1757340446939,"sourceSize":137,"sourcePath":"99-Settings/1-Topics/📚 702 네트워크.md","exportPath":"99-settings/1-topics/📚-702-네트워크.html","showInTree":true,"treeOrder":70,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-703-데이터베이스.html":{"createdTime":1757340446918,"modifiedTime":1757340446918,"sourceSize":149,"sourcePath":"99-Settings/1-Topics/📚 703 데이터베이스.md","exportPath":"99-settings/1-topics/📚-703-데이터베이스.html","showInTree":true,"treeOrder":71,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-704-운영체제.html":{"createdTime":1757340446804,"modifiedTime":1757340446804,"sourceSize":137,"sourcePath":"99-Settings/1-Topics/📚 704 운영체제.md","exportPath":"99-settings/1-topics/📚-704-운영체제.html","showInTree":true,"treeOrder":72,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-705-보안.html":{"createdTime":1757340446949,"modifiedTime":1757340446949,"sourceSize":125,"sourcePath":"99-Settings/1-Topics/📚 705 보안.md","exportPath":"99-settings/1-topics/📚-705-보안.html","showInTree":true,"treeOrder":73,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-706-시스템-설계.html":{"createdTime":1757340446870,"modifiedTime":1757340446870,"sourceSize":145,"sourcePath":"99-Settings/1-Topics/📚 706 시스템 설계.md","exportPath":"99-settings/1-topics/📚-706-시스템-설계.html","showInTree":true,"treeOrder":74,"backlinks":["99-settings/1-topics/📖-700-컴퓨터-과학.html"],"type":"markdown","data":null},"99-settings/1-topics/📚-801-다-맡게팅.html":{"createdTime":1757776860491,"modifiedTime":1757776887614,"sourceSize":128,"sourcePath":"99-Settings/1-Topics/📚 801 다 맡게팅.md","exportPath":"99-settings/1-topics/📚-801-다-맡게팅.html","showInTree":true,"treeOrder":75,"backlinks":["400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown","data":null},"99-settings/2-index/🏷️-데일리-노트.html":{"createdTime":1757340450504,"modifiedTime":1757340450504,"sourceSize":57,"sourcePath":"99-Settings/2-Index/🏷️ 데일리 노트.md","exportPath":"99-settings/2-index/🏷️-데일리-노트.html","showInTree":true,"treeOrder":77,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-도구.html":{"createdTime":1757340450481,"modifiedTime":1757340450482,"sourceSize":86,"sourcePath":"99-Settings/2-Index/🏷️ 도구.md","exportPath":"99-settings/2-index/🏷️-도구.html","showInTree":true,"treeOrder":78,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-레퍼런스.html":{"createdTime":1757341259060,"modifiedTime":1757341270974,"sourceSize":68,"sourcePath":"99-Settings/2-Index/🏷️ 레퍼런스.md","exportPath":"99-settings/2-index/🏷️-레퍼런스.html","showInTree":true,"treeOrder":79,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-리뷰.html":{"createdTime":1757340450492,"modifiedTime":1757340450492,"sourceSize":67,"sourcePath":"99-Settings/2-Index/🏷️ 리뷰.md","exportPath":"99-settings/2-index/🏷️-리뷰.html","showInTree":true,"treeOrder":80,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-실습.html":{"createdTime":1757341258208,"modifiedTime":1757341270974,"sourceSize":62,"sourcePath":"99-Settings/2-Index/🏷️ 실습.md","exportPath":"99-settings/2-index/🏷️-실습.html","showInTree":true,"treeOrder":81,"backlinks":["600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html"],"type":"markdown","data":null},"99-settings/2-index/🏷️-에러-해결.html":{"createdTime":1757340450510,"modifiedTime":1757340450510,"sourceSize":57,"sourcePath":"99-Settings/2-Index/🏷️ 에러 해결.md","exportPath":"99-settings/2-index/🏷️-에러-해결.html","showInTree":true,"treeOrder":82,"backlinks":["400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown","data":null},"99-settings/2-index/🏷️-이론.html":{"createdTime":1757341257135,"modifiedTime":1757341270974,"sourceSize":65,"sourcePath":"99-Settings/2-Index/🏷️ 이론.md","exportPath":"99-settings/2-index/🏷️-이론.html","showInTree":true,"treeOrder":83,"backlinks":["600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘-&-코딩테스트/theory/최소신장트리.html"],"type":"markdown","data":null},"99-settings/2-index/🏷️-자격증.html":{"createdTime":1757340450474,"modifiedTime":1757340450475,"sourceSize":83,"sourcePath":"99-Settings/2-Index/🏷️ 자격증.md","exportPath":"99-settings/2-index/🏷️-자격증.html","showInTree":true,"treeOrder":84,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-최적화.html":{"createdTime":1757340450499,"modifiedTime":1757340450499,"sourceSize":92,"sourcePath":"99-Settings/2-Index/🏷️ 최적화.md","exportPath":"99-settings/2-index/🏷️-최적화.html","showInTree":true,"treeOrder":85,"backlinks":["400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html"],"type":"markdown","data":null},"99-settings/2-index/🏷️-취업.html":{"createdTime":1757340450479,"modifiedTime":1757340450479,"sourceSize":99,"sourcePath":"99-Settings/2-Index/🏷️ 취업.md","exportPath":"99-settings/2-index/🏷️-취업.html","showInTree":true,"treeOrder":86,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-프로젝트.html":{"createdTime":1757340450489,"modifiedTime":1757340450489,"sourceSize":104,"sourcePath":"99-Settings/2-Index/🏷️ 프로젝트.md","exportPath":"99-settings/2-index/🏷️-프로젝트.html","showInTree":true,"treeOrder":87,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-학교.html":{"createdTime":1757340977347,"modifiedTime":1757340984650,"sourceSize":70,"sourcePath":"99-Settings/2-Index/🏷️ 학교.md","exportPath":"99-settings/2-index/🏷️-학교.html","showInTree":true,"treeOrder":88,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-학습.html":{"createdTime":1757340450496,"modifiedTime":1757340450496,"sourceSize":74,"sourcePath":"99-Settings/2-Index/🏷️ 학습.md","exportPath":"99-settings/2-index/🏷️-학습.html","showInTree":true,"treeOrder":89,"backlinks":["600-알고리즘-&-코딩테스트/theory/bfs,dfs.html"],"type":"markdown","data":null},"99-settings/2-index/🏷️-회사.html":{"createdTime":1757340450507,"modifiedTime":1757340450507,"sourceSize":49,"sourcePath":"99-Settings/2-Index/🏷️ 회사.md","exportPath":"99-settings/2-index/🏷️-회사.html","showInTree":true,"treeOrder":90,"backlinks":[],"type":"markdown","data":null},"99-settings/2-index/🏷️-todo.html":{"createdTime":1757340450484,"modifiedTime":1757340450484,"sourceSize":64,"sourcePath":"99-Settings/2-Index/🏷️ TODO.md","exportPath":"99-settings/2-index/🏷️-todo.html","showInTree":true,"treeOrder":91,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html":{"createdTime":1753273899693,"modifiedTime":1753273916632,"sourceSize":7948,"sourcePath":"100-데이터분석 & AI/캐글/주식,코인 시계열 데이터 분석에서 Ridge, XGBoost 추천 옵션 및 전략.md","exportPath":"100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","showInTree":true,"treeOrder":94,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/캐글/캐글준비.html":{"createdTime":1748714935709,"modifiedTime":1748714940252,"sourceSize":1694,"sourcePath":"100-데이터분석 & AI/캐글/캐글준비.md","exportPath":"100-데이터분석-&-ai/캐글/캐글준비.html","showInTree":true,"treeOrder":95,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/캐글/eda.html":{"createdTime":1752985440883,"modifiedTime":1752992747846,"sourceSize":16430,"sourcePath":"100-데이터분석 & AI/캐글/eda.md","exportPath":"100-데이터분석-&-ai/캐글/eda.html","showInTree":true,"treeOrder":96,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/캐글/result.html":{"createdTime":1753273718111,"modifiedTime":1753275227113,"sourceSize":561,"sourcePath":"100-데이터분석 & AI/캐글/result.md","exportPath":"100-데이터분석-&-ai/캐글/result.html","showInTree":true,"treeOrder":97,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/캐글/untitled.html":{"createdTime":1753184181063,"modifiedTime":1753184182914,"sourceSize":1184,"sourcePath":"100-데이터분석 & AI/캐글/Untitled.md","exportPath":"100-데이터분석-&-ai/캐글/untitled.html","showInTree":true,"treeOrder":98,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/캐글/untitled-1.html":{"createdTime":1753271943032,"modifiedTime":1753271971050,"sourceSize":5809,"sourcePath":"100-데이터분석 & AI/캐글/Untitled 1.md","exportPath":"100-데이터분석-&-ai/캐글/untitled-1.html","showInTree":true,"treeOrder":99,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.png":{"createdTime":1743987855818,"modifiedTime":1743987855875,"sourceSize":369579,"sourcePath":"100-데이터분석 & AI/assets/데이터모델링-20250407100415854.png","exportPath":"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html":{"createdTime":1743987855818,"modifiedTime":1743987855875,"sourceSize":369579,"sourcePath":"100-데이터분석 & AI/assets/데이터모델링-20250407100415854.png","exportPath":"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html","showInTree":true,"treeOrder":101,"backlinks":["100-데이터분석-&-ai/데이터모델링.html"],"type":"attachment","data":null},"100-데이터분석-&-ai/개발-방법론.html":{"createdTime":1744160000983,"modifiedTime":1744160057842,"sourceSize":38,"sourcePath":"100-데이터분석 & AI/개발 방법론.md","exportPath":"100-데이터분석-&-ai/개발-방법론.html","showInTree":true,"treeOrder":102,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/데이터모델링.html":{"createdTime":1743987541647,"modifiedTime":1744077058281,"sourceSize":869,"sourcePath":"100-데이터분석 & AI/데이터모델링.md","exportPath":"100-데이터분석-&-ai/데이터모델링.html","showInTree":true,"treeOrder":103,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/딥러닝.html":{"createdTime":1744160881954,"modifiedTime":1744169208874,"sourceSize":947,"sourcePath":"100-데이터분석 & AI/딥러닝.md","exportPath":"100-데이터분석-&-ai/딥러닝.html","showInTree":true,"treeOrder":104,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/모델성능최적화.html":{"createdTime":1744077075662,"modifiedTime":1744096607513,"sourceSize":455,"sourcePath":"100-데이터분석 & AI/모델성능최적화.md","exportPath":"100-데이터분석-&-ai/모델성능최적화.html","showInTree":true,"treeOrder":105,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/분석.html":{"createdTime":1751544157871,"modifiedTime":1751545929144,"sourceSize":1249,"sourcePath":"100-데이터분석 & AI/분석.md","exportPath":"100-데이터분석-&-ai/분석.html","showInTree":true,"treeOrder":106,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/신경망.html":{"createdTime":1729242555432,"modifiedTime":1729242572598,"sourceSize":65,"sourcePath":"100-데이터분석 & AI/신경망.md","exportPath":"100-데이터분석-&-ai/신경망.html","showInTree":true,"treeOrder":107,"backlinks":["100-데이터분석-&-ai/인공지능(ai).html"],"type":"markdown","data":null},"100-데이터분석-&-ai/연관성-분석.html":{"createdTime":1743786411366,"modifiedTime":1743786646588,"sourceSize":427,"sourcePath":"100-데이터분석 & AI/연관성 분석.md","exportPath":"100-데이터분석-&-ai/연관성-분석.html","showInTree":true,"treeOrder":108,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/의사결정나무.html":{"createdTime":1743783600547,"modifiedTime":1743785059601,"sourceSize":996,"sourcePath":"100-데이터분석 & AI/의사결정나무.md","exportPath":"100-데이터분석-&-ai/의사결정나무.html","showInTree":true,"treeOrder":109,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/인공신경망(ann).html":{"createdTime":1743785553403,"modifiedTime":1743786847890,"sourceSize":1266,"sourcePath":"100-데이터분석 & AI/인공신경망(ANN).md","exportPath":"100-데이터분석-&-ai/인공신경망(ann).html","showInTree":true,"treeOrder":110,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/인공지능(ai).html":{"createdTime":1729236545469,"modifiedTime":1729318532998,"sourceSize":1258,"sourcePath":"100-데이터분석 & AI/인공지능(AI).md","exportPath":"100-데이터분석-&-ai/인공지능(ai).html","showInTree":true,"treeOrder":111,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/자료-형태에-따른분석.html":{"createdTime":1743787283186,"modifiedTime":1743787738303,"sourceSize":319,"sourcePath":"100-데이터분석 & AI/자료 형태에 따른분석.md","exportPath":"100-데이터분석-&-ai/자료-형태에-따른분석.html","showInTree":true,"treeOrder":112,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/카이제곱.html":{"createdTime":1743784222077,"modifiedTime":1743784285875,"sourceSize":62,"sourcePath":"100-데이터분석 & AI/카이제곱.md","exportPath":"100-데이터분석-&-ai/카이제곱.html","showInTree":true,"treeOrder":113,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/평가.html":{"createdTime":1744181515843,"modifiedTime":1744181542191,"sourceSize":35,"sourcePath":"100-데이터분석 & AI/평가.md","exportPath":"100-데이터분석-&-ai/평가.html","showInTree":true,"treeOrder":114,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/ai-기본-코드.html":{"createdTime":1744174496956,"modifiedTime":1744174496956,"sourceSize":0,"sourcePath":"100-데이터분석 & AI/ai 기본 코드.md","exportPath":"100-데이터분석-&-ai/ai-기본-코드.html","showInTree":true,"treeOrder":115,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/callback-,함수-체이닝-차이.html":{"createdTime":1748170092828,"modifiedTime":1748170122636,"sourceSize":4877,"sourcePath":"100-데이터분석 & AI/callback ,함수 체이닝 차이.md","exportPath":"100-데이터분석-&-ai/callback-,함수-체이닝-차이.html","showInTree":true,"treeOrder":116,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html":{"createdTime":1749431917544,"modifiedTime":1749431920276,"sourceSize":35,"sourcePath":"100-데이터분석 & AI/LLM이 복잡해질수록 정답률이 0에 가까워진다는 논문 설명.md","exportPath":"100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","showInTree":true,"treeOrder":117,"backlinks":[],"type":"markdown","data":null},"100-데이터분석-&-ai/p-value.html":{"createdTime":1743783888343,"modifiedTime":1743784080848,"sourceSize":280,"sourcePath":"100-데이터분석 & AI/p-value.md","exportPath":"100-데이터분석-&-ai/p-value.html","showInTree":true,"treeOrder":118,"backlinks":["100-데이터분석-&-ai/의사결정나무.html"],"type":"markdown","data":null},"100-데이터분석-&-ai/runnable.html":{"createdTime":1748170187069,"modifiedTime":1748170201713,"sourceSize":4565,"sourcePath":"100-데이터분석 & AI/runnable.md","exportPath":"100-데이터분석-&-ai/runnable.html","showInTree":true,"treeOrder":119,"backlinks":[],"type":"markdown","data":null},"200-웹개발/공식문서/react_공식문서를-나의-말로...html":{"createdTime":1733229261242,"modifiedTime":1733640163177,"sourceSize":1128,"sourcePath":"200-웹개발/공식문서/react_공식문서를 나의 말로...md","exportPath":"200-웹개발/공식문서/react_공식문서를-나의-말로...html","showInTree":true,"treeOrder":122,"backlinks":[],"type":"markdown","data":null},"200-웹개발/공식문서/vite.html":{"createdTime":1735472884616,"modifiedTime":1735473186054,"sourceSize":95,"sourcePath":"200-웹개발/공식문서/vite.md","exportPath":"200-웹개발/공식문서/vite.html","showInTree":true,"treeOrder":123,"backlinks":[],"type":"markdown","data":null},"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png":{"createdTime":1697627582146,"modifiedTime":1697627582146,"sourceSize":44919,"sourcePath":"200-웹개발/assets/스크린샷 2023-10-18 오후 8.12.58.png","exportPath":"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html":{"createdTime":1697627582146,"modifiedTime":1697627582146,"sourceSize":44919,"sourcePath":"200-웹개발/assets/스크린샷 2023-10-18 오후 8.12.58.png","exportPath":"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html","showInTree":true,"treeOrder":125,"backlinks":["200-웹개발/js)-math.html"],"type":"attachment","data":null},"200-웹개발/assets/pasted-image-20231114151038.png":{"createdTime":1699942238650,"modifiedTime":1699942238650,"sourceSize":246475,"sourcePath":"200-웹개발/assets/Pasted image 20231114151038.png","exportPath":"200-웹개발/assets/pasted-image-20231114151038.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/pasted-image-20231114151038.html":{"createdTime":1699942238650,"modifiedTime":1699942238650,"sourceSize":246475,"sourcePath":"200-웹개발/assets/Pasted image 20231114151038.png","exportPath":"200-웹개발/assets/pasted-image-20231114151038.html","showInTree":true,"treeOrder":126,"backlinks":["200-웹개발/react-query.html"],"type":"attachment","data":null},"200-웹개발/assets/pasted-image-20240628175728.png":{"createdTime":1719830763414,"modifiedTime":1719830763416,"sourceSize":250658,"sourcePath":"200-웹개발/assets/Pasted image 20240628175728.png","exportPath":"200-웹개발/assets/pasted-image-20240628175728.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/pasted-image-20240628175728.html":{"createdTime":1719830763414,"modifiedTime":1719830763416,"sourceSize":250658,"sourcePath":"200-웹개발/assets/Pasted image 20240628175728.png","exportPath":"200-웹개발/assets/pasted-image-20240628175728.html","showInTree":true,"treeOrder":127,"backlinks":["200-웹개발/vue/vue3_composition.html"],"type":"attachment","data":null},"200-웹개발/assets/pasted-image-20240701112747.png":{"createdTime":1719830763416,"modifiedTime":1719830763417,"sourceSize":152978,"sourcePath":"200-웹개발/assets/Pasted image 20240701112747.png","exportPath":"200-웹개발/assets/pasted-image-20240701112747.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/pasted-image-20240701112747.html":{"createdTime":1719830763416,"modifiedTime":1719830763417,"sourceSize":152978,"sourcePath":"200-웹개발/assets/Pasted image 20240701112747.png","exportPath":"200-웹개발/assets/pasted-image-20240701112747.html","showInTree":true,"treeOrder":128,"backlinks":["200-웹개발/웹팩.html"],"type":"attachment","data":null},"200-웹개발/assets/pasted-image-20240701114022.png":{"createdTime":1719830763417,"modifiedTime":1719830763418,"sourceSize":228394,"sourcePath":"200-웹개발/assets/Pasted image 20240701114022.png","exportPath":"200-웹개발/assets/pasted-image-20240701114022.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/pasted-image-20240701114022.html":{"createdTime":1719830763417,"modifiedTime":1719830763418,"sourceSize":228394,"sourcePath":"200-웹개발/assets/Pasted image 20240701114022.png","exportPath":"200-웹개발/assets/pasted-image-20240701114022.html","showInTree":true,"treeOrder":129,"backlinks":["200-웹개발/웹팩.html"],"type":"attachment","data":null},"200-웹개발/assets/pasted-image-20240701114052.png":{"createdTime":1719830763419,"modifiedTime":1719830763420,"sourceSize":201623,"sourcePath":"200-웹개발/assets/Pasted image 20240701114052.png","exportPath":"200-웹개발/assets/pasted-image-20240701114052.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/pasted-image-20240701114052.html":{"createdTime":1719830763419,"modifiedTime":1719830763420,"sourceSize":201623,"sourcePath":"200-웹개발/assets/Pasted image 20240701114052.png","exportPath":"200-웹개발/assets/pasted-image-20240701114052.html","showInTree":true,"treeOrder":130,"backlinks":["200-웹개발/웹팩.html"],"type":"attachment","data":null},"200-웹개발/assets/pasted-image-20240702095610.png":{"createdTime":1720081060540,"modifiedTime":1720081060540,"sourceSize":36332,"sourcePath":"200-웹개발/assets/Pasted image 20240702095610.png","exportPath":"200-웹개발/assets/pasted-image-20240702095610.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/pasted-image-20240702095610.html":{"createdTime":1720081060540,"modifiedTime":1720081060540,"sourceSize":36332,"sourcePath":"200-웹개발/assets/Pasted image 20240702095610.png","exportPath":"200-웹개발/assets/pasted-image-20240702095610.html","showInTree":true,"treeOrder":131,"backlinks":["200-웹개발/vue/vue의-상태관리툴.html"],"type":"attachment","data":null},"200-웹개발/assets/vue_정리-20240627140705844.png":{"createdTime":1719464825786,"modifiedTime":1719464825786,"sourceSize":32654,"sourcePath":"200-웹개발/assets/vue_정리-20240627140705844.png","exportPath":"200-웹개발/assets/vue_정리-20240627140705844.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/vue_정리-20240627140705844.html":{"createdTime":1719464825786,"modifiedTime":1719464825786,"sourceSize":32654,"sourcePath":"200-웹개발/assets/vue_정리-20240627140705844.png","exportPath":"200-웹개발/assets/vue_정리-20240627140705844.html","showInTree":true,"treeOrder":132,"backlinks":["200-웹개발/vue/vue2_기본정리.html"],"type":"attachment","data":null},"200-웹개발/assets/vue-20240627101400036.png":{"createdTime":1719450839994,"modifiedTime":1719450839995,"sourceSize":129929,"sourcePath":"200-웹개발/assets/vue-20240627101400036.png","exportPath":"200-웹개발/assets/vue-20240627101400036.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/assets/vue-20240627101400036.html":{"createdTime":1719450839994,"modifiedTime":1719450839995,"sourceSize":129929,"sourcePath":"200-웹개발/assets/vue-20240627101400036.png","exportPath":"200-웹개발/assets/vue-20240627101400036.html","showInTree":true,"treeOrder":133,"backlinks":["200-웹개발/vue/vue2_기본정리.html"],"type":"attachment","data":null},"200-웹개발/vue/assets/pasted-image-20240702135541.png":{"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":1864,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240702135541.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240702135541.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/vue/assets/pasted-image-20240702135541.html":{"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":1864,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240702135541.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240702135541.html","showInTree":true,"treeOrder":136,"backlinks":["200-웹개발/vue/vue_ref,reactive.html"],"type":"attachment","data":null},"200-웹개발/vue/assets/pasted-image-20240702135910.png":{"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":3348,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240702135910.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240702135910.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/vue/assets/pasted-image-20240702135910.html":{"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":3348,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240702135910.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240702135910.html","showInTree":true,"treeOrder":137,"backlinks":["200-웹개발/vue/vue_ref,reactive.html"],"type":"attachment","data":null},"200-웹개발/vue/assets/pasted-image-20240821112059.png":{"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":25935,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240821112059.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240821112059.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/vue/assets/pasted-image-20240821112059.html":{"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":25935,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240821112059.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240821112059.html","showInTree":true,"treeOrder":138,"backlinks":["200-웹개발/vue/햇갈렷던것..-반응성관련.html"],"type":"attachment","data":null},"200-웹개발/vue/assets/pasted-image-20240821112757.png":{"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":29615,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240821112757.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240821112757.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"200-웹개발/vue/assets/pasted-image-20240821112757.html":{"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":29615,"sourcePath":"200-웹개발/vue/assets/Pasted image 20240821112757.png","exportPath":"200-웹개발/vue/assets/pasted-image-20240821112757.html","showInTree":true,"treeOrder":139,"backlinks":["200-웹개발/vue/햇갈렷던것..-반응성관련.html"],"type":"attachment","data":null},"200-웹개발/vue/무제-파일.html":{"createdTime":1721825613063,"modifiedTime":1721825613063,"sourceSize":160,"sourcePath":"200-웹개발/vue/무제 파일.md","exportPath":"200-웹개발/vue/무제-파일.html","showInTree":true,"treeOrder":140,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/할일.html":{"createdTime":1721825613063,"modifiedTime":1721825613063,"sourceSize":51,"sourcePath":"200-웹개발/vue/할일.md","exportPath":"200-웹개발/vue/할일.html","showInTree":true,"treeOrder":141,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/햇갈렷던것..-반응성관련.html":{"createdTime":1724484478807,"modifiedTime":1724484478807,"sourceSize":1131,"sourcePath":"200-웹개발/vue/햇갈렷던것.. 반응성관련.md","exportPath":"200-웹개발/vue/햇갈렷던것..-반응성관련.html","showInTree":true,"treeOrder":142,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue-문서들.html":{"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":480,"sourcePath":"200-웹개발/vue/vue 문서들.md","exportPath":"200-웹개발/vue/vue-문서들.html","showInTree":true,"treeOrder":143,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue_기록.html":{"createdTime":1720705758578,"modifiedTime":1720705758578,"sourceSize":1712,"sourcePath":"200-웹개발/vue/vue_기록.md","exportPath":"200-웹개발/vue/vue_기록.html","showInTree":true,"treeOrder":144,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue_재사용성.html":{"createdTime":1720081060542,"modifiedTime":1720081060543,"sourceSize":54,"sourcePath":"200-웹개발/vue/vue_재사용성.md","exportPath":"200-웹개발/vue/vue_재사용성.html","showInTree":true,"treeOrder":145,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue_ref,reactive.html":{"createdTime":1720081060542,"modifiedTime":1720081060542,"sourceSize":2135,"sourcePath":"200-웹개발/vue/vue_ref,reactive.md","exportPath":"200-웹개발/vue/vue_ref,reactive.html","showInTree":true,"treeOrder":146,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue_router.html":{"createdTime":1720081060542,"modifiedTime":1720081060542,"sourceSize":0,"sourcePath":"200-웹개발/vue/vue_router.md","exportPath":"200-웹개발/vue/vue_router.html","showInTree":true,"treeOrder":147,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue_sfc-기본구조.html":{"createdTime":1720081060542,"modifiedTime":1720081060542,"sourceSize":756,"sourcePath":"200-웹개발/vue/vue_SFC 기본구조.md","exportPath":"200-웹개발/vue/vue_sfc-기본구조.html","showInTree":true,"treeOrder":148,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue_test_jest.html":{"createdTime":1721825613063,"modifiedTime":1721825613063,"sourceSize":14,"sourcePath":"200-웹개발/vue/vue_test_jest.md","exportPath":"200-웹개발/vue/vue_test_jest.html","showInTree":true,"treeOrder":149,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue2_기본정리.html":{"createdTime":1720081060541,"modifiedTime":1720081060542,"sourceSize":7054,"sourcePath":"200-웹개발/vue/vue2_기본정리.md","exportPath":"200-웹개발/vue/vue2_기본정리.html","showInTree":true,"treeOrder":150,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue3_composition.html":{"createdTime":1720705758577,"modifiedTime":1720705758578,"sourceSize":4709,"sourcePath":"200-웹개발/vue/vue3_Composition.md","exportPath":"200-웹개발/vue/vue3_composition.html","showInTree":true,"treeOrder":151,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vue/vue의-상태관리툴.html":{"createdTime":1720081060543,"modifiedTime":1720081060543,"sourceSize":4400,"sourcePath":"200-웹개발/vue/vue의 상태관리툴.md","exportPath":"200-웹개발/vue/vue의-상태관리툴.html","showInTree":true,"treeOrder":152,"backlinks":[],"type":"markdown","data":null},"200-웹개발/3d.html":{"createdTime":1718100730916,"modifiedTime":1718100733823,"sourceSize":49,"sourcePath":"200-웹개발/3d.md","exportPath":"200-웹개발/3d.html","showInTree":true,"treeOrder":153,"backlinks":[],"type":"markdown","data":null},"200-웹개발/디자인-라이브러리.html":{"createdTime":1710306473406,"modifiedTime":1710306951146,"sourceSize":157,"sourcePath":"200-웹개발/디자인 라이브러리.md","exportPath":"200-웹개발/디자인-라이브러리.html","showInTree":true,"treeOrder":154,"backlinks":[],"type":"markdown","data":null},"200-웹개발/상태처리-리액트&뷰.html":{"createdTime":1701773987475,"modifiedTime":1701774024711,"sourceSize":222,"sourcePath":"200-웹개발/상태처리 리액트&뷰.md","exportPath":"200-웹개발/상태처리-리액트&뷰.html","showInTree":true,"treeOrder":155,"backlinks":[],"type":"markdown","data":null},"200-웹개발/웹-렌더링-형태.html":{"createdTime":1740467728870,"modifiedTime":1740470130663,"sourceSize":6009,"sourcePath":"200-웹개발/웹 렌더링 형태.md","exportPath":"200-웹개발/웹-렌더링-형태.html","showInTree":true,"treeOrder":156,"backlinks":[],"type":"markdown","data":null},"200-웹개발/웹팩.html":{"createdTime":1719830763420,"modifiedTime":1719830763420,"sourceSize":919,"sourcePath":"200-웹개발/웹팩.md","exportPath":"200-웹개발/웹팩.html","showInTree":true,"treeOrder":157,"backlinks":[],"type":"markdown","data":null},"200-웹개발/좋은말.html":{"createdTime":1701841144273,"modifiedTime":1701841161762,"sourceSize":166,"sourcePath":"200-웹개발/좋은말.md","exportPath":"200-웹개발/좋은말.html","showInTree":true,"treeOrder":158,"backlinks":[],"type":"markdown","data":null},"200-웹개발/css.html":{"createdTime":1705828128488,"modifiedTime":1705828839393,"sourceSize":148,"sourcePath":"200-웹개발/CSS.md","exportPath":"200-웹개발/css.html","showInTree":true,"treeOrder":159,"backlinks":[],"type":"markdown","data":null},"200-웹개발/defer.html":{"createdTime":1710132138351,"modifiedTime":1710132142654,"sourceSize":53,"sourcePath":"200-웹개발/defer.md","exportPath":"200-웹개발/defer.html","showInTree":true,"treeOrder":160,"backlinks":[],"type":"markdown","data":null},"200-웹개발/electron-vs-tauri.html":{"createdTime":1709529248852,"modifiedTime":1709529278487,"sourceSize":92,"sourcePath":"200-웹개발/electron vs tauri.md","exportPath":"200-웹개발/electron-vs-tauri.html","showInTree":true,"treeOrder":161,"backlinks":[],"type":"markdown","data":null},"200-웹개발/headless-컴포넌트.html":{"createdTime":1710131681913,"modifiedTime":1710131681913,"sourceSize":0,"sourcePath":"200-웹개발/headless 컴포넌트.md","exportPath":"200-웹개발/headless-컴포넌트.html","showInTree":true,"treeOrder":162,"backlinks":[],"type":"markdown","data":null},"200-웹개발/hook-렌더링-최적화.html":{"createdTime":1742029181927,"modifiedTime":1742029188943,"sourceSize":190,"sourcePath":"200-웹개발/hook 렌더링 최적화.md","exportPath":"200-웹개발/hook-렌더링-최적화.html","showInTree":true,"treeOrder":163,"backlinks":[],"type":"markdown","data":null},"200-웹개발/js_-proxy&defineproperty.html":{"createdTime":1720081060541,"modifiedTime":1720081060541,"sourceSize":1255,"sourcePath":"200-웹개발/js_ proxy&defineproperty.md","exportPath":"200-웹개발/js_-proxy&defineproperty.html","showInTree":true,"treeOrder":164,"backlinks":[],"type":"markdown","data":null},"200-웹개발/js)-math.html":{"createdTime":1697635476396,"modifiedTime":1697635476396,"sourceSize":1518,"sourcePath":"200-웹개발/js) math.md","exportPath":"200-웹개발/js)-math.html","showInTree":true,"treeOrder":165,"backlinks":[],"type":"markdown","data":null},"200-웹개발/next.js.html":{"createdTime":1742216506298,"modifiedTime":1742216510058,"sourceSize":56,"sourcePath":"200-웹개발/next.js.md","exportPath":"200-웹개발/next.js.html","showInTree":true,"treeOrder":166,"backlinks":[],"type":"markdown","data":null},"200-웹개발/nodejs-nginx-vite-tomcat.html":{"createdTime":1748333046206,"modifiedTime":1754970285825,"sourceSize":5357,"sourcePath":"200-웹개발/nodejs nginx vite tomcat.md","exportPath":"200-웹개발/nodejs-nginx-vite-tomcat.html","showInTree":true,"treeOrder":167,"backlinks":[],"type":"markdown","data":null},"200-웹개발/react-폴더-구조.html":{"createdTime":1710574819020,"modifiedTime":1710574827415,"sourceSize":43,"sourcePath":"200-웹개발/react 폴더 구조.md","exportPath":"200-웹개발/react-폴더-구조.html","showInTree":true,"treeOrder":168,"backlinks":[],"type":"markdown","data":null},"200-웹개발/react_ref.html":{"createdTime":1720081060540,"modifiedTime":1720081060540,"sourceSize":190,"sourcePath":"200-웹개발/REACT_REF.md","exportPath":"200-웹개발/react_ref.html","showInTree":true,"treeOrder":169,"backlinks":[],"type":"markdown","data":null},"200-웹개발/react-query.html":{"createdTime":1699942239211,"modifiedTime":1699942239211,"sourceSize":102,"sourcePath":"200-웹개발/react-query.md","exportPath":"200-웹개발/react-query.html","showInTree":true,"treeOrder":170,"backlinks":[],"type":"markdown","data":null},"200-웹개발/redux-toolkit.html":{"createdTime":1748780352817,"modifiedTime":1748781065434,"sourceSize":1011,"sourcePath":"200-웹개발/redux toolkit.md","exportPath":"200-웹개발/redux-toolkit.html","showInTree":true,"treeOrder":171,"backlinks":[],"type":"markdown","data":null},"200-웹개발/suspense.html":{"createdTime":1699942236959,"modifiedTime":1738529702668,"sourceSize":289,"sourcePath":"200-웹개발/Suspense.md","exportPath":"200-웹개발/suspense.html","showInTree":true,"treeOrder":172,"backlinks":[],"type":"markdown","data":null},"200-웹개발/vanilla-js.html":{"createdTime":1700993439258,"modifiedTime":1700993471574,"sourceSize":47,"sourcePath":"200-웹개발/vanilla js.md","exportPath":"200-웹개발/vanilla-js.html","showInTree":true,"treeOrder":173,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/assets/스프링-db-접근-1748788030972.png":{"createdTime":1748788030979,"modifiedTime":1748788030980,"sourceSize":78325,"sourcePath":"300-백엔드개발/assets/스프링 DB 접근-1748788030972.png","exportPath":"300-백엔드개발/assets/스프링-db-접근-1748788030972.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/스프링-db-접근-1748788030972.html":{"createdTime":1748788030979,"modifiedTime":1748788030980,"sourceSize":78325,"sourcePath":"300-백엔드개발/assets/스프링 DB 접근-1748788030972.png","exportPath":"300-백엔드개발/assets/스프링-db-접근-1748788030972.html","showInTree":true,"treeOrder":176,"backlinks":["300-백엔드개발/스프링-db-접근.html"],"type":"attachment","data":null},"300-백엔드개발/assets/아키텍처-1747921913860.png":{"createdTime":1747921913870,"modifiedTime":1747921913870,"sourceSize":44149,"sourcePath":"300-백엔드개발/assets/아키텍처-1747921913860.png","exportPath":"300-백엔드개발/assets/아키텍처-1747921913860.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/아키텍처-1747921913860.html":{"createdTime":1747921913870,"modifiedTime":1747921913870,"sourceSize":44149,"sourcePath":"300-백엔드개발/assets/아키텍처-1747921913860.png","exportPath":"300-백엔드개발/assets/아키텍처-1747921913860.html","showInTree":true,"treeOrder":177,"backlinks":["300-백엔드개발/스프링-프레임워크-기본(spring).html"],"type":"attachment","data":null},"300-백엔드개발/assets/애자일-1749384475904.png":{"createdTime":1749384475912,"modifiedTime":1749384475913,"sourceSize":518826,"sourcePath":"300-백엔드개발/assets/애자일-1749384475904.png","exportPath":"300-백엔드개발/assets/애자일-1749384475904.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/애자일-1749384475904.html":{"createdTime":1749384475912,"modifiedTime":1749384475913,"sourceSize":518826,"sourcePath":"300-백엔드개발/assets/애자일-1749384475904.png","exportPath":"300-백엔드개발/assets/애자일-1749384475904.html","showInTree":true,"treeOrder":178,"backlinks":["300-백엔드개발/애자일.html"],"type":"attachment","data":null},"300-백엔드개발/assets/aggregate-1749754173915.png":{"createdTime":1749754173921,"modifiedTime":1749754173921,"sourceSize":111137,"sourcePath":"300-백엔드개발/assets/Aggregate-1749754173915.png","exportPath":"300-백엔드개발/assets/aggregate-1749754173915.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/aggregate-1749754173915.html":{"createdTime":1749754173921,"modifiedTime":1749754173921,"sourceSize":111137,"sourcePath":"300-백엔드개발/assets/Aggregate-1749754173915.png","exportPath":"300-백엔드개발/assets/aggregate-1749754173915.html","showInTree":true,"treeOrder":179,"backlinks":["300-백엔드개발/aggregate.html"],"type":"attachment","data":null},"300-백엔드개발/assets/biz,dev,ops-1749383255427.png":{"createdTime":1749383255434,"modifiedTime":1749383255434,"sourceSize":288259,"sourcePath":"300-백엔드개발/assets/biz,dev,ops-1749383255427.png","exportPath":"300-백엔드개발/assets/biz,dev,ops-1749383255427.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/biz,dev,ops-1749383255427.html":{"createdTime":1749383255434,"modifiedTime":1749383255434,"sourceSize":288259,"sourcePath":"300-백엔드개발/assets/biz,dev,ops-1749383255427.png","exportPath":"300-백엔드개발/assets/biz,dev,ops-1749383255427.html","showInTree":true,"treeOrder":180,"backlinks":["400-인프라-&-아키텍처/biz,dev,ops.html"],"type":"attachment","data":null},"300-백엔드개발/assets/biz,dev,ops-1749384334755.png":{"createdTime":1749384334788,"modifiedTime":1749384334788,"sourceSize":182348,"sourcePath":"300-백엔드개발/assets/biz,dev,ops-1749384334755.png","exportPath":"300-백엔드개발/assets/biz,dev,ops-1749384334755.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/biz,dev,ops-1749384334755.html":{"createdTime":1749384334788,"modifiedTime":1749384334788,"sourceSize":182348,"sourcePath":"300-백엔드개발/assets/biz,dev,ops-1749384334755.png","exportPath":"300-백엔드개발/assets/biz,dev,ops-1749384334755.html","showInTree":true,"treeOrder":181,"backlinks":["400-인프라-&-아키텍처/biz,dev,ops.html"],"type":"attachment","data":null},"300-백엔드개발/assets/db-영속성과-저장-1751787526152.png":{"createdTime":1751787526158,"modifiedTime":1751787526158,"sourceSize":203151,"sourcePath":"300-백엔드개발/assets/db 영속성과 저장-1751787526152.png","exportPath":"300-백엔드개발/assets/db-영속성과-저장-1751787526152.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/db-영속성과-저장-1751787526152.html":{"createdTime":1751787526158,"modifiedTime":1751787526158,"sourceSize":203151,"sourcePath":"300-백엔드개발/assets/db 영속성과 저장-1751787526152.png","exportPath":"300-백엔드개발/assets/db-영속성과-저장-1751787526152.html","showInTree":true,"treeOrder":182,"backlinks":["300-백엔드개발/db-영속성과-저장.html"],"type":"attachment","data":null},"300-백엔드개발/assets/docker-1751777737123.png":{"createdTime":1751777737128,"modifiedTime":1751777737128,"sourceSize":170335,"sourcePath":"300-백엔드개발/assets/docker-1751777737123.png","exportPath":"300-백엔드개발/assets/docker-1751777737123.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/docker-1751777737123.html":{"createdTime":1751777737128,"modifiedTime":1751777737128,"sourceSize":170335,"sourcePath":"300-백엔드개발/assets/docker-1751777737123.png","exportPath":"300-백엔드개발/assets/docker-1751777737123.html","showInTree":true,"treeOrder":183,"backlinks":["300-백엔드개발/docker.html"],"type":"attachment","data":null},"300-백엔드개발/assets/k8s-1751779119042.png":{"createdTime":1751779119049,"modifiedTime":1751779119050,"sourceSize":151463,"sourcePath":"300-백엔드개발/assets/k8s-1751779119042.png","exportPath":"300-백엔드개발/assets/k8s-1751779119042.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/k8s-1751779119042.html":{"createdTime":1751779119049,"modifiedTime":1751779119050,"sourceSize":151463,"sourcePath":"300-백엔드개발/assets/k8s-1751779119042.png","exportPath":"300-백엔드개발/assets/k8s-1751779119042.html","showInTree":true,"treeOrder":184,"backlinks":["400-인프라-&-아키텍처/k8s.html"],"type":"attachment","data":null},"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png":{"createdTime":1751777362960,"modifiedTime":1751777362961,"sourceSize":562304,"sourcePath":"300-백엔드개발/assets/k8s,kafka,msa와의 관계-1751777362953.png","exportPath":"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html":{"createdTime":1751777362960,"modifiedTime":1751777362961,"sourceSize":562304,"sourcePath":"300-백엔드개발/assets/k8s,kafka,msa와의 관계-1751777362953.png","exportPath":"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html","showInTree":true,"treeOrder":185,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa-1749455998102.png":{"createdTime":1749455998107,"modifiedTime":1749455998108,"sourceSize":126089,"sourcePath":"300-백엔드개발/assets/msa-1749455998102.png","exportPath":"300-백엔드개발/assets/msa-1749455998102.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa-1749455998102.html":{"createdTime":1749455998107,"modifiedTime":1749455998108,"sourceSize":126089,"sourcePath":"300-백엔드개발/assets/msa-1749455998102.png","exportPath":"300-백엔드개발/assets/msa-1749455998102.html","showInTree":true,"treeOrder":186,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa-1749544836042.png":{"createdTime":1749544836049,"modifiedTime":1749544836049,"sourceSize":159943,"sourcePath":"300-백엔드개발/assets/msa-1749544836042.png","exportPath":"300-백엔드개발/assets/msa-1749544836042.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa-1749544836042.html":{"createdTime":1749544836049,"modifiedTime":1749544836049,"sourceSize":159943,"sourcePath":"300-백엔드개발/assets/msa-1749544836042.png","exportPath":"300-백엔드개발/assets/msa-1749544836042.html","showInTree":true,"treeOrder":187,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa-1749752615566.png":{"createdTime":1749752615572,"modifiedTime":1749752615572,"sourceSize":124499,"sourcePath":"300-백엔드개발/assets/msa-1749752615566.png","exportPath":"300-백엔드개발/assets/msa-1749752615566.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa-1749752615566.html":{"createdTime":1749752615572,"modifiedTime":1749752615572,"sourceSize":124499,"sourcePath":"300-백엔드개발/assets/msa-1749752615566.png","exportPath":"300-백엔드개발/assets/msa-1749752615566.html","showInTree":true,"treeOrder":188,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa-1749752634954.png":{"createdTime":1749752634959,"modifiedTime":1749752634959,"sourceSize":172530,"sourcePath":"300-백엔드개발/assets/msa-1749752634954.png","exportPath":"300-백엔드개발/assets/msa-1749752634954.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa-1749752634954.html":{"createdTime":1749752634959,"modifiedTime":1749752634959,"sourceSize":172530,"sourcePath":"300-백엔드개발/assets/msa-1749752634954.png","exportPath":"300-백엔드개발/assets/msa-1749752634954.html","showInTree":true,"treeOrder":189,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa-1749752670525.png":{"createdTime":1749752670530,"modifiedTime":1749752670530,"sourceSize":171394,"sourcePath":"300-백엔드개발/assets/msa-1749752670525.png","exportPath":"300-백엔드개발/assets/msa-1749752670525.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa-1749752670525.html":{"createdTime":1749752670530,"modifiedTime":1749752670530,"sourceSize":171394,"sourcePath":"300-백엔드개발/assets/msa-1749752670525.png","exportPath":"300-백엔드개발/assets/msa-1749752670525.html","showInTree":true,"treeOrder":190,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa-1749753255535.png":{"createdTime":1749753255549,"modifiedTime":1749753255550,"sourceSize":71570,"sourcePath":"300-백엔드개발/assets/msa-1749753255535.png","exportPath":"300-백엔드개발/assets/msa-1749753255535.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa-1749753255535.html":{"createdTime":1749753255549,"modifiedTime":1749753255550,"sourceSize":71570,"sourcePath":"300-백엔드개발/assets/msa-1749753255535.png","exportPath":"300-백엔드개발/assets/msa-1749753255535.html","showInTree":true,"treeOrder":191,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa설계-1750876404713.png":{"createdTime":1750876404723,"modifiedTime":1750876404726,"sourceSize":326877,"sourcePath":"300-백엔드개발/assets/msa설계-1750876404713.png","exportPath":"300-백엔드개발/assets/msa설계-1750876404713.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa설계-1750876404713.html":{"createdTime":1750876404723,"modifiedTime":1750876404726,"sourceSize":326877,"sourcePath":"300-백엔드개발/assets/msa설계-1750876404713.png","exportPath":"300-백엔드개발/assets/msa설계-1750876404713.html","showInTree":true,"treeOrder":192,"backlinks":["400-인프라-&-아키텍처/msa설계.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa설계-1750876609108.png":{"createdTime":1750876609113,"modifiedTime":1750876609113,"sourceSize":272139,"sourcePath":"300-백엔드개발/assets/msa설계-1750876609108.png","exportPath":"300-백엔드개발/assets/msa설계-1750876609108.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa설계-1750876609108.html":{"createdTime":1750876609113,"modifiedTime":1750876609113,"sourceSize":272139,"sourcePath":"300-백엔드개발/assets/msa설계-1750876609108.png","exportPath":"300-백엔드개발/assets/msa설계-1750876609108.html","showInTree":true,"treeOrder":193,"backlinks":["400-인프라-&-아키텍처/msa설계.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa설계-1750880282832.png":{"createdTime":1750880282838,"modifiedTime":1750880282838,"sourceSize":188507,"sourcePath":"300-백엔드개발/assets/msa설계-1750880282832.png","exportPath":"300-백엔드개발/assets/msa설계-1750880282832.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa설계-1750880282832.html":{"createdTime":1750880282838,"modifiedTime":1750880282838,"sourceSize":188507,"sourcePath":"300-백엔드개발/assets/msa설계-1750880282832.png","exportPath":"300-백엔드개발/assets/msa설계-1750880282832.html","showInTree":true,"treeOrder":194,"backlinks":["400-인프라-&-아키텍처/msa설계.html"],"type":"attachment","data":null},"300-백엔드개발/assets/msa전체적인-구조-1751776935880.png":{"createdTime":1751776935885,"modifiedTime":1751776935885,"sourceSize":299903,"sourcePath":"300-백엔드개발/assets/msa전체적인 구조-1751776935880.png","exportPath":"300-백엔드개발/assets/msa전체적인-구조-1751776935880.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/msa전체적인-구조-1751776935880.html":{"createdTime":1751776935885,"modifiedTime":1751776935885,"sourceSize":299903,"sourcePath":"300-백엔드개발/assets/msa전체적인 구조-1751776935880.png","exportPath":"300-백엔드개발/assets/msa전체적인-구조-1751776935880.html","showInTree":true,"treeOrder":195,"backlinks":["400-인프라-&-아키텍처/msa전체적인-구조.html"],"type":"attachment","data":null},"300-백엔드개발/assets/spring-mvc-1748447479487.png":{"createdTime":1748447479492,"modifiedTime":1748447479493,"sourceSize":70223,"sourcePath":"300-백엔드개발/assets/Spring MVC-1748447479487.png","exportPath":"300-백엔드개발/assets/spring-mvc-1748447479487.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/spring-mvc-1748447479487.html":{"createdTime":1748447479492,"modifiedTime":1748447479493,"sourceSize":70223,"sourcePath":"300-백엔드개발/assets/Spring MVC-1748447479487.png","exportPath":"300-백엔드개발/assets/spring-mvc-1748447479487.html","showInTree":true,"treeOrder":196,"backlinks":["300-백엔드개발/spring-mvc.html"],"type":"attachment","data":null},"300-백엔드개발/assets/spring-mvc-1748452533042.png":{"createdTime":1748452533048,"modifiedTime":1748452533049,"sourceSize":80863,"sourcePath":"300-백엔드개발/assets/Spring MVC-1748452533042.png","exportPath":"300-백엔드개발/assets/spring-mvc-1748452533042.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/spring-mvc-1748452533042.html":{"createdTime":1748452533048,"modifiedTime":1748452533049,"sourceSize":80863,"sourcePath":"300-백엔드개발/assets/Spring MVC-1748452533042.png","exportPath":"300-백엔드개발/assets/spring-mvc-1748452533042.html","showInTree":true,"treeOrder":197,"backlinks":["300-백엔드개발/spring-mvc.html"],"type":"attachment","data":null},"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png":{"createdTime":1757788425218,"modifiedTime":1757788425218,"sourceSize":83137,"sourcePath":"300-백엔드개발/assets/webflux vs mvc-1757788425212.png","exportPath":"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html":{"createdTime":1757788425218,"modifiedTime":1757788425218,"sourceSize":83137,"sourcePath":"300-백엔드개발/assets/webflux vs mvc-1757788425212.png","exportPath":"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","showInTree":true,"treeOrder":198,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"attachment","data":null},"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png":{"createdTime":1757788537549,"modifiedTime":1757788537550,"sourceSize":84397,"sourcePath":"300-백엔드개발/assets/webflux vs mvc-1757788537542.png","exportPath":"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html":{"createdTime":1757788537549,"modifiedTime":1757788537550,"sourceSize":84397,"sourcePath":"300-백엔드개발/assets/webflux vs mvc-1757788537542.png","exportPath":"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html","showInTree":true,"treeOrder":199,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"attachment","data":null},"300-백엔드개발/스프링-부트-모니터링,-보안설정.html":{"createdTime":1748441656409,"modifiedTime":1757784026994,"sourceSize":1752,"sourcePath":"300-백엔드개발/스프링 부트 모니터링, 보안설정.md","exportPath":"300-백엔드개발/스프링-부트-모니터링,-보안설정.html","showInTree":true,"treeOrder":200,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/스프링-부트(spring-boot).html":{"createdTime":1748281521610,"modifiedTime":1748787396692,"sourceSize":6551,"sourcePath":"300-백엔드개발/스프링 부트(spring boot).md","exportPath":"300-백엔드개발/스프링-부트(spring-boot).html","showInTree":true,"treeOrder":201,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/스프링-프레임워크-기본(spring).html":{"createdTime":1747920348818,"modifiedTime":1748281517086,"sourceSize":8157,"sourcePath":"300-백엔드개발/스프링 프레임워크 기본(spring).md","exportPath":"300-백엔드개발/스프링-프레임워크-기본(spring).html","showInTree":true,"treeOrder":202,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/스프링-db-접근.html":{"createdTime":1748787475245,"modifiedTime":1751787412670,"sourceSize":3932,"sourcePath":"300-백엔드개발/스프링 DB 접근.md","exportPath":"300-백엔드개발/스프링-db-접근.html","showInTree":true,"treeOrder":203,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html":{"createdTime":1748441410050,"modifiedTime":1748443236223,"sourceSize":899,"sourcePath":"300-백엔드개발/스프링부트 내장 서버 역활과 특징.md","exportPath":"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","showInTree":true,"treeOrder":204,"backlinks":["300-백엔드개발/스프링-부트(spring-boot).html"],"type":"markdown","data":null},"300-백엔드개발/스프링부트주요사용법.html":{"createdTime":1750876803479,"modifiedTime":1750876858225,"sourceSize":140,"sourcePath":"300-백엔드개발/스프링부트주요사용법.md","exportPath":"300-백엔드개발/스프링부트주요사용법.html","showInTree":true,"treeOrder":205,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/시ㄹ행과정.html":{"createdTime":1751232014242,"modifiedTime":1753666976425,"sourceSize":6617,"sourcePath":"300-백엔드개발/시ㄹ행과정.md","exportPath":"300-백엔드개발/시ㄹ행과정.html","showInTree":true,"treeOrder":206,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/애자일.html":{"createdTime":1749384434967,"modifiedTime":1749435133240,"sourceSize":34,"sourcePath":"300-백엔드개발/애자일.md","exportPath":"300-백엔드개발/애자일.html","showInTree":true,"treeOrder":207,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html":{"createdTime":1749648824210,"modifiedTime":1757783972373,"sourceSize":3438,"sourcePath":"300-백엔드개발/이벤트 기반 아키텍처(EDA)의 정합성.md","exportPath":"300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html","showInTree":true,"treeOrder":208,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/자바에서의-컨테이너.html":{"createdTime":1748334709216,"modifiedTime":1748334731569,"sourceSize":492,"sourcePath":"300-백엔드개발/자바에서의 컨테이너.md","exportPath":"300-백엔드개발/자바에서의-컨테이너.html","showInTree":true,"treeOrder":209,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/컨테이너-런타임.html":{"createdTime":1751782550213,"modifiedTime":1751782561939,"sourceSize":51,"sourcePath":"300-백엔드개발/컨테이너 런타임.md","exportPath":"300-백엔드개발/컨테이너-런타임.html","showInTree":true,"treeOrder":210,"backlinks":["400-인프라-&-아키텍처/k8s.html"],"type":"markdown","data":null},"300-백엔드개발/aggregate.html":{"createdTime":1749753934049,"modifiedTime":1749754233733,"sourceSize":1061,"sourcePath":"300-백엔드개발/Aggregate.md","exportPath":"300-백엔드개발/aggregate.html","showInTree":true,"treeOrder":211,"backlinks":["400-인프라-&-아키텍처/msa.html"],"type":"markdown","data":null},"300-백엔드개발/apache-vs-nginx-vs-tomcat.html":{"createdTime":1757787797882,"modifiedTime":1757787799556,"sourceSize":88,"sourcePath":"300-백엔드개발/Apache VS Nginx VS Tomcat.md","exportPath":"300-백엔드개발/apache-vs-nginx-vs-tomcat.html","showInTree":true,"treeOrder":212,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/db-영속성과-저장.html":{"createdTime":1751416624606,"modifiedTime":1751787573570,"sourceSize":700,"sourcePath":"300-백엔드개발/db 영속성과 저장.md","exportPath":"300-백엔드개발/db-영속성과-저장.html","showInTree":true,"treeOrder":213,"backlinks":["300-백엔드개발/스프링-db-접근.html"],"type":"markdown","data":null},"300-백엔드개발/docker.html":{"createdTime":1751777427723,"modifiedTime":1751782635326,"sourceSize":459,"sourcePath":"300-백엔드개발/docker.md","exportPath":"300-백엔드개발/docker.html","showInTree":true,"treeOrder":214,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html"],"type":"markdown","data":null},"300-백엔드개발/explain.html":{"createdTime":1751349799311,"modifiedTime":1751349799312,"sourceSize":11574,"sourcePath":"300-백엔드개발/explain.md","exportPath":"300-백엔드개발/explain.html","showInTree":true,"treeOrder":215,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/filter,-servlet.html":{"createdTime":1757787043835,"modifiedTime":1757787990956,"sourceSize":520,"sourcePath":"300-백엔드개발/filter, servlet.md","exportPath":"300-백엔드개발/filter,-servlet.html","showInTree":true,"treeOrder":216,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"markdown","data":null},"300-백엔드개발/spring-mvc.html":{"createdTime":1748447444803,"modifiedTime":1748453190109,"sourceSize":2248,"sourcePath":"300-백엔드개발/Spring MVC.md","exportPath":"300-백엔드개발/spring-mvc.html","showInTree":true,"treeOrder":217,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/tomcat-vs-netty.html":{"createdTime":1757788190532,"modifiedTime":1757788209472,"sourceSize":702,"sourcePath":"300-백엔드개발/tomcat vs netty.md","exportPath":"300-백엔드개발/tomcat-vs-netty.html","showInTree":true,"treeOrder":218,"backlinks":[],"type":"markdown","data":null},"300-백엔드개발/webflux-vs-mvc-관련-의문점.html":{"createdTime":1753802741065,"modifiedTime":1757789559020,"sourceSize":3011,"sourcePath":"300-백엔드개발/webflux vs mvc 관련 의문점.md","exportPath":"300-백엔드개발/webflux-vs-mvc-관련-의문점.html","showInTree":true,"treeOrder":219,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/assets/cloud-1747744250912.png":{"createdTime":1747744250922,"modifiedTime":1747744250923,"sourceSize":40656,"sourcePath":"400-인프라 & 아키텍처/assets/Cloud-1747744250912.png","exportPath":"400-인프라-&-아키텍처/assets/cloud-1747744250912.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"400-인프라-&-아키텍처/assets/cloud-1747744250912.html":{"createdTime":1747744250922,"modifiedTime":1747744250923,"sourceSize":40656,"sourcePath":"400-인프라 & 아키텍처/assets/Cloud-1747744250912.png","exportPath":"400-인프라-&-아키텍처/assets/cloud-1747744250912.html","showInTree":true,"treeOrder":222,"backlinks":["400-인프라-&-아키텍처/cloud.html"],"type":"attachment","data":null},"400-인프라-&-아키텍처/도오커.html":{"createdTime":1747292452979,"modifiedTime":1751351210164,"sourceSize":9317,"sourcePath":"400-인프라 & 아키텍처/도오커.md","exportPath":"400-인프라-&-아키텍처/도오커.html","showInTree":true,"treeOrder":223,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/biz,dev,ops.html":{"createdTime":1749383228341,"modifiedTime":1749384413213,"sourceSize":488,"sourcePath":"400-인프라 & 아키텍처/biz,dev,ops.md","exportPath":"400-인프라-&-아키텍처/biz,dev,ops.html","showInTree":true,"treeOrder":224,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/cloud.html":{"createdTime":1747742678019,"modifiedTime":1749384831080,"sourceSize":880,"sourcePath":"400-인프라 & 아키텍처/Cloud.md","exportPath":"400-인프라-&-아키텍처/cloud.html","showInTree":true,"treeOrder":225,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html":{"createdTime":1756656814763,"modifiedTime":1757776973519,"sourceSize":2466,"sourcePath":"400-인프라 & 아키텍처/Error - 장시간 요청 Cloudfront timeout.md","exportPath":"400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html","showInTree":true,"treeOrder":226,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/k8s.html":{"createdTime":1751777055142,"modifiedTime":1751783584615,"sourceSize":4754,"sourcePath":"400-인프라 & 아키텍처/k8s.md","exportPath":"400-인프라-&-아키텍처/k8s.html","showInTree":true,"treeOrder":227,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html"],"type":"markdown","data":null},"400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html":{"createdTime":1751777220488,"modifiedTime":1751778454565,"sourceSize":926,"sourcePath":"400-인프라 & 아키텍처/k8s,kafka,msa,docker와의 관계.md","exportPath":"400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","showInTree":true,"treeOrder":228,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/kafka.html":{"createdTime":1750877591343,"modifiedTime":1751774960328,"sourceSize":5258,"sourcePath":"400-인프라 & 아키텍처/kafka.md","exportPath":"400-인프라-&-아키텍처/kafka.html","showInTree":true,"treeOrder":229,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","400-인프라-&-아키텍처/msa.html","400-인프라-&-아키텍처/msa설계.html"],"type":"markdown","data":null},"400-인프라-&-아키텍처/msa.html":{"createdTime":1749384636686,"modifiedTime":1750880584172,"sourceSize":7656,"sourcePath":"400-인프라 & 아키텍처/msa.md","exportPath":"400-인프라-&-아키텍처/msa.html","showInTree":true,"treeOrder":230,"backlinks":["400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","400-인프라-&-아키텍처/msa설계.html"],"type":"markdown","data":null},"400-인프라-&-아키텍처/msa설계.html":{"createdTime":1750316766990,"modifiedTime":1750907266741,"sourceSize":1877,"sourcePath":"400-인프라 & 아키텍처/msa설계.md","exportPath":"400-인프라-&-아키텍처/msa설계.html","showInTree":true,"treeOrder":231,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/msa전체적인-구조.html":{"createdTime":1751776927627,"modifiedTime":1751776937596,"sourceSize":46,"sourcePath":"400-인프라 & 아키텍처/msa전체적인 구조.md","exportPath":"400-인프라-&-아키텍처/msa전체적인-구조.html","showInTree":true,"treeOrder":232,"backlinks":[],"type":"markdown","data":null},"400-인프라-&-아키텍처/test.html":{"createdTime":1747295964185,"modifiedTime":1747296286495,"sourceSize":8834,"sourcePath":"400-인프라 & 아키텍처/test.md","exportPath":"400-인프라-&-아키텍처/test.html","showInTree":true,"treeOrder":233,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/android/assets/1_setting-20241221011941321.png":{"createdTime":1734711581254,"modifiedTime":1734711581254,"sourceSize":207565,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221011941321.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221011941321.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/1_setting-20241221011941321.html":{"createdTime":1734711581254,"modifiedTime":1734711581254,"sourceSize":207565,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221011941321.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221011941321.html","showInTree":true,"treeOrder":237,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/1_setting-20241221013449422.png":{"createdTime":1734712489382,"modifiedTime":1734712489382,"sourceSize":101257,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221013449422.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221013449422.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/1_setting-20241221013449422.html":{"createdTime":1734712489382,"modifiedTime":1734712489382,"sourceSize":101257,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221013449422.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221013449422.html","showInTree":true,"treeOrder":238,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/1_setting-20241221035822530.png":{"createdTime":1734721102456,"modifiedTime":1734721102456,"sourceSize":151438,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221035822530.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221035822530.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/1_setting-20241221035822530.html":{"createdTime":1734721102456,"modifiedTime":1734721102456,"sourceSize":151438,"sourcePath":"500-모바일개발/android/assets/1_setting-20241221035822530.png","exportPath":"500-모바일개발/android/assets/1_setting-20241221035822530.html","showInTree":true,"treeOrder":239,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/2_기본구조-20241221025557132.png":{"createdTime":1734717357084,"modifiedTime":1734717357084,"sourceSize":315564,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221025557132.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221025557132.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/2_기본구조-20241221025557132.html":{"createdTime":1734717357084,"modifiedTime":1734717357084,"sourceSize":315564,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221025557132.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221025557132.html","showInTree":true,"treeOrder":240,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/2_기본구조-20241221031015594.png":{"createdTime":1734718215551,"modifiedTime":1734718215552,"sourceSize":35540,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221031015594.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221031015594.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/2_기본구조-20241221031015594.html":{"createdTime":1734718215551,"modifiedTime":1734718215552,"sourceSize":35540,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221031015594.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221031015594.html","showInTree":true,"treeOrder":241,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/2_기본구조-20241221031505580.png":{"createdTime":1734718505538,"modifiedTime":1734718505539,"sourceSize":35106,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221031505580.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221031505580.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/2_기본구조-20241221031505580.html":{"createdTime":1734718505538,"modifiedTime":1734718505539,"sourceSize":35106,"sourcePath":"500-모바일개발/android/assets/2_기본구조-20241221031505580.png","exportPath":"500-모바일개발/android/assets/2_기본구조-20241221031505580.html","showInTree":true,"treeOrder":242,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png":{"createdTime":1734784495002,"modifiedTime":1734784495036,"sourceSize":456035,"sourcePath":"500-모바일개발/android/assets/2_안드로이드 이해-20241221213455018.png","exportPath":"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html":{"createdTime":1734784495002,"modifiedTime":1734784495036,"sourceSize":456035,"sourcePath":"500-모바일개발/android/assets/2_안드로이드 이해-20241221213455018.png","exportPath":"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html","showInTree":true,"treeOrder":243,"backlinks":["500-모바일개발/android/2_안드로이드-이해.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/3_코틀린-20241221220802352.png":{"createdTime":1734786482338,"modifiedTime":1734786482390,"sourceSize":163314,"sourcePath":"500-모바일개발/android/assets/3_코틀린-20241221220802352.png","exportPath":"500-모바일개발/android/assets/3_코틀린-20241221220802352.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/3_코틀린-20241221220802352.html":{"createdTime":1734786482338,"modifiedTime":1734786482390,"sourceSize":163314,"sourcePath":"500-모바일개발/android/assets/3_코틀린-20241221220802352.png","exportPath":"500-모바일개발/android/assets/3_코틀린-20241221220802352.html","showInTree":true,"treeOrder":244,"backlinks":["500-모바일개발/android/3_코틀린.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/4_화면-구성-20241223010710073.png":{"createdTime":1734883630058,"modifiedTime":1734883630095,"sourceSize":39947,"sourcePath":"500-모바일개발/android/assets/4_화면 구성-20241223010710073.png","exportPath":"500-모바일개발/android/assets/4_화면-구성-20241223010710073.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/4_화면-구성-20241223010710073.html":{"createdTime":1734883630058,"modifiedTime":1734883630095,"sourceSize":39947,"sourcePath":"500-모바일개발/android/assets/4_화면 구성-20241223010710073.png","exportPath":"500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","showInTree":true,"treeOrder":245,"backlinks":["500-모바일개발/android/4_화면-구성.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/4_화면-구성-20241224000559232.png":{"createdTime":1734966359207,"modifiedTime":1734966359250,"sourceSize":150094,"sourcePath":"500-모바일개발/android/assets/4_화면 구성-20241224000559232.png","exportPath":"500-모바일개발/android/assets/4_화면-구성-20241224000559232.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/4_화면-구성-20241224000559232.html":{"createdTime":1734966359207,"modifiedTime":1734966359250,"sourceSize":150094,"sourcePath":"500-모바일개발/android/assets/4_화면 구성-20241224000559232.png","exportPath":"500-모바일개발/android/assets/4_화면-구성-20241224000559232.html","showInTree":true,"treeOrder":246,"backlinks":["500-모바일개발/android/4_화면-구성.html"],"type":"attachment","data":null},"500-모바일개발/android/assets/setting-20241219232030173.png":{"createdTime":1734618030110,"modifiedTime":1734618030110,"sourceSize":568500,"sourcePath":"500-모바일개발/android/assets/setting-20241219232030173.png","exportPath":"500-모바일개발/android/assets/setting-20241219232030173.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/android/assets/setting-20241219232030173.html":{"createdTime":1734618030110,"modifiedTime":1734618030110,"sourceSize":568500,"sourcePath":"500-모바일개발/android/assets/setting-20241219232030173.png","exportPath":"500-모바일개발/android/assets/setting-20241219232030173.html","showInTree":true,"treeOrder":247,"backlinks":["500-모바일개발/android/1_setting.html"],"type":"attachment","data":null},"500-모바일개발/android/1_setting.html":{"createdTime":1734724153880,"modifiedTime":1734982660478,"sourceSize":3957,"sourcePath":"500-모바일개발/android/1_setting.md","exportPath":"500-모바일개발/android/1_setting.html","showInTree":true,"treeOrder":248,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/android/2_안드로이드-이해.html":{"createdTime":1734717287765,"modifiedTime":1734784647489,"sourceSize":4184,"sourcePath":"500-모바일개발/android/2_안드로이드 이해.md","exportPath":"500-모바일개발/android/2_안드로이드-이해.html","showInTree":true,"treeOrder":249,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/android/3_코틀린.html":{"createdTime":1734720569410,"modifiedTime":1734859982468,"sourceSize":768,"sourcePath":"500-모바일개발/android/3_코틀린.md","exportPath":"500-모바일개발/android/3_코틀린.html","showInTree":true,"treeOrder":250,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/android/4_화면-구성.html":{"createdTime":1734877871074,"modifiedTime":1735181073608,"sourceSize":8218,"sourcePath":"500-모바일개발/android/4_화면 구성.md","exportPath":"500-모바일개발/android/4_화면-구성.html","showInTree":true,"treeOrder":251,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/android/5_미래.html":{"createdTime":1734880838050,"modifiedTime":1734880838050,"sourceSize":0,"sourcePath":"500-모바일개발/android/5_미래.md","exportPath":"500-모바일개발/android/5_미래.html","showInTree":true,"treeOrder":252,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png":{"createdTime":1710519023230,"modifiedTime":1710519023230,"sourceSize":454428,"sourcePath":"500-모바일개발/assets/스크린샷 2024-03-16 오전 1.10.05.png","exportPath":"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html":{"createdTime":1710519023230,"modifiedTime":1710519023230,"sourceSize":454428,"sourcePath":"500-모바일개발/assets/스크린샷 2024-03-16 오전 1.10.05.png","exportPath":"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html","showInTree":true,"treeOrder":254,"backlinks":["500-모바일개발/결과처리.html"],"type":"attachment","data":null},"500-모바일개발/결과처리.html":{"createdTime":1710519011034,"modifiedTime":1710519025239,"sourceSize":54,"sourcePath":"500-모바일개발/결과처리.md","exportPath":"500-모바일개발/결과처리.html","showInTree":true,"treeOrder":255,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/네트워크-환경-체크.html":{"createdTime":1710518704393,"modifiedTime":1710518713633,"sourceSize":43,"sourcePath":"500-모바일개발/네트워크 환경 체크.md","exportPath":"500-모바일개발/네트워크-환경-체크.html","showInTree":true,"treeOrder":256,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/만들면서한-고민.html":{"createdTime":1710477870974,"modifiedTime":1712103062207,"sourceSize":422,"sourcePath":"500-모바일개발/만들면서한 고민.md","exportPath":"500-모바일개발/만들면서한-고민.html","showInTree":true,"treeOrder":257,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/빌드-관련명령어.html":{"createdTime":1711454722466,"modifiedTime":1732891223030,"sourceSize":178,"sourcePath":"500-모바일개발/빌드 관련명령어.md","exportPath":"500-모바일개발/빌드-관련명령어.html","showInTree":true,"treeOrder":258,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/앱에서의-데이터-사용과-구현.html":{"createdTime":1740306219713,"modifiedTime":1740307301396,"sourceSize":1704,"sourcePath":"500-모바일개발/앱에서의 데이터 사용과 구현.md","exportPath":"500-모바일개발/앱에서의-데이터-사용과-구현.html","showInTree":true,"treeOrder":259,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/키스토어-명령어들.html":{"createdTime":1734609693939,"modifiedTime":1734609836764,"sourceSize":305,"sourcePath":"500-모바일개발/키스토어 명령어들.md","exportPath":"500-모바일개발/키스토어-명령어들.html","showInTree":true,"treeOrder":260,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/annotion.html":{"createdTime":1712060630178,"modifiedTime":1712540216778,"sourceSize":222,"sourcePath":"500-모바일개발/annotion.md","exportPath":"500-모바일개발/annotion.html","showInTree":true,"treeOrder":261,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/asyncvalue-vs-asyncdata.html":{"createdTime":1712296272881,"modifiedTime":1712296275336,"sourceSize":56,"sourcePath":"500-모바일개발/AsyncValue vs AsyncData.md","exportPath":"500-모바일개발/asyncvalue-vs-asyncdata.html","showInTree":true,"treeOrder":262,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/dart-3.0.html":{"createdTime":1710427681334,"modifiedTime":1710427685279,"sourceSize":89,"sourcePath":"500-모바일개발/dart 3.0.md","exportPath":"500-모바일개발/dart-3.0.html","showInTree":true,"treeOrder":263,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/enum.html":{"createdTime":1712294703152,"modifiedTime":1712294710339,"sourceSize":31,"sourcePath":"500-모바일개발/enum.md","exportPath":"500-모바일개발/enum.html","showInTree":true,"treeOrder":264,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/flavor-빌드-변형.html":{"createdTime":1717063393710,"modifiedTime":1717063412276,"sourceSize":143,"sourcePath":"500-모바일개발/flavor 빌드 변형.md","exportPath":"500-모바일개발/flavor-빌드-변형.html","showInTree":true,"treeOrder":265,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/flutter-future.html":{"createdTime":1710223480430,"modifiedTime":1710223485666,"sourceSize":24,"sourcePath":"500-모바일개발/flutter future.md","exportPath":"500-모바일개발/flutter-future.html","showInTree":true,"treeOrder":266,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/flutter-mvvm.html":{"createdTime":1709556154326,"modifiedTime":1710686408685,"sourceSize":77,"sourcePath":"500-모바일개발/flutter mvvm.md","exportPath":"500-모바일개발/flutter-mvvm.html","showInTree":true,"treeOrder":267,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/freezed,jsonserialiable.html":{"createdTime":1710572391409,"modifiedTime":1710577948827,"sourceSize":391,"sourcePath":"500-모바일개발/freezed,JsonSerialiable.md","exportPath":"500-모바일개발/freezed,jsonserialiable.html","showInTree":true,"treeOrder":268,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/gorouter-기본사용법.html":{"createdTime":1709554112995,"modifiedTime":1710426650972,"sourceSize":433,"sourcePath":"500-모바일개발/gorouter 기본사용법.md","exportPath":"500-모바일개발/gorouter-기본사용법.html","showInTree":true,"treeOrder":269,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/live-templete.html":{"createdTime":1710481372472,"modifiedTime":1710517986328,"sourceSize":190,"sourcePath":"500-모바일개발/live templete.md","exportPath":"500-모바일개발/live-templete.html","showInTree":true,"treeOrder":270,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/private,-protected.html":{"createdTime":1749144425223,"modifiedTime":1749144439840,"sourceSize":1204,"sourcePath":"500-모바일개발/private, protected.md","exportPath":"500-모바일개발/private,-protected.html","showInTree":true,"treeOrder":271,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/riverpod-annotation.html":{"createdTime":1710609011291,"modifiedTime":1712296196485,"sourceSize":388,"sourcePath":"500-모바일개발/riverpod annotation.md","exportPath":"500-모바일개발/riverpod-annotation.html","showInTree":true,"treeOrder":272,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/riverpod-read-listen.html":{"createdTime":1710613013563,"modifiedTime":1710613028358,"sourceSize":33,"sourcePath":"500-모바일개발/riverpod read listen.md","exportPath":"500-모바일개발/riverpod-read-listen.html","showInTree":true,"treeOrder":273,"backlinks":[],"type":"markdown","data":null},"500-모바일개발/user에-로딩-state가-있어야하는가!.html":{"createdTime":1710426718748,"modifiedTime":1710426748953,"sourceSize":59,"sourcePath":"500-모바일개발/user에 로딩 state가 있어야하는가!.md","exportPath":"500-모바일개발/user에-로딩-state가-있어야하는가!.html","showInTree":true,"treeOrder":274,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.png":{"createdTime":1739989919782,"modifiedTime":1739989919816,"sourceSize":364981,"sourcePath":"600-알고리즘 & 코딩테스트/assets/작성형식-20250220033159798.png","exportPath":"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html":{"createdTime":1739989919782,"modifiedTime":1739989919816,"sourceSize":364981,"sourcePath":"600-알고리즘 & 코딩테스트/assets/작성형식-20250220033159798.png","exportPath":"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html","showInTree":true,"treeOrder":277,"backlinks":["600-알고리즘-&-코딩테스트/작성형식.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.png":{"createdTime":1725037737003,"modifiedTime":1725037737003,"sourceSize":11239,"sourcePath":"600-알고리즘 & 코딩테스트/assets/graph-20240831020857057.png","exportPath":"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html":{"createdTime":1725037737003,"modifiedTime":1725037737003,"sourceSize":11239,"sourcePath":"600-알고리즘 & 코딩테스트/assets/graph-20240831020857057.png","exportPath":"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html","showInTree":true,"treeOrder":278,"backlinks":["600-알고리즘-&-코딩테스트/theory/graph.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.png":{"createdTime":1708046205406,"modifiedTime":1708046205406,"sourceSize":136798,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240216101645.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html":{"createdTime":1708046205406,"modifiedTime":1708046205406,"sourceSize":136798,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240216101645.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","showInTree":true,"treeOrder":279,"backlinks":["600-알고리즘-&-코딩테스트/1613-역사.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.png":{"createdTime":1708046666771,"modifiedTime":1708046666771,"sourceSize":155677,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240216102426.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html":{"createdTime":1708046666771,"modifiedTime":1708046666771,"sourceSize":155677,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240216102426.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html","showInTree":true,"treeOrder":280,"backlinks":["600-알고리즘-&-코딩테스트/1613-역사.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.png":{"createdTime":1721133947612,"modifiedTime":1721133947612,"sourceSize":6599,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240716094012.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html":{"createdTime":1721133947612,"modifiedTime":1721133947612,"sourceSize":6599,"sourcePath":"600-알고리즘 & 코딩테스트/assets/Pasted image 20240716094012.png","exportPath":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html","showInTree":true,"treeOrder":281,"backlinks":["600-알고리즘-&-코딩테스트/lis.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png":{"createdTime":1725436442051,"modifiedTime":1725436442051,"sourceSize":33338,"sourcePath":"600-알고리즘 & 코딩테스트/concept/assets/테트리스, 퍼즐-20240904165402122.png","exportPath":"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html":{"createdTime":1725436442051,"modifiedTime":1725436442051,"sourceSize":33338,"sourcePath":"600-알고리즘 & 코딩테스트/concept/assets/테트리스, 퍼즐-20240904165402122.png","exportPath":"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html","showInTree":true,"treeOrder":284,"backlinks":["600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html":{"createdTime":1725430075818,"modifiedTime":1726050962557,"sourceSize":861,"sourcePath":"600-알고리즘 & 코딩테스트/concept/테트리스, 퍼즐.md","exportPath":"600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","showInTree":true,"treeOrder":285,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png":{"createdTime":1725617518039,"modifiedTime":1725617518040,"sourceSize":667167,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html":{"createdTime":1725617518039,"modifiedTime":1725617518040,"sourceSize":667167,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html","showInTree":true,"treeOrder":288,"backlinks":["600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html"],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html":{"createdTime":1739866497759,"modifiedTime":1739867385185,"sourceSize":2166,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/p_지게차와 크레인_388353.md","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html","showInTree":true,"treeOrder":289,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.png":{"createdTime":1738869203591,"modifiedTime":1738869212273,"sourceSize":7325089,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/s_탑의 높이-20250207041323608.png","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html":{"createdTime":1738869203591,"modifiedTime":1738869212273,"sourceSize":7325089,"sourcePath":"600-알고리즘 & 코딩테스트/problem/assets/s_탑의 높이-20250207041323608.png","exportPath":"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html","showInTree":true,"treeOrder":290,"backlinks":[],"type":"attachment","data":null},"600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html":{"createdTime":1757691040685,"modifiedTime":1757691657122,"sourceSize":2832,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_계단 오르기_2579.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","showInTree":true,"treeOrder":291,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html":{"createdTime":1725679853888,"modifiedTime":1757347915114,"sourceSize":1342,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_공유기설치_2110.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","showInTree":true,"treeOrder":292,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html":{"createdTime":1725449391761,"modifiedTime":1757347917848,"sourceSize":782,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_돌게임_9655.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","showInTree":true,"treeOrder":293,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html":{"createdTime":1725536038719,"modifiedTime":1757347752392,"sourceSize":973,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_등수구하기_1205.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","showInTree":true,"treeOrder":294,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html":{"createdTime":1725460009029,"modifiedTime":1757347929284,"sourceSize":1254,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_비밀번호발음하기_4659.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","showInTree":true,"treeOrder":295,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html":{"createdTime":1725563711901,"modifiedTime":1757347935308,"sourceSize":1596,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_비슷한단어_2607.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","showInTree":true,"treeOrder":296,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html":{"createdTime":1741703712270,"modifiedTime":1757347966666,"sourceSize":6994,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_수레움직이기_250134.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","showInTree":true,"treeOrder":297,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html":{"createdTime":1741955379681,"modifiedTime":1757347970227,"sourceSize":1259,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_쉬운 최단거리_14940.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","showInTree":true,"treeOrder":298,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html":{"createdTime":1725559716294,"modifiedTime":1757347911601,"sourceSize":1813,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_스위치켜고끄기_1244.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","showInTree":true,"treeOrder":299,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html":{"createdTime":1725601043666,"modifiedTime":1757347977301,"sourceSize":2324,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_에디터_1406.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","showInTree":true,"treeOrder":300,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html":{"createdTime":1725643417615,"modifiedTime":1757347979849,"sourceSize":1494,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_연산자 끼워넣기_14888.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","showInTree":true,"treeOrder":301,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_예산_2512.html":{"createdTime":1725562507211,"modifiedTime":1757347982583,"sourceSize":1310,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_예산_2512.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","showInTree":true,"treeOrder":302,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_오목_2615.html":{"createdTime":1738950716344,"modifiedTime":1757347999645,"sourceSize":2137,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_오목_2615.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","showInTree":true,"treeOrder":303,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html":{"createdTime":1728713393240,"modifiedTime":1757348006873,"sourceSize":1489,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_우주신과의교감_1774.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","showInTree":true,"treeOrder":304,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html":{"createdTime":1727879502746,"modifiedTime":1757348010785,"sourceSize":807,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_읽어버린괄호_1541.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","showInTree":true,"treeOrder":305,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html":{"createdTime":1725534857235,"modifiedTime":1757347752392,"sourceSize":652,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_임스미니게임_25757.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","showInTree":true,"treeOrder":306,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html":{"createdTime":1727885610637,"modifiedTime":1757348016830,"sourceSize":657,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_주유소_13305.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","showInTree":true,"treeOrder":307,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_집합_11723.html":{"createdTime":1741940627833,"modifiedTime":1757348020125,"sourceSize":1819,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_집합_11723.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","showInTree":true,"treeOrder":308,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html":{"createdTime":1728747236711,"modifiedTime":1757347752367,"sourceSize":2452,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_특정한최단경로.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","showInTree":true,"treeOrder":309,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html":{"createdTime":1725615214846,"modifiedTime":1757348027814,"sourceSize":1628,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_평범한배낭_12865.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","showInTree":true,"treeOrder":310,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html":{"createdTime":1725609530299,"modifiedTime":1757348515479,"sourceSize":1547,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_IF문대신_19637.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","showInTree":true,"treeOrder":311,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/b_rgb거리.html":{"createdTime":1728791793125,"modifiedTime":1757348171357,"sourceSize":495,"sourcePath":"600-알고리즘 & 코딩테스트/problem/b_RGB거리.md","exportPath":"600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","showInTree":true,"treeOrder":312,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html":{"createdTime":1728623371365,"modifiedTime":1757348114782,"sourceSize":2023,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_MaxNonoverlappingSegments.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","showInTree":true,"treeOrder":313,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/c_minabssum.html":{"createdTime":1728707630007,"modifiedTime":1757347752372,"sourceSize":922,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_MinAbsSum.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_minabssum.html","showInTree":true,"treeOrder":314,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html":{"createdTime":1728644370296,"modifiedTime":1757348174596,"sourceSize":1643,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_NumberSolitaire.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","showInTree":true,"treeOrder":315,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/c_tieropes.html":{"createdTime":1728634469776,"modifiedTime":1757347752383,"sourceSize":753,"sourcePath":"600-알고리즘 & 코딩테스트/problem/c_TieRopes.md","exportPath":"600-알고리즘-&-코딩테스트/problem/c_tieropes.html","showInTree":true,"treeOrder":316,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/g_거리두기.html":{"createdTime":1732075566859,"modifiedTime":1757347752411,"sourceSize":324,"sourcePath":"600-알고리즘 & 코딩테스트/problem/g_거리두기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/g_거리두기.html","showInTree":true,"treeOrder":317,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html":{"createdTime":1750156183779,"modifiedTime":1757348251102,"sourceSize":922,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_꿀열매.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","showInTree":true,"treeOrder":318,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/kt_누적합.html":{"createdTime":1745927206677,"modifiedTime":1757347752419,"sourceSize":1494,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_누적합.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_누적합.html","showInTree":true,"treeOrder":319,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/kt_태국택시.html":{"createdTime":1744689161827,"modifiedTime":1757347752380,"sourceSize":224,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_태국택시.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","showInTree":true,"treeOrder":320,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html":{"createdTime":1744111609256,"modifiedTime":1757347752402,"sourceSize":2724,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_효율적인 화패 구성.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","showInTree":true,"treeOrder":321,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html":{"createdTime":1745910932990,"modifiedTime":1757347752413,"sourceSize":1526,"sourcePath":"600-알고리즘 & 코딩테스트/problem/kt_n을 보는 시각.md","exportPath":"600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","showInTree":true,"treeOrder":322,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html":{"createdTime":1727942997983,"modifiedTime":1757347752386,"sourceSize":1381,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_도넛과막대그래프_258711.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","showInTree":true,"treeOrder":323,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html":{"createdTime":1731827945482,"modifiedTime":1757348441723,"sourceSize":2047,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_동영상재생기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","showInTree":true,"treeOrder":324,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html":{"createdTime":1741878429302,"modifiedTime":1757348435053,"sourceSize":1279,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_두원사이의정수쌍_181187.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","showInTree":true,"treeOrder":325,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html":{"createdTime":1727931166650,"modifiedTime":1757348430874,"sourceSize":1588,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_등굣길_42898.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","showInTree":true,"treeOrder":326,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_붕대감기.html":{"createdTime":1731932117204,"modifiedTime":1757348665765,"sourceSize":1462,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_붕대감기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","showInTree":true,"treeOrder":327,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html":{"createdTime":1739865990013,"modifiedTime":1757347752370,"sourceSize":1559,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_비밀코드해독_388352.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","showInTree":true,"treeOrder":328,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html":{"createdTime":1739903478432,"modifiedTime":1757348402784,"sourceSize":907,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_서버 증설 횟수_389479.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","showInTree":true,"treeOrder":329,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html":{"createdTime":1747730460664,"modifiedTime":1757347752384,"sourceSize":173,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_스킬트리_49993.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","showInTree":true,"treeOrder":330,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html":{"createdTime":1739991129485,"modifiedTime":1757348596149,"sourceSize":2857,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_시험장나누기_81305.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","showInTree":true,"treeOrder":331,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html":{"createdTime":1741308748662,"modifiedTime":1757348375265,"sourceSize":7644,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_아날로그 시계_250135.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","showInTree":true,"treeOrder":332,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html":{"createdTime":1739983488193,"modifiedTime":1757347892633,"sourceSize":2682,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_완전 범죄_389480.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","showInTree":true,"treeOrder":333,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html":{"createdTime":1741612139659,"modifiedTime":1757348368786,"sourceSize":1025,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_요격시스템_181188.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","showInTree":true,"treeOrder":334,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html":{"createdTime":1739865834852,"modifiedTime":1757348617711,"sourceSize":1247,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_유연근무제_388351.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","showInTree":true,"treeOrder":335,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html":{"createdTime":1728020151983,"modifiedTime":1757348358169,"sourceSize":2430,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_주사위고르기_258709.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","showInTree":true,"treeOrder":336,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html":{"createdTime":1731859833075,"modifiedTime":1757348617712,"sourceSize":3102,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_충돌위험찾기.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","showInTree":true,"treeOrder":337,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html":{"createdTime":1739903389291,"modifiedTime":1757348343297,"sourceSize":1053,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_택배 상자 꺼내기_389478.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","showInTree":true,"treeOrder":338,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html":{"createdTime":1731829864201,"modifiedTime":1757348335507,"sourceSize":1741,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_퍼즐게임챌린지.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","showInTree":true,"treeOrder":339,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html":{"createdTime":1725435943810,"modifiedTime":1757348631596,"sourceSize":2551,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_퍼즐조각채우기_84021.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","showInTree":true,"treeOrder":340,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html":{"createdTime":1731907778421,"modifiedTime":1757348323107,"sourceSize":1628,"sourcePath":"600-알고리즘 & 코딩테스트/problem/P_합승택시요금.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","showInTree":true,"treeOrder":341,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html":{"createdTime":1739871353110,"modifiedTime":1757348634458,"sourceSize":5645,"sourcePath":"600-알고리즘 & 코딩테스트/problem/p_홀짝트리_388354.md","exportPath":"600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","showInTree":true,"treeOrder":342,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/s_나무공격.html":{"createdTime":1738951570311,"modifiedTime":1757347752421,"sourceSize":686,"sourcePath":"600-알고리즘 & 코딩테스트/problem/s_나무공격.md","exportPath":"600-알고리즘-&-코딩테스트/problem/s_나무공격.html","showInTree":true,"treeOrder":343,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html":{"createdTime":1738869117984,"modifiedTime":1757348285248,"sourceSize":2544,"sourcePath":"600-알고리즘 & 코딩테스트/problem/s_탑의 높이.md","exportPath":"600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","showInTree":true,"treeOrder":344,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/s_cpti.html":{"createdTime":1738860106711,"modifiedTime":1757348322677,"sourceSize":3862,"sourcePath":"600-알고리즘 & 코딩테스트/problem/s_CPTI.md","exportPath":"600-알고리즘-&-코딩테스트/problem/s_cpti.html","showInTree":true,"treeOrder":345,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html":{"createdTime":1725430075819,"modifiedTime":1757347752420,"sourceSize":1054,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_1로만들기_217.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","showInTree":true,"treeOrder":346,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html":{"createdTime":1725430075819,"modifiedTime":1757347752371,"sourceSize":778,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_1이될때까지_99.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","showInTree":true,"treeOrder":347,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html":{"createdTime":1725430075819,"modifiedTime":1757348265575,"sourceSize":1191,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_개미전사_220.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","showInTree":true,"treeOrder":348,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html":{"createdTime":1725430075819,"modifiedTime":1757347752423,"sourceSize":653,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_거스름돈_87.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","showInTree":true,"treeOrder":349,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html":{"createdTime":1725430075819,"modifiedTime":1757347752390,"sourceSize":1840,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_게임개발_118.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","showInTree":true,"treeOrder":350,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html":{"createdTime":1725430075819,"modifiedTime":1757348256263,"sourceSize":1576,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_도시분할계획_300.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","showInTree":true,"treeOrder":351,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html":{"createdTime":1725430075820,"modifiedTime":1757347752376,"sourceSize":1408,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_떡볶이떡만들기_201.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","showInTree":true,"treeOrder":352,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html":{"createdTime":1725430075820,"modifiedTime":1757348250034,"sourceSize":1306,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_미래도시_259.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","showInTree":true,"treeOrder":353,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html":{"createdTime":1725430075820,"modifiedTime":1757347752417,"sourceSize":1024,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_미로탈출_152.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","showInTree":true,"treeOrder":354,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html":{"createdTime":1725430075820,"modifiedTime":1757348243171,"sourceSize":1837,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_바닥공사_223.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","showInTree":true,"treeOrder":355,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html":{"createdTime":1725430075820,"modifiedTime":1757348238582,"sourceSize":1200,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_부품찾기_197.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","showInTree":true,"treeOrder":356,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html":{"createdTime":1725430075821,"modifiedTime":1757347752384,"sourceSize":711,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_상하좌우_110.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","showInTree":true,"treeOrder":357,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html":{"createdTime":1725430075821,"modifiedTime":1757347752406,"sourceSize":559,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_숫자카드게임_96.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","showInTree":true,"treeOrder":358,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_시각_113.html":{"createdTime":1725430075821,"modifiedTime":1757347752378,"sourceSize":1015,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_시각_113.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_시각_113.html","showInTree":true,"treeOrder":359,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html":{"createdTime":1725430075821,"modifiedTime":1757347752386,"sourceSize":717,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_왕실의나이트_115.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","showInTree":true,"treeOrder":360,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html":{"createdTime":1725430075822,"modifiedTime":1757347752381,"sourceSize":1201,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_음료수얼려먹기_149.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","showInTree":true,"treeOrder":361,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_전보_262.html":{"createdTime":1725430075822,"modifiedTime":1757348210489,"sourceSize":1770,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_전보_262.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_전보_262.html","showInTree":true,"treeOrder":362,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html":{"createdTime":1725430075822,"modifiedTime":1757348202539,"sourceSize":1872,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_커리큘럼_303.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","showInTree":true,"treeOrder":363,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html":{"createdTime":1725430075822,"modifiedTime":1757347752423,"sourceSize":899,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_큰수의법칙_92.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","showInTree":true,"treeOrder":364,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html":{"createdTime":1725430075822,"modifiedTime":1757347752372,"sourceSize":1259,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_팀결성_298.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","showInTree":true,"treeOrder":365,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html":{"createdTime":1725430075822,"modifiedTime":1757348189580,"sourceSize":934,"sourcePath":"600-알고리즘 & 코딩테스트/problem/t_효율적인화폐구성_228.md","exportPath":"600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","showInTree":true,"treeOrder":366,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/구현.html":{"createdTime":1725430075823,"modifiedTime":1757344833023,"sourceSize":379,"sourcePath":"600-알고리즘 & 코딩테스트/theory/구현.md","exportPath":"600-알고리즘-&-코딩테스트/theory/구현.html","showInTree":true,"treeOrder":368,"backlinks":["600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html"],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/그리디.html":{"createdTime":1725430075823,"modifiedTime":1757345772471,"sourceSize":669,"sourcePath":"600-알고리즘 & 코딩테스트/theory/그리디.md","exportPath":"600-알고리즘-&-코딩테스트/theory/그리디.html","showInTree":true,"treeOrder":369,"backlinks":["600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html"],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html":{"createdTime":1725430075823,"modifiedTime":1757345769852,"sourceSize":1845,"sourcePath":"600-알고리즘 & 코딩테스트/theory/다이나믹프로그래밍.md","exportPath":"600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","showInTree":true,"treeOrder":370,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html":{"createdTime":1725430075823,"modifiedTime":1757347140741,"sourceSize":5318,"sourcePath":"600-알고리즘 & 코딩테스트/theory/비용이있는 최단경로.md","exportPath":"600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","showInTree":true,"treeOrder":371,"backlinks":["600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html"],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html":{"createdTime":1738862386184,"modifiedTime":1757347149014,"sourceSize":478,"sourcePath":"600-알고리즘 & 코딩테스트/theory/비트 연산,비트마스킹.md","exportPath":"600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","showInTree":true,"treeOrder":372,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/세그먼트트리.html":{"createdTime":1740114798905,"modifiedTime":1757344732582,"sourceSize":1244,"sourcePath":"600-알고리즘 & 코딩테스트/theory/세그먼트트리.md","exportPath":"600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","showInTree":true,"treeOrder":373,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html":{"createdTime":1728619222739,"modifiedTime":1757347153481,"sourceSize":250,"sourcePath":"600-알고리즘 & 코딩테스트/theory/슬라이딩윈도우.md","exportPath":"600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","showInTree":true,"treeOrder":374,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/위상정렬.html":{"createdTime":1725430075823,"modifiedTime":1757347159413,"sourceSize":1240,"sourcePath":"600-알고리즘 & 코딩테스트/theory/위상정렬.md","exportPath":"600-알고리즘-&-코딩테스트/theory/위상정렬.html","showInTree":true,"treeOrder":375,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/유니온파인드.html":{"createdTime":1725430075823,"modifiedTime":1757347162455,"sourceSize":1442,"sourcePath":"600-알고리즘 & 코딩테스트/theory/유니온파인드.md","exportPath":"600-알고리즘-&-코딩테스트/theory/유니온파인드.html","showInTree":true,"treeOrder":376,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/이진탐색.html":{"createdTime":1725430075823,"modifiedTime":1757347167622,"sourceSize":1489,"sourcePath":"600-알고리즘 & 코딩테스트/theory/이진탐색.md","exportPath":"600-알고리즘-&-코딩테스트/theory/이진탐색.html","showInTree":true,"treeOrder":377,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/정렬.html":{"createdTime":1725430075823,"modifiedTime":1757347174031,"sourceSize":353,"sourcePath":"600-알고리즘 & 코딩테스트/theory/정렬.md","exportPath":"600-알고리즘-&-코딩테스트/theory/정렬.html","showInTree":true,"treeOrder":378,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/최소신장트리.html":{"createdTime":1725430075824,"modifiedTime":1757347176918,"sourceSize":1623,"sourcePath":"600-알고리즘 & 코딩테스트/theory/최소신장트리.md","exportPath":"600-알고리즘-&-코딩테스트/theory/최소신장트리.html","showInTree":true,"treeOrder":379,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/bfs,dfs.html":{"createdTime":1725430075822,"modifiedTime":1757347184233,"sourceSize":1139,"sourcePath":"600-알고리즘 & 코딩테스트/theory/bfs,dfs.md","exportPath":"600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","showInTree":true,"treeOrder":380,"backlinks":["600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html"],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/theory/graph.html":{"createdTime":1725430075822,"modifiedTime":1757347181433,"sourceSize":768,"sourcePath":"600-알고리즘 & 코딩테스트/theory/graph.md","exportPath":"600-알고리즘-&-코딩테스트/theory/graph.html","showInTree":true,"treeOrder":381,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/1613-역사.html":{"createdTime":1707984649277,"modifiedTime":1708504936973,"sourceSize":1352,"sourcePath":"600-알고리즘 & 코딩테스트/1613 역사.md","exportPath":"600-알고리즘-&-코딩테스트/1613-역사.html","showInTree":true,"treeOrder":382,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/작성형식.html":{"createdTime":1725608386226,"modifiedTime":1744605051718,"sourceSize":363,"sourcePath":"600-알고리즘 & 코딩테스트/작성형식.md","exportPath":"600-알고리즘-&-코딩테스트/작성형식.html","showInTree":true,"treeOrder":383,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/g_개미집합의지름.html":{"createdTime":1732079683920,"modifiedTime":1732079723121,"sourceSize":1156,"sourcePath":"600-알고리즘 & 코딩테스트/g_개미집합의지름.md","exportPath":"600-알고리즘-&-코딩테스트/g_개미집합의지름.html","showInTree":true,"treeOrder":384,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/java.html":{"createdTime":1745912253688,"modifiedTime":1746556353546,"sourceSize":7664,"sourcePath":"600-알고리즘 & 코딩테스트/java.md","exportPath":"600-알고리즘-&-코딩테스트/java.html","showInTree":true,"treeOrder":385,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/lis.html":{"createdTime":1721133947612,"modifiedTime":1721133947612,"sourceSize":2534,"sourcePath":"600-알고리즘 & 코딩테스트/LIS.md","exportPath":"600-알고리즘-&-코딩테스트/lis.html","showInTree":true,"treeOrder":386,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/p_석유시추.html":{"createdTime":1731959340278,"modifiedTime":1731984828701,"sourceSize":1507,"sourcePath":"600-알고리즘 & 코딩테스트/p_석유시추.md","exportPath":"600-알고리즘-&-코딩테스트/p_석유시추.html","showInTree":true,"treeOrder":387,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/p42895-n으로-표현.html":{"createdTime":1708505964696,"modifiedTime":1708508127215,"sourceSize":742,"sourcePath":"600-알고리즘 & 코딩테스트/P42895 N으로 표현.md","exportPath":"600-알고리즘-&-코딩테스트/p42895-n으로-표현.html","showInTree":true,"treeOrder":388,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/p42897-도둑질.html":{"createdTime":1708859221775,"modifiedTime":1708859480550,"sourceSize":1320,"sourcePath":"600-알고리즘 & 코딩테스트/p42897 도둑질.md","exportPath":"600-알고리즘-&-코딩테스트/p42897-도둑질.html","showInTree":true,"treeOrder":389,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/python.html":{"createdTime":1725532382390,"modifiedTime":1739994251979,"sourceSize":5377,"sourcePath":"600-알고리즘 & 코딩테스트/python.md","exportPath":"600-알고리즘-&-코딩테스트/python.html","showInTree":true,"treeOrder":390,"backlinks":[],"type":"markdown","data":null},"600-알고리즘-&-코딩테스트/site.html":{"createdTime":1725608400056,"modifiedTime":1725608405269,"sourceSize":27,"sourcePath":"600-알고리즘 & 코딩테스트/site.md","exportPath":"600-알고리즘-&-코딩테스트/site.html","showInTree":true,"treeOrder":391,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.png":{"createdTime":1757784480607,"modifiedTime":1757784480607,"sourceSize":262494,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757784480602.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html":{"createdTime":1757784480607,"modifiedTime":1757784480607,"sourceSize":262494,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757784480602.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html","showInTree":true,"treeOrder":394,"backlinks":[],"type":"attachment","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.png":{"createdTime":1757786723771,"modifiedTime":1757786723771,"sourceSize":317745,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786723764.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html":{"createdTime":1757786723771,"modifiedTime":1757786723771,"sourceSize":317745,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786723764.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html","showInTree":true,"treeOrder":395,"backlinks":[],"type":"attachment","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png":{"createdTime":1757786738831,"modifiedTime":1757786738832,"sourceSize":311217,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786738823.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html":{"createdTime":1757786738831,"modifiedTime":1757786738832,"sourceSize":311217,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786738823.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","showInTree":true,"treeOrder":396,"backlinks":["700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png":{"createdTime":1757786764396,"modifiedTime":1757786764396,"sourceSize":223378,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786764391.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html":{"createdTime":1757786764396,"modifiedTime":1757786764396,"sourceSize":223378,"sourcePath":"700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786764391.png","exportPath":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html","showInTree":true,"treeOrder":397,"backlinks":["700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png":{"createdTime":1705745382732,"modifiedTime":1705745382732,"sourceSize":146841,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-01-20 오후 7.09.39.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html":{"createdTime":1705745382732,"modifiedTime":1705745382732,"sourceSize":146841,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-01-20 오후 7.09.39.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html","showInTree":true,"treeOrder":398,"backlinks":["700-컴퓨터과학/보안프로토콜.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png":{"createdTime":1707982133196,"modifiedTime":1707982133196,"sourceSize":178277,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.28.41.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html":{"createdTime":1707982133196,"modifiedTime":1707982133196,"sourceSize":178277,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.28.41.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","showInTree":true,"treeOrder":399,"backlinks":["700-컴퓨터과학/알고리즘.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png":{"createdTime":1707982317012,"modifiedTime":1707982317012,"sourceSize":163620,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.31.41.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html":{"createdTime":1707982317012,"modifiedTime":1707982317012,"sourceSize":163620,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.31.41.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html","showInTree":true,"treeOrder":400,"backlinks":["700-컴퓨터과학/알고리즘.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png":{"createdTime":1710070360798,"modifiedTime":1710070360798,"sourceSize":143914,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.32.38.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html":{"createdTime":1710070360798,"modifiedTime":1710070360798,"sourceSize":143914,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.32.38.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html","showInTree":true,"treeOrder":401,"backlinks":["700-컴퓨터과학/폰노이만구조.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png":{"createdTime":1710071241492,"modifiedTime":1710071241492,"sourceSize":28462,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.47.17.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html":{"createdTime":1710071241492,"modifiedTime":1710071241492,"sourceSize":28462,"sourcePath":"700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.47.17.png","exportPath":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","showInTree":true,"treeOrder":402,"backlinks":["700-컴퓨터과학/scale-up-&-scale-out.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240120190703.png":{"createdTime":1705745223836,"modifiedTime":1705745223836,"sourceSize":260676,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240120190703.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240120190703.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240120190703.html":{"createdTime":1705745223836,"modifiedTime":1705745223836,"sourceSize":260676,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240120190703.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240120190703.html","showInTree":true,"treeOrder":403,"backlinks":["700-컴퓨터과학/보안프로토콜.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240214193456.png":{"createdTime":1707906896356,"modifiedTime":1707906896356,"sourceSize":44403,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240214193456.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240214193456.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240214193456.html":{"createdTime":1707906896356,"modifiedTime":1707906896356,"sourceSize":44403,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240214193456.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240214193456.html","showInTree":true,"treeOrder":404,"backlinks":["700-컴퓨터과학/알고리즘.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240310202225.png":{"createdTime":1710069745294,"modifiedTime":1710069745295,"sourceSize":62788,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310202225.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310202225.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240310202225.html":{"createdTime":1710069745294,"modifiedTime":1710069745295,"sourceSize":62788,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310202225.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310202225.html","showInTree":true,"treeOrder":405,"backlinks":["700-컴퓨터과학/폰노이만구조.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240310203122.png":{"createdTime":1710070282464,"modifiedTime":1710070282465,"sourceSize":52548,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310203122.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310203122.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240310203122.html":{"createdTime":1710070282464,"modifiedTime":1710070282465,"sourceSize":52548,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310203122.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310203122.html","showInTree":true,"treeOrder":406,"backlinks":["700-컴퓨터과학/폰노이만구조.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240310204327.png":{"createdTime":1710071007119,"modifiedTime":1710071007120,"sourceSize":170800,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310204327.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310204327.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240310204327.html":{"createdTime":1710071007119,"modifiedTime":1710071007120,"sourceSize":170800,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310204327.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310204327.html","showInTree":true,"treeOrder":407,"backlinks":["700-컴퓨터과학/scale-up-&-scale-out.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240310204859.png":{"createdTime":1710071339808,"modifiedTime":1710071339809,"sourceSize":128890,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310204859.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310204859.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240310204859.html":{"createdTime":1710071339808,"modifiedTime":1710071339809,"sourceSize":128890,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240310204859.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240310204859.html","showInTree":true,"treeOrder":408,"backlinks":["700-컴퓨터과학/scale-up-&-scale-out.html"],"type":"attachment","data":null},"700-컴퓨터과학/assets/pasted-image-20240323173037.png":{"createdTime":1711182637206,"modifiedTime":1711182637209,"sourceSize":48185,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240323173037.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240323173037.png","showInTree":true,"treeOrder":0,"backlinks":[],"type":"media","data":null},"700-컴퓨터과학/assets/pasted-image-20240323173037.html":{"createdTime":1711182637206,"modifiedTime":1711182637209,"sourceSize":48185,"sourcePath":"700-컴퓨터과학/assets/Pasted image 20240323173037.png","exportPath":"700-컴퓨터과학/assets/pasted-image-20240323173037.html","showInTree":true,"treeOrder":409,"backlinks":["700-컴퓨터과학/it기초-과제2.html"],"type":"attachment","data":null},"700-컴퓨터과학/네트워크.html":{"createdTime":1705652995000,"modifiedTime":1716708183317,"sourceSize":58,"sourcePath":"700-컴퓨터과학/네트워크.md","exportPath":"700-컴퓨터과학/네트워크.html","showInTree":true,"treeOrder":410,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html":{"createdTime":1757784456201,"modifiedTime":1757786764945,"sourceSize":356,"sourcePath":"700-컴퓨터과학/동기 vs 비동기, 블로킹 vs 논블로킹.md","exportPath":"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","showInTree":true,"treeOrder":411,"backlinks":["300-백엔드개발/webflux-vs-mvc-관련-의문점.html"],"type":"markdown","data":null},"700-컴퓨터과학/디자인패턴.html":{"createdTime":1705652995000,"modifiedTime":1734728639709,"sourceSize":9086,"sourcePath":"700-컴퓨터과학/디자인패턴.md","exportPath":"700-컴퓨터과학/디자인패턴.html","showInTree":true,"treeOrder":412,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/면접-노트.html":{"createdTime":1705652995000,"modifiedTime":1705652995000,"sourceSize":868,"sourcePath":"700-컴퓨터과학/면접 노트.md","exportPath":"700-컴퓨터과학/면접-노트.html","showInTree":true,"treeOrder":413,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/보안프로토콜.html":{"createdTime":1705759533394,"modifiedTime":1705828113898,"sourceSize":160,"sourcePath":"700-컴퓨터과학/보안프로토콜.md","exportPath":"700-컴퓨터과학/보안프로토콜.html","showInTree":true,"treeOrder":414,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/알고리즘.html":{"createdTime":1705652995000,"modifiedTime":1708060526336,"sourceSize":1974,"sourcePath":"700-컴퓨터과학/알고리즘.md","exportPath":"700-컴퓨터과학/알고리즘.html","showInTree":true,"treeOrder":415,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/여러가지-상속.html":{"createdTime":1710518340982,"modifiedTime":1710518349592,"sourceSize":83,"sourcePath":"700-컴퓨터과학/여러가지 상속.md","exportPath":"700-컴퓨터과학/여러가지-상속.html","showInTree":true,"treeOrder":416,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/의존성-주입.html":{"createdTime":1705652995000,"modifiedTime":1709555086219,"sourceSize":2710,"sourcePath":"700-컴퓨터과학/의존성 주입.md","exportPath":"700-컴퓨터과학/의존성-주입.html","showInTree":true,"treeOrder":417,"backlinks":["700-컴퓨터과학/디자인패턴.html"],"type":"markdown","data":null},"700-컴퓨터과학/폰노이만구조.html":{"createdTime":1710069370432,"modifiedTime":1710071847049,"sourceSize":1603,"sourcePath":"700-컴퓨터과학/폰노이만구조.md","exportPath":"700-컴퓨터과학/폰노이만구조.html","showInTree":true,"treeOrder":418,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/합성데이터(synthetic-data).html":{"createdTime":1723048132854,"modifiedTime":1723048132854,"sourceSize":2209,"sourcePath":"700-컴퓨터과학/합성데이터(synthetic-data).md","exportPath":"700-컴퓨터과학/합성데이터(synthetic-data).html","showInTree":true,"treeOrder":419,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/해시.html":{"createdTime":1713082266637,"modifiedTime":1713082269625,"sourceSize":133,"sourcePath":"700-컴퓨터과학/해시.md","exportPath":"700-컴퓨터과학/해시.html","showInTree":true,"treeOrder":420,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/db.html":{"createdTime":1729817855130,"modifiedTime":1729817860425,"sourceSize":29,"sourcePath":"700-컴퓨터과학/DB.md","exportPath":"700-컴퓨터과학/db.html","showInTree":true,"treeOrder":421,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/it기초-과제2.html":{"createdTime":1711182542258,"modifiedTime":1711459159809,"sourceSize":3815,"sourcePath":"700-컴퓨터과학/it기초 과제2.md","exportPath":"700-컴퓨터과학/it기초-과제2.html","showInTree":true,"treeOrder":422,"backlinks":[],"type":"markdown","data":null},"700-컴퓨터과학/scale-up-&-scale-out.html":{"createdTime":1710070626413,"modifiedTime":1710124088019,"sourceSize":1669,"sourcePath":"700-컴퓨터과학/Scale Up & Scale Out.md","exportPath":"700-컴퓨터과학/scale-up-&-scale-out.html","showInTree":true,"treeOrder":423,"backlinks":[],"type":"markdown","data":null},"error/assets/nginx-1757772245845.png":{"createdTime":1757772245852,"modifiedTime":1757772245852,"sourceSize":31866,"sourcePath":"error/assets/nginx-1757772245845.png","exportPath":"error/assets/nginx-1757772245845.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null}},"sourceToTarget":{"데이터분석,ai/캐글/주식,코인 시계열 데이터 분석에서 Ridge, XGBoost 추천 옵션 및 전략.md":"데이터분석,ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","데이터분석,ai/캐글/캐글준비.md":"데이터분석,ai/캐글/캐글준비.html","데이터분석,ai/캐글/eda.md":"데이터분석,ai/캐글/eda.html","데이터분석,ai/캐글/result.md":"데이터분석,ai/캐글/result.html","데이터분석,ai/캐글/Untitled.md":"데이터분석,ai/캐글/untitled.html","데이터분석,ai/캐글/Untitled 1.md":"데이터분석,ai/캐글/untitled-1.html","데이터분석,ai/assets/데이터모델링-20250407100415854.png":"데이터분석,ai/assets/데이터모델링-20250407100415854.html","데이터분석,ai/개발 방법론.md":"데이터분석,ai/개발-방법론.html","데이터분석,ai/데이터모델링.md":"데이터분석,ai/데이터모델링.html","데이터분석,ai/딥러닝.md":"데이터분석,ai/딥러닝.html","데이터분석,ai/모델성능최적화.md":"데이터분석,ai/모델성능최적화.html","데이터분석,ai/분석.md":"데이터분석,ai/분석.html","데이터분석,ai/연관성 분석.md":"데이터분석,ai/연관성-분석.html","데이터분석,ai/의사결정나무.md":"데이터분석,ai/의사결정나무.html","데이터분석,ai/인공신경망(ANN).md":"데이터분석,ai/인공신경망(ann).html","데이터분석,ai/자료 형태에 따른분석.md":"데이터분석,ai/자료-형태에-따른분석.html","데이터분석,ai/카이제곱.md":"데이터분석,ai/카이제곱.html","데이터분석,ai/평가.md":"데이터분석,ai/평가.html","데이터분석,ai/ai 기본 코드.md":"데이터분석,ai/ai-기본-코드.html","데이터분석,ai/callback ,함수 체이닝 차이.md":"데이터분석,ai/callback-,함수-체이닝-차이.html","데이터분석,ai/LLM이 복잡해질수록 정답률이 0에 가까워진다는 논문 설명.md":"데이터분석,ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","데이터분석,ai/p-value.md":"데이터분석,ai/p-value.html","데이터분석,ai/runnable.md":"데이터분석,ai/runnable.html","자격증/assets/데이터아키텍처 1 전사아키텍처 이해-20250319035531727.png":"자격증/assets/데이터아키텍처-1-전사아키텍처-이해-20250319035531727.html","자격증/assets/데이터아키텍처 1 전사아키텍처 이해-20250319210953317.png":"자격증/assets/데이터아키텍처-1-전사아키텍처-이해-20250319210953317.html","자격증/assets/데이터아키텍처 1 전사아키텍처 이해-20250319214507811.png":"자격증/assets/데이터아키텍처-1-전사아키텍처-이해-20250319214507811.html","자격증/assets/데이터아키텍처-20250318212500188.png":"자격증/assets/데이터아키텍처-20250318212500188.html","자격증/assets/데이터아키텍처-20250318212551529.png":"자격증/assets/데이터아키텍처-20250318212551529.html","자격증/assets/데이터아키텍처-20250318232119266.png":"자격증/assets/데이터아키텍처-20250318232119266.html","자격증/assets/데이터아키텍처-20250318235038900.png":"자격증/assets/데이터아키텍처-20250318235038900.html","자격증/assets/데이터아키텍처-20250319033016812.png":"자격증/assets/데이터아키텍처-20250319033016812.html","자격증/assets/데이터아키텍처-20250319033038600.png":"자격증/assets/데이터아키텍처-20250319033038600.html","자격증/assets/데이터아키텍처-20250319033058539.png":"자격증/assets/데이터아키텍처-20250319033058539.html","자격증/assets/데이터아키텍처-20250319033115568.png":"자격증/assets/데이터아키텍처-20250319033115568.html","자격증/assets/데이터아키텍처-20250319033721918.png":"자격증/assets/데이터아키텍처-20250319033721918.html","자격증/assets/데이터아키텍처-20250319034012021.png":"자격증/assets/데이터아키텍처-20250319034012021.html","자격증/assets/빅분기 1유형-1750076194068.png":"자격증/assets/빅분기-1유형-1750076194068.html","자격증/assets/빅분기 2유형-1750431767097.png":"자격증/assets/빅분기-2유형-1750431767097.html","자격증/assets/빅분기 3유형-1750346821520.png":"자격증/assets/빅분기-3유형-1750346821520.html","자격증/assets/빅분기 3유형-1750347244630.png":"자격증/assets/빅분기-3유형-1750347244630.html","자격증/assets/빅분기 3유형-1750347365035.png":"자격증/assets/빅분기-3유형-1750347365035.html","자격증/assets/빅분기 3유형-1750347440411.png":"자격증/assets/빅분기-3유형-1750347440411.html","자격증/assets/빅분기 3유형-1750347514162.png":"자격증/assets/빅분기-3유형-1750347514162.html","자격증/assets/빅분기 3유형-1750347608648.png":"자격증/assets/빅분기-3유형-1750347608648.html","자격증/assets/빅분기 3유형-1750450078055.png":"자격증/assets/빅분기-3유형-1750450078055.html","자격증/assets/빅분기 3유형-1750458321998.png":"자격증/assets/빅분기-3유형-1750458321998.html","자격증/assets/adsp-1747322472742.png":"자격증/assets/adsp-1747322472742.html","자격증/assets/DA_2정보요구사항-20250319215557803.png":"자격증/assets/da_2정보요구사항-20250319215557803.html","자격증/assets/DA_2정보요구사항-20250320025321789.png":"자격증/assets/da_2정보요구사항-20250320025321789.html","자격증/assets/DA_2정보요구사항-20250320031006709.png":"자격증/assets/da_2정보요구사항-20250320031006709.html","자격증/assets/DA_3데이터표준화-20250320211349853.png":"자격증/assets/da_3데이터표준화-20250320211349853.html","자격증/assets/DA_3데이터표준화-20250320225155292.png":"자격증/assets/da_3데이터표준화-20250320225155292.html","자격증/assets/DA_3데이터표준화-20250321030542183.png":"자격증/assets/da_3데이터표준화-20250321030542183.html","자격증/assets/DA_3데이터표준화-20250321030856684.png":"자격증/assets/da_3데이터표준화-20250321030856684.html","자격증/assets/DA_3데이터표준화-20250321032328874.png":"자격증/assets/da_3데이터표준화-20250321032328874.html","자격증/assets/DA_3데이터표준화-20250321040939451.png":"자격증/assets/da_3데이터표준화-20250321040939451.html","자격증/assets/DA_3데이터표준화-20250321041115248.png":"자격증/assets/da_3데이터표준화-20250321041115248.html","자격증/assets/DA_3데이터표준화-20250321042428013.png":"자격증/assets/da_3데이터표준화-20250321042428013.html","자격증/assets/DA_3데이터표준화-20250321042750524.png":"자격증/assets/da_3데이터표준화-20250321042750524.html","자격증/assets/DA_4데이터 모델링-20250321050825351.png":"자격증/assets/da_4데이터-모델링-20250321050825351.html","자격증/assets/DA_4데이터 모델링-20250321050951406.png":"자격증/assets/da_4데이터-모델링-20250321050951406.html","자격증/assets/DA_4데이터 모델링-20250321144641520.png":"자격증/assets/da_4데이터-모델링-20250321144641520.html","자격증/assets/DA_4데이터 모델링-20250321153619253.png":"자격증/assets/da_4데이터-모델링-20250321153619253.html","자격증/assets/DA_4데이터 모델링-20250321204725602.png":"자격증/assets/da_4데이터-모델링-20250321204725602.html","자격증/assets/DA_4데이터 모델링-20250321210117953.png":"자격증/assets/da_4데이터-모델링-20250321210117953.html","자격증/assets/DA_4데이터 모델링-20250321224714619.png":"자격증/assets/da_4데이터-모델링-20250321224714619.html","자격증/assets/DA_4데이터 모델링-20250321233725199.png":"자격증/assets/da_4데이터-모델링-20250321233725199.html","자격증/assets/DA_4데이터 모델링-20250321235557939.png":"자격증/assets/da_4데이터-모델링-20250321235557939.html","자격증/assets/DA_4데이터 모델링-20250322005516087.png":"자격증/assets/da_4데이터-모델링-20250322005516087.html","자격증/assets/DA_4데이터 모델링-20250322020705606.png":"자격증/assets/da_4데이터-모델링-20250322020705606.html","자격증/assets/DA_4데이터 모델링-20250322021233237.png":"자격증/assets/da_4데이터-모델링-20250322021233237.html","자격증/assets/DA_4데이터 모델링-20250322021607665.png":"자격증/assets/da_4데이터-모델링-20250322021607665.html","자격증/assets/DA_4데이터 모델링-20250322021813801.png":"자격증/assets/da_4데이터-모델링-20250322021813801.html","자격증/assets/DA_4데이터 모델링-20250322022224685.png":"자격증/assets/da_4데이터-모델링-20250322022224685.html","자격증/assets/DA_4데이터 모델링-20250322032641895.png":"자격증/assets/da_4데이터-모델링-20250322032641895.html","자격증/assets/DA_4데이터 모델링-20250322060802879.png":"자격증/assets/da_4데이터-모델링-20250322060802879.html","자격증/assets/DA_4데이터 모델링-20250322061300196.png":"자격증/assets/da_4데이터-모델링-20250322061300196.html","자격증/assets/DA_4데이터 모델링-20250322061348492.png":"자격증/assets/da_4데이터-모델링-20250322061348492.html","자격증/assets/DA_4데이터 모델링-20250322065343298.png":"자격증/assets/da_4데이터-모델링-20250322065343298.html","자격증/assets/DA_4데이터 모델링-20250322070633194.png":"자격증/assets/da_4데이터-모델링-20250322070633194.html","자격증/assets/DA_4데이터 모델링-20250322071208388.png":"자격증/assets/da_4데이터-모델링-20250322071208388.html","자격증/assets/sqld-1748487223169.png":"자격증/assets/sqld-1748487223169.html","자격증/assets/sqld-1748487240050.png":"자격증/assets/sqld-1748487240050.html","자격증/assets/sqld-1748487284051.png":"자격증/assets/sqld-1748487284051.html","자격증/assets/sqld-1748487439087.png":"자격증/assets/sqld-1748487439087.html","자격증/assets/sqld-1748487690817.png":"자격증/assets/sqld-1748487690817.html","자격증/assets/sqld-1748487824445.png":"자격증/assets/sqld-1748487824445.html","자격증/assets/sqld-1748487874065.png":"자격증/assets/sqld-1748487874065.html","자격증/assets/sqld-1748487967292.png":"자격증/assets/sqld-1748487967292.html","자격증/assets/sqld-1748488036803.png":"자격증/assets/sqld-1748488036803.html","자격증/assets/sqld-1748488170408.png":"자격증/assets/sqld-1748488170408.html","자격증/assets/sqld-1748488203167.png":"자격증/assets/sqld-1748488203167.html","자격증/assets/sqld-1748586015540.png":"자격증/assets/sqld-1748586015540.html","자격증/assets/sqld-1748603470704.png":"자격증/assets/sqld-1748603470704.html","자격증/assets/sqld-1748607157617.png":"자격증/assets/sqld-1748607157617.html","자격증/assets/sqld-1748607558752.png":"자격증/assets/sqld-1748607558752.html","자격증/assets/sqld-1748615518024.png":"자격증/assets/sqld-1748615518024.html","자격증/assets/sqld-1748618940096.png":"자격증/assets/sqld-1748618940096.html","자격증/assets/sqld-1748631167466.png":"자격증/assets/sqld-1748631167466.html","자격증/assets/sqld-1748631282689.png":"자격증/assets/sqld-1748631282689.html","자격증/assets/sqld-1748633545274.png":"자격증/assets/sqld-1748633545274.html","자격증/wrong_list/assets/sqld-1748632749378.png":"자격증/wrong_list/assets/sqld-1748632749378.html","자격증/wrong_list/assets/sqld-1748634340095.png":"자격증/wrong_list/assets/sqld-1748634340095.html","자격증/wrong_list/assets/sqld-1748634469957.png":"자격증/wrong_list/assets/sqld-1748634469957.html","자격증/wrong_list/assets/sqld-1748634501664.png":"자격증/wrong_list/assets/sqld-1748634501664.html","자격증/wrong_list/assets/sqld-1748635124442.png":"자격증/wrong_list/assets/sqld-1748635124442.html","자격증/wrong_list/assets/sqld-1748635585704.png":"자격증/wrong_list/assets/sqld-1748635585704.html","자격증/wrong_list/assets/sqld-1748636662021.png":"자격증/wrong_list/assets/sqld-1748636662021.html","자격증/wrong_list/Dasp.md":"자격증/wrong_list/dasp.html","자격증/wrong_list/sqld.md":"자격증/wrong_list/sqld.html","자격증/빅분기 1유형.md":"자격증/빅분기-1유형.html","자격증/빅분기 2유형.md":"자격증/빅분기-2유형.html","자격증/빅분기 3유형.md":"자격증/빅분기-3유형.html","자격증/빅분기 3유형_이론.md":"자격증/빅분기-3유형_이론.html","자격증/빅분기 실기시험 3유형 파이썬 풀이 가이드.md":"자격증/빅분기-실기시험-3유형-파이썬-풀이-가이드.html","자격증/adsp.md":"자격증/adsp.html","자격증/ASSO 대비.md":"자격증/asso-대비.html","자격증/DA_1전사아키텍처 이해.md":"자격증/da_1전사아키텍처-이해.html","자격증/DA_2정보요구사항.md":"자격증/da_2정보요구사항.html","자격증/DA_3데이터표준화.md":"자격증/da_3데이터표준화.html","자격증/DA_4데이터 모델링.md":"자격증/da_4데이터-모델링.html","자격증/sqld.md":"자격증/sqld.html","algorithm/assets/작성형식-20250220033159798.png":"algorithm/assets/작성형식-20250220033159798.html","algorithm/assets/graph-20240831020857057.png":"algorithm/assets/graph-20240831020857057.html","algorithm/concept/assets/테트리스, 퍼즐-20240904165402122.png":"algorithm/concept/assets/테트리스,-퍼즐-20240904165402122.html","algorithm/concept/테트리스, 퍼즐.md":"algorithm/concept/테트리스,-퍼즐.html","algorithm/problem/assets/b_평범한배낭_12865-20240906191158114.png":"algorithm/problem/assets/b_평범한배낭_12865-20240906191158114.html","algorithm/problem/assets/p_지게차와 크레인_388353.md":"algorithm/problem/assets/p_지게차와-크레인_388353.html","algorithm/problem/assets/s_탑의 높이-20250207041323608.png":"algorithm/problem/assets/s_탑의-높이-20250207041323608.html","algorithm/problem/b_공유기설치_2110.md":"algorithm/problem/b_공유기설치_2110.html","algorithm/problem/b_돌게임_9655.md":"algorithm/problem/b_돌게임_9655.html","algorithm/problem/b_등수구하기_1205.md":"algorithm/problem/b_등수구하기_1205.html","algorithm/problem/b_비밀번호발음하기_4659.md":"algorithm/problem/b_비밀번호발음하기_4659.html","algorithm/problem/b_비슷한단어_2607.md":"algorithm/problem/b_비슷한단어_2607.html","algorithm/problem/b_수레움직이기_250134.md":"algorithm/problem/b_수레움직이기_250134.html","algorithm/problem/b_쉬운 최단거리_14940.md":"algorithm/problem/b_쉬운-최단거리_14940.html","algorithm/problem/b_스위치켜고끄기_1244.md":"algorithm/problem/b_스위치켜고끄기_1244.html","algorithm/problem/b_에디터_1406.md":"algorithm/problem/b_에디터_1406.html","algorithm/problem/b_연산자 끼워넣기_14888.md":"algorithm/problem/b_연산자-끼워넣기_14888.html","algorithm/problem/b_예산_2512.md":"algorithm/problem/b_예산_2512.html","algorithm/problem/b_오목_2615.md":"algorithm/problem/b_오목_2615.html","algorithm/problem/b_우주신과의교감_1774.md":"algorithm/problem/b_우주신과의교감_1774.html","algorithm/problem/b_읽어버린괄호_1541.md":"algorithm/problem/b_읽어버린괄호_1541.html","algorithm/problem/b_임스미니게임_25757.md":"algorithm/problem/b_임스미니게임_25757.html","algorithm/problem/b_주유소_13305.md":"algorithm/problem/b_주유소_13305.html","algorithm/problem/b_집합_11723.md":"algorithm/problem/b_집합_11723.html","algorithm/problem/b_특정한최단경로.md":"algorithm/problem/b_특정한최단경로.html","algorithm/problem/b_평범한배낭_12865.md":"algorithm/problem/b_평범한배낭_12865.html","algorithm/problem/b_IF문대신_19637.md":"algorithm/problem/b_if문대신_19637.html","algorithm/problem/b_RGB거리.md":"algorithm/problem/b_rgb거리.html","algorithm/problem/c_MaxNonoverlappingSegments.md":"algorithm/problem/c_maxnonoverlappingsegments.html","algorithm/problem/c_MinAbsSum.md":"algorithm/problem/c_minabssum.html","algorithm/problem/c_NumberSolitaire.md":"algorithm/problem/c_numbersolitaire.html","algorithm/problem/c_TieRopes.md":"algorithm/problem/c_tieropes.html","algorithm/problem/g_거리두기.md":"algorithm/problem/g_거리두기.html","algorithm/problem/kt_꿀열매.md":"algorithm/problem/kt_꿀열매.html","algorithm/problem/kt_누적합.md":"algorithm/problem/kt_누적합.html","algorithm/problem/kt_태국택시.md":"algorithm/problem/kt_태국택시.html","algorithm/problem/kt_효율적인 화패 구성.md":"algorithm/problem/kt_효율적인-화패-구성.html","algorithm/problem/kt_n을 보는 시각.md":"algorithm/problem/kt_n을-보는-시각.html","algorithm/problem/p_도넛과막대그래프_258711.md":"algorithm/problem/p_도넛과막대그래프_258711.html","algorithm/problem/p_동영상재생기.md":"algorithm/problem/p_동영상재생기.html","algorithm/problem/p_두원사이의정수쌍_181187.md":"algorithm/problem/p_두원사이의정수쌍_181187.html","algorithm/problem/p_등굣길_42898.md":"algorithm/problem/p_등굣길_42898.html","algorithm/problem/p_붕대감기.md":"algorithm/problem/p_붕대감기.html","algorithm/problem/p_비밀코드해독_388352.md":"algorithm/problem/p_비밀코드해독_388352.html","algorithm/problem/p_서버 증설 횟수_389479.md":"algorithm/problem/p_서버-증설-횟수_389479.html","algorithm/problem/p_스킬트리_49993.md":"algorithm/problem/p_스킬트리_49993.html","algorithm/problem/p_시험장나누기_81305.md":"algorithm/problem/p_시험장나누기_81305.html","algorithm/problem/p_아날로그 시계_250135.md":"algorithm/problem/p_아날로그-시계_250135.html","algorithm/problem/p_완전 범죄_389480.md":"algorithm/problem/p_완전-범죄_389480.html","algorithm/problem/p_요격시스템_181188.md":"algorithm/problem/p_요격시스템_181188.html","algorithm/problem/p_유연근무제_388351.md":"algorithm/problem/p_유연근무제_388351.html","algorithm/problem/p_주사위고르기_258709.md":"algorithm/problem/p_주사위고르기_258709.html","algorithm/problem/p_충돌위험찾기.md":"algorithm/problem/p_충돌위험찾기.html","algorithm/problem/p_택배 상자 꺼내기_389478.md":"algorithm/problem/p_택배-상자-꺼내기_389478.html","algorithm/problem/p_퍼즐게임챌린지.md":"algorithm/problem/p_퍼즐게임챌린지.html","algorithm/problem/p_퍼즐조각채우기_84021.md":"algorithm/problem/p_퍼즐조각채우기_84021.html","algorithm/problem/P_합승택시요금.md":"algorithm/problem/p_합승택시요금.html","algorithm/problem/p_홀짝트리_388354.md":"algorithm/problem/p_홀짝트리_388354.html","algorithm/problem/s_나무공격.md":"algorithm/problem/s_나무공격.html","algorithm/problem/s_탑의 높이.md":"algorithm/problem/s_탑의-높이.html","algorithm/problem/s_CPTI.md":"algorithm/problem/s_cpti.html","algorithm/problem/t_1로만들기_217.md":"algorithm/problem/t_1로만들기_217.html","algorithm/problem/t_1이될때까지_99.md":"algorithm/problem/t_1이될때까지_99.html","algorithm/problem/t_개미전사_220.md":"algorithm/problem/t_개미전사_220.html","algorithm/problem/t_거스름돈_87.md":"algorithm/problem/t_거스름돈_87.html","algorithm/problem/t_게임개발_118.md":"algorithm/problem/t_게임개발_118.html","algorithm/problem/t_도시분할계획_300.md":"algorithm/problem/t_도시분할계획_300.html","algorithm/problem/t_떡볶이떡만들기_201.md":"algorithm/problem/t_떡볶이떡만들기_201.html","algorithm/problem/t_미래도시_259.md":"algorithm/problem/t_미래도시_259.html","algorithm/problem/t_미로탈출_152.md":"algorithm/problem/t_미로탈출_152.html","algorithm/problem/t_바닥공사_223.md":"algorithm/problem/t_바닥공사_223.html","algorithm/problem/t_부품찾기_197.md":"algorithm/problem/t_부품찾기_197.html","algorithm/problem/t_상하좌우_110.md":"algorithm/problem/t_상하좌우_110.html","algorithm/problem/t_숫자카드게임_96.md":"algorithm/problem/t_숫자카드게임_96.html","algorithm/problem/t_시각_113.md":"algorithm/problem/t_시각_113.html","algorithm/problem/t_왕실의나이트_115.md":"algorithm/problem/t_왕실의나이트_115.html","algorithm/problem/t_음료수얼려먹기_149.md":"algorithm/problem/t_음료수얼려먹기_149.html","algorithm/problem/t_전보_262.md":"algorithm/problem/t_전보_262.html","algorithm/problem/t_커리큘럼_303.md":"algorithm/problem/t_커리큘럼_303.html","algorithm/problem/t_큰수의법칙_92.md":"algorithm/problem/t_큰수의법칙_92.html","algorithm/problem/t_팀결성_298.md":"algorithm/problem/t_팀결성_298.html","algorithm/problem/t_효율적인화폐구성_228.md":"algorithm/problem/t_효율적인화폐구성_228.html","algorithm/theory/구현.md":"algorithm/theory/구현.html","algorithm/theory/그리디.md":"algorithm/theory/그리디.html","algorithm/theory/다이나믹프로그래밍.md":"algorithm/theory/다이나믹프로그래밍.html","algorithm/theory/비용이있는 최단경로.md":"algorithm/theory/비용이있는-최단경로.html","algorithm/theory/비트 연산,비트마스킹.md":"algorithm/theory/비트-연산,비트마스킹.html","algorithm/theory/세그먼트트리.md":"algorithm/theory/세그먼트트리.html","algorithm/theory/슬라이딩윈도우.md":"algorithm/theory/슬라이딩윈도우.html","algorithm/theory/위상정렬.md":"algorithm/theory/위상정렬.html","algorithm/theory/유니온파인드.md":"algorithm/theory/유니온파인드.html","algorithm/theory/이진탐색.md":"algorithm/theory/이진탐색.html","algorithm/theory/정렬.md":"algorithm/theory/정렬.html","algorithm/theory/최소신장트리.md":"algorithm/theory/최소신장트리.html","algorithm/theory/bfs,dfs.md":"algorithm/theory/bfs,dfs.html","algorithm/theory/graph.md":"algorithm/theory/graph.html","algorithm/작성형식.md":"algorithm/작성형식.html","algorithm/g_개미집합의지름.md":"algorithm/g_개미집합의지름.html","algorithm/java.md":"algorithm/java.html","algorithm/p_석유시추.md":"algorithm/p_석유시추.html","algorithm/python.md":"algorithm/python.html","algorithm/site.md":"algorithm/site.html","assets/스크린샷.md":"assets/스크린샷.html","assets/스크린샷 2025-06-09 오후 12.16.30.png":"assets/스크린샷-2025-06-09-오후-12.16.30.html","assets/스크린샷 2025-06-09 오후 12.16.39.png":"assets/스크린샷-2025-06-09-오후-12.16.39.html","assets/아이티응용공학 주관식 풀이.txt":"assets/아이티응용공학-주관식-풀이.html","assets/에러해결-20250214115644577.png":"assets/에러해결-20250214115644577.html","assets/이미지 fintuning_전민지-20250313232925544.png":"assets/이미지-fintuning_전민지-20250313232925544.html","assets/채용달력-20250228180641871.png":"assets/채용달력-20250228180641871.html","assets/취업-20250310175837579.png":"assets/취업-20250310175837579.html","assets/취업-20250310175845291.png":"assets/취업-20250310175845291.html","assets/컴사인 기말-20250121063713016.png":"assets/컴사인-기말-20250121063713016.html","assets/컴사인-20250108111623626.png":"assets/컴사인-20250108111623626.html","assets/컴사인-20250108112031721.png":"assets/컴사인-20250108112031721.html","assets/컴사인-20250108113250009.png":"assets/컴사인-20250108113250009.html","assets/태성 이미지 fintuning-20250313224441960.png":"assets/태성-이미지-fintuning-20250313224441960.html","assets/태성 이미지 fintuning-20250313230012183.png":"assets/태성-이미지-fintuning-20250313230012183.html","assets/태성 이미지 fintuning-20250313230405167.png":"assets/태성-이미지-fintuning-20250313230405167.html","assets/태성 이미지등 파일 csv변환-20250313151044108.png":"assets/태성-이미지등-파일-csv변환-20250313151044108.html","assets/태성 이미지등 파일 csv변환-20250313223638086.png":"assets/태성-이미지등-파일-csv변환-20250313223638086.html","assets/태성환경연구소 프로그래모사조사-20250310003306673.png":"assets/태성환경연구소-프로그래모사조사-20250310003306673.html","assets/AI공부  참고 링크-20250319201555381.png":"assets/ai공부-참고-링크-20250319201555381.html","assets/hook-20250211131444709.png":"assets/hook-20250211131444709.html","assets/Pasted image 20240422025513.png":"assets/pasted-image-20240422025513.html","assets/Todo_keyword-20250313200139102.png":"assets/todo_keyword-20250313200139102.html","assets/Todo_keyword-20250313200200425.png":"assets/todo_keyword-20250313200200425.html","assets/Todo_keyword-20250313200521430.png":"assets/todo_keyword-20250313200521430.html","cloud/assets/Cloud-1747744250912.png":"cloud/assets/cloud-1747744250912.html","cloud/도오커.md":"cloud/도오커.html","cloud/Cloud.md":"cloud/cloud.html","cloud/test.md":"cloud/test.html","cloud/Untitled.md":"cloud/untitled.html","CS/알고리즘 예시들/assets/Pasted image 20240216101645.png":"cs/알고리즘-예시들/assets/pasted-image-20240216101645.html","CS/알고리즘 예시들/assets/Pasted image 20240216102426.png":"cs/알고리즘-예시들/assets/pasted-image-20240216102426.html","CS/알고리즘 예시들/assets/Pasted image 20240716094012.png":"cs/알고리즘-예시들/assets/pasted-image-20240716094012.html","CS/알고리즘 예시들/1613 역사.md":"cs/알고리즘-예시들/1613-역사.html","CS/알고리즘 예시들/LIS.md":"cs/알고리즘-예시들/lis.html","CS/알고리즘 예시들/P42895 N으로 표현.md":"cs/알고리즘-예시들/p42895-n으로-표현.html","CS/알고리즘 예시들/p42897 도둑질.md":"cs/알고리즘-예시들/p42897-도둑질.html","CS/인공지능/신경망.md":"cs/인공지능/신경망.html","CS/인공지능/인공지능(AI).md":"cs/인공지능/인공지능(ai).html","CS/assets/스크린샷 2024-01-20 오후 7.09.39.png":"cs/assets/스크린샷-2024-01-20-오후-7.09.39.html","CS/assets/스크린샷 2024-02-15 오후 4.28.41.png":"cs/assets/스크린샷-2024-02-15-오후-4.28.41.html","CS/assets/스크린샷 2024-02-15 오후 4.31.41.png":"cs/assets/스크린샷-2024-02-15-오후-4.31.41.html","CS/assets/스크린샷 2024-03-10 오후 8.32.38.png":"cs/assets/스크린샷-2024-03-10-오후-8.32.38.html","CS/assets/스크린샷 2024-03-10 오후 8.47.17.png":"cs/assets/스크린샷-2024-03-10-오후-8.47.17.html","CS/assets/Pasted image 20240120190703.png":"cs/assets/pasted-image-20240120190703.html","CS/assets/Pasted image 20240214193456.png":"cs/assets/pasted-image-20240214193456.html","CS/assets/Pasted image 20240310202225.png":"cs/assets/pasted-image-20240310202225.html","CS/assets/Pasted image 20240310203122.png":"cs/assets/pasted-image-20240310203122.html","CS/assets/Pasted image 20240310204327.png":"cs/assets/pasted-image-20240310204327.html","CS/assets/Pasted image 20240310204859.png":"cs/assets/pasted-image-20240310204859.html","CS/assets/Pasted image 20240323173037.png":"cs/assets/pasted-image-20240323173037.html","CS/네트워크.md":"cs/네트워크.html","CS/디자인패턴.md":"cs/디자인패턴.html","CS/면접 노트.md":"cs/면접-노트.html","CS/보안프로토콜.md":"cs/보안프로토콜.html","CS/알고리즘.md":"cs/알고리즘.html","CS/여러가지 상속.md":"cs/여러가지-상속.html","CS/의존성 주입.md":"cs/의존성-주입.html","CS/폰노이만구조.md":"cs/폰노이만구조.html","CS/합성데이터(synthetic-data).md":"cs/합성데이터(synthetic-data).html","CS/해시.md":"cs/해시.html","CS/DB.md":"cs/db.html","CS/it기초 과제2.md":"cs/it기초-과제2.html","CS/Scale Up & Scale Out.md":"cs/scale-up-&-scale-out.html","daily/assets/스크린샷 2023-11-25 오후 7.13.54.png":"daily/assets/스크린샷-2023-11-25-오후-7.13.54.html","daily/assets/스크린샷 2023-11-27 오전 10.06.35.png":"daily/assets/스크린샷-2023-11-27-오전-10.06.35.html","daily/assets/스크린샷 2023-11-27 오전 10.10.59.png":"daily/assets/스크린샷-2023-11-27-오전-10.10.59.html","daily/assets/스크린샷 2023-11-27 오후 3.47.10.png":"daily/assets/스크린샷-2023-11-27-오후-3.47.10.html","daily/assets/스크린샷 2023-11-29 오후 3.21.57.png":"daily/assets/스크린샷-2023-11-29-오후-3.21.57.html","daily/assets/스크린샷 2023-12-06 오후 3.19.28.png":"daily/assets/스크린샷-2023-12-06-오후-3.19.28.html","daily/assets/스크린샷 2023-12-06 오후 8.27.16.png":"daily/assets/스크린샷-2023-12-06-오후-8.27.16.html","daily/assets/스크린샷 2023-12-06 오후 8.29.19.png":"daily/assets/스크린샷-2023-12-06-오후-8.29.19.html","daily/assets/스크린샷 2023-12-06 오후 8.42.43.png":"daily/assets/스크린샷-2023-12-06-오후-8.42.43.html","daily/assets/스크린샷 2023-12-06 오후 9.40.01.png":"daily/assets/스크린샷-2023-12-06-오후-9.40.01.html","daily/assets/스크린샷 2023-12-07 오후 9.30.22.png":"daily/assets/스크린샷-2023-12-07-오후-9.30.22.html","daily/assets/스크린샷 2023-12-07 오후 9.31.12.png":"daily/assets/스크린샷-2023-12-07-오후-9.31.12.html","daily/assets/스크린샷 2023-12-07 오후 9.34.48.png":"daily/assets/스크린샷-2023-12-07-오후-9.34.48.html","daily/assets/스크린샷 2023-12-07 오후 9.39.37.png":"daily/assets/스크린샷-2023-12-07-오후-9.39.37.html","daily/assets/스크린샷 2023-12-07 오후 9.59.35.png":"daily/assets/스크린샷-2023-12-07-오후-9.59.35.html","daily/assets/스크린샷 2023-12-17 오후 9.32.29.png":"daily/assets/스크린샷-2023-12-17-오후-9.32.29.html","daily/assets/스크린샷 2023-12-17 오후 9.32.58.png":"daily/assets/스크린샷-2023-12-17-오후-9.32.58.html","daily/assets/스크린샷 2023-12-17 오후 9.46.24.png":"daily/assets/스크린샷-2023-12-17-오후-9.46.24.html","daily/assets/스크린샷 2023-12-17 오후 9.48.51.png":"daily/assets/스크린샷-2023-12-17-오후-9.48.51.html","daily/assets/스크린샷 2023-12-17 오후 11.32.42.png":"daily/assets/스크린샷-2023-12-17-오후-11.32.42.html","daily/assets/스크린샷 2023-12-17 오후 11.33.16.png":"daily/assets/스크린샷-2023-12-17-오후-11.33.16.html","daily/assets/스크린샷 2023-12-17 오후 11.34.08.png":"daily/assets/스크린샷-2023-12-17-오후-11.34.08.html","daily/assets/스크린샷 2023-12-17 오후 11.35.39.png":"daily/assets/스크린샷-2023-12-17-오후-11.35.39.html","daily/assets/스크린샷 2023-12-19 오전 10.25.22.png":"daily/assets/스크린샷-2023-12-19-오전-10.25.22.html","daily/assets/스크린샷 2023-12-19 오전 10.27.13.png":"daily/assets/스크린샷-2023-12-19-오전-10.27.13.html","daily/assets/스크린샷 2023-12-19 오전 10.31.45.png":"daily/assets/스크린샷-2023-12-19-오전-10.31.45.html","daily/assets/스크린샷 2023-12-19 오전 10.54.00.png":"daily/assets/스크린샷-2023-12-19-오전-10.54.00.html","daily/assets/스크린샷 2023-12-19 오전 10.58.47.png":"daily/assets/스크린샷-2023-12-19-오전-10.58.47.html","daily/assets/스크린샷 2023-12-19 오전 11.03.34.png":"daily/assets/스크린샷-2023-12-19-오전-11.03.34.html","daily/assets/스크린샷 2023-12-19 오전 11.05.22.png":"daily/assets/스크린샷-2023-12-19-오전-11.05.22.html","daily/assets/스크린샷 2023-12-19 오전 11.06.22.png":"daily/assets/스크린샷-2023-12-19-오전-11.06.22.html","daily/assets/스크린샷 2023-12-19 오전 11.06.59.png":"daily/assets/스크린샷-2023-12-19-오전-11.06.59.html","daily/assets/스크린샷 2023-12-19 오전 11.07.30.png":"daily/assets/스크린샷-2023-12-19-오전-11.07.30.html","daily/assets/스크린샷 2023-12-19 오후 11.38.43.png":"daily/assets/스크린샷-2023-12-19-오후-11.38.43.html","daily/assets/스크린샷 2023-12-20 오전 1.06.59.png":"daily/assets/스크린샷-2023-12-20-오전-1.06.59.html","daily/assets/스크린샷 2023-12-20 오전 1.10.53.png":"daily/assets/스크린샷-2023-12-20-오전-1.10.53.html","daily/assets/스크린샷 2023-12-20 오전 1.11.34.png":"daily/assets/스크린샷-2023-12-20-오전-1.11.34.html","daily/assets/스크린샷 2023-12-20 오전 1.24.21.png":"daily/assets/스크린샷-2023-12-20-오전-1.24.21.html","daily/assets/스크린샷 2023-12-20 오전 1.24.54.png":"daily/assets/스크린샷-2023-12-20-오전-1.24.54.html","daily/assets/스크린샷 2023-12-20 오전 1.28.57.png":"daily/assets/스크린샷-2023-12-20-오전-1.28.57.html","daily/assets/스크린샷 2023-12-20 오전 1.49.01.png":"daily/assets/스크린샷-2023-12-20-오전-1.49.01.html","daily/assets/스크린샷 2023-12-20 오전 1.57.07.png":"daily/assets/스크린샷-2023-12-20-오전-1.57.07.html","daily/assets/스크린샷 2023-12-20 오전 2.00.20.png":"daily/assets/스크린샷-2023-12-20-오전-2.00.20.html","daily/assets/스크린샷 2023-12-20 오전 2.10.58.png":"daily/assets/스크린샷-2023-12-20-오전-2.10.58.html","daily/assets/스크린샷 2023-12-20 오전 2.13.44.png":"daily/assets/스크린샷-2023-12-20-오전-2.13.44.html","daily/assets/스크린샷 2023-12-20 오전 2.40.35.png":"daily/assets/스크린샷-2023-12-20-오전-2.40.35.html","daily/assets/스크린샷 2023-12-20 오전 2.53.06.png":"daily/assets/스크린샷-2023-12-20-오전-2.53.06.html","daily/assets/스크린샷 2023-12-20 오전 3.00.06.png":"daily/assets/스크린샷-2023-12-20-오전-3.00.06.html","daily/assets/스크린샷 2023-12-20 오전 3.02.11.png":"daily/assets/스크린샷-2023-12-20-오전-3.02.11.html","daily/assets/스크린샷 2023-12-20 오전 3.04.26.png":"daily/assets/스크린샷-2023-12-20-오전-3.04.26.html","daily/assets/스크린샷 2023-12-20 오전 3.04.44.png":"daily/assets/스크린샷-2023-12-20-오전-3.04.44.html","daily/assets/스크린샷 2023-12-20 오전 3.12.26.png":"daily/assets/스크린샷-2023-12-20-오전-3.12.26.html","daily/assets/스크린샷 2023-12-20 오전 3.13.00.png":"daily/assets/스크린샷-2023-12-20-오전-3.13.00.html","daily/assets/스크린샷 2023-12-20 오전 3.22.25.png":"daily/assets/스크린샷-2023-12-20-오전-3.22.25.html","daily/assets/스크린샷 2023-12-20 오전 3.22.44.png":"daily/assets/스크린샷-2023-12-20-오전-3.22.44.html","daily/assets/스크린샷 2023-12-20 오전 3.23.03.png":"daily/assets/스크린샷-2023-12-20-오전-3.23.03.html","daily/assets/스크린샷 2023-12-20 오전 3.27.46.png":"daily/assets/스크린샷-2023-12-20-오전-3.27.46.html","daily/assets/스크린샷 2023-12-20 오전 3.30.04.png":"daily/assets/스크린샷-2023-12-20-오전-3.30.04.html","daily/assets/스크린샷 2023-12-20 오전 3.32.10.png":"daily/assets/스크린샷-2023-12-20-오전-3.32.10.html","daily/assets/스크린샷 2023-12-20 오전 4.09.40.png":"daily/assets/스크린샷-2023-12-20-오전-4.09.40.html","daily/assets/스크린샷 2023-12-20 오전 4.12.11.png":"daily/assets/스크린샷-2023-12-20-오전-4.12.11.html","daily/assets/스크린샷 2023-12-20 오전 4.15.52.png":"daily/assets/스크린샷-2023-12-20-오전-4.15.52.html","daily/assets/스크린샷 2023-12-20 오전 4.39.17.png":"daily/assets/스크린샷-2023-12-20-오전-4.39.17.html","daily/assets/스크린샷 2023-12-20 오전 4.46.41.png":"daily/assets/스크린샷-2023-12-20-오전-4.46.41.html","daily/assets/스크린샷 2023-12-20 오전 6.44.49.png":"daily/assets/스크린샷-2023-12-20-오전-6.44.49.html","daily/assets/스크린샷 2023-12-20 오전 6.51.55.png":"daily/assets/스크린샷-2023-12-20-오전-6.51.55.html","daily/assets/스크린샷 2023-12-20 오전 6.52.08.png":"daily/assets/스크린샷-2023-12-20-오전-6.52.08.html","daily/assets/스크린샷 2023-12-20 오전 12.53.01.png":"daily/assets/스크린샷-2023-12-20-오전-12.53.01.html","daily/assets/스크린샷 2023-12-20 오전 12.53.09.png":"daily/assets/스크린샷-2023-12-20-오전-12.53.09.html","daily/assets/직종별특성.png":"daily/assets/직종별특성.html","daily/assets/dev.png":"daily/assets/dev.html","daily/assets/Pasted image 20231129141201.png":"daily/assets/pasted-image-20231129141201.html","daily/assets/Pasted image 20231216170306.png":"daily/assets/pasted-image-20231216170306.html","daily/assets/Pasted image 20231218223409.png":"daily/assets/pasted-image-20231218223409.html","daily/assets/Pasted image 20231219002904.png":"daily/assets/pasted-image-20231219002904.html","daily/assets/Pasted image 20231219023443.png":"daily/assets/pasted-image-20231219023443.html","daily/assets/Pasted image 20231219024244.png":"daily/assets/pasted-image-20231219024244.html","daily/assets/Pasted image 20231219025219.png":"daily/assets/pasted-image-20231219025219.html","daily/assets/Pasted image 20231219094330.png":"daily/assets/pasted-image-20231219094330.html","daily/assets/Pasted image 20231219095311.png":"daily/assets/pasted-image-20231219095311.html","daily/assets/Pasted image 20231219100911.png":"daily/assets/pasted-image-20231219100911.html","daily/assets/Pasted image 20231219101229.png":"daily/assets/pasted-image-20231219101229.html","daily/assets/Pasted image 20231220015605.png":"daily/assets/pasted-image-20231220015605.html","daily/assets/Pasted image 20231220022054.png":"daily/assets/pasted-image-20231220022054.html","daily/assets/Pasted image 20231220113031.png":"daily/assets/pasted-image-20231220113031.html","daily/assets/Pasted image 20231220114049.png":"daily/assets/pasted-image-20231220114049.html","daily/assets/Pasted image 20231220121535.png":"daily/assets/pasted-image-20231220121535.html","daily/assets/Pasted image 20231220121701.png":"daily/assets/pasted-image-20231220121701.html","daily/2023-11-23.md":"daily/2023-11-23.html","daily/2024-01-20.md":"daily/2024-01-20.html","daily/2025-03-10.md":"daily/2025-03-10.html","daily/카테캠.md":"daily/카테캠.html","english/assets/대학영어-20250106225337881.png":"english/assets/대학영어-20250106225337881.html","english/대학영어.md":"english/대학영어.html","english/오픽만수르 세트1.md":"english/오픽만수르-세트1.html","error/VSCode에서 R언어 설정 관련문제.md":"error/vscode에서-r언어-설정-관련문제.html","js/assets/스크린샷 2023-10-18 오후 8.12.58.png":"js/assets/스크린샷-2023-10-18-오후-8.12.58.html","js/js) math.md":"js/js)-math.html","kt에이블/빅프/ai문서/설계/게시글_sns_관련_db.md":"kt에이블/빅프/ai문서/설계/게시글_sns_관련_db.html","kt에이블/빅프/ai문서/설계/성과분석 다이어어그램.md":"kt에이블/빅프/ai문서/설계/성과분석-다이어어그램.html","kt에이블/빅프/ai문서/설계/성과분석계획.md":"kt에이블/빅프/ai문서/설계/성과분석계획.html","kt에이블/빅프/ai문서/설계/analytics-serves-1.md":"kt에이블/빅프/ai문서/설계/analytics-serves-1.html","kt에이블/빅프/ai문서/설계/Auth_Service_Database_설계.md":"kt에이블/빅프/ai문서/설계/auth_service_database_설계.html","kt에이블/빅프/ai문서/설계/SNS_Service_Database_설계.md":"kt에이블/빅프/ai문서/설계/sns_service_database_설계.html","kt에이블/빅프/ai문서/설계/Store_Service_Database_설계.md":"kt에이블/빅프/ai문서/설계/store_service_database_설계.html","kt에이블/빅프/ai문서/성과-README-초안.md":"kt에이블/빅프/ai문서/성과-readme-초안.html","kt에이블/빅프/ai문서/analyics-README.md":"kt에이블/빅프/ai문서/analyics-readme.html","kt에이블/빅프/ai문서/service.md":"kt에이블/빅프/ai문서/service.html","kt에이블/빅프/assets/내가구현flow-1753685474352.png":"kt에이블/빅프/assets/내가구현flow-1753685474352.html","kt에이블/빅프/assets/내가구현flow-1753685663910.png":"kt에이블/빅프/assets/내가구현flow-1753685663910.html","kt에이블/빅프/assets/내가구현flow-1753685778274.png":"kt에이블/빅프/assets/내가구현flow-1753685778274.html","kt에이블/빅프/assets/ㅇㅔ러-1755935752638.png":"kt에이블/빅프/assets/ㅇㅔ러-1755935752638.html","kt에이블/빅프/assets/카프카  기본설정-1754975621685.png":"kt에이블/빅프/assets/카프카-기본설정-1754975621685.html","kt에이블/빅프/assets/cicd-1753945873829.png":"kt에이블/빅프/assets/cicd-1753945873829.html","kt에이블/빅프/내가구현flow.md":"kt에이블/빅프/내가구현flow.html","kt에이블/빅프/로그.md":"kt에이블/빅프/로그.html","kt에이블/빅프/명세.md":"kt에이블/빅프/명세.html","kt에이블/빅프/배치스케줄링.md":"kt에이블/빅프/배치스케줄링.html","kt에이블/빅프/별도의트랜젝션이필요한경우.md":"kt에이블/빅프/별도의트랜젝션이필요한경우.html","kt에이블/빅프/비ㄱ프때내가머햇음.md":"kt에이블/빅프/비ㄱ프때내가머햇음.html","kt에이블/빅프/빅프백.md":"kt에이블/빅프/빅프백.html","kt에이블/빅프/성과분석계획.md":"kt에이블/빅프/성과분석계획.html","kt에이블/빅프/성과분석db와고민.md":"kt에이블/빅프/성과분석db와고민.html","kt에이블/빅프/어뎁터와서비스.md":"kt에이블/빅프/어뎁터와서비스.html","kt에이블/빅프/ㅇㅔ러.md":"kt에이블/빅프/ㅇㅔ러.html","kt에이블/빅프/제안.md":"kt에이블/빅프/제안.html","kt에이블/빅프/카프카  기본설정.md":"kt에이블/빅프/카프카-기본설정.html","kt에이블/빅프/캐시전략.md":"kt에이블/빅프/캐시전략.html","kt에이블/빅프/쿠키적용실패.md":"kt에이블/빅프/쿠키적용실패.html","kt에이블/빅프/필터에 반영전후.md":"kt에이블/빅프/필터에-반영전후.html","kt에이블/빅프/핵사고날아키택처.md":"kt에이블/빅프/핵사고날아키택처.html","kt에이블/빅프/Adapter vs Port의 차이점.md":"kt에이블/빅프/adapter-vs-port의-차이점.html","kt에이블/빅프/authentication(핸들러에잇는).md":"kt에이블/빅프/authentication(핸들러에잇는).html","kt에이블/빅프/cicd.md":"kt에이블/빅프/cicd.html","kt에이블/빅프/command event.md":"kt에이블/빅프/command-event.html","kt에이블/빅프/config 파일.md":"kt에이블/빅프/config-파일.html","kt에이블/빅프/date,localdate,OffsetDateTime.md":"kt에이블/빅프/date,localdate,offsetdatetime.html","kt에이블/빅프/handler.md":"kt에이블/빅프/handler.html","kt에이블/빅프/impliment가먼데.md":"kt에이블/빅프/impliment가먼데.html","kt에이블/빅프/interceptor.md":"kt에이블/빅프/interceptor.html","kt에이블/빅프/jpa사용법.md":"kt에이블/빅프/jpa사용법.html","kt에이블/빅프/oauth 주요 로직.md":"kt에이블/빅프/oauth-주요-로직.html","kt에이블/빅프/principal패턴.md":"kt에이블/빅프/principal패턴.html","kt에이블/빅프/securityconfig.md":"kt에이블/빅프/securityconfig.html","kt에이블/빅프/Spring Cache,Redis,Guava Cache.md":"kt에이블/빅프/spring-cache,redis,guava-cache.html","kt에이블/빅프/spring2 oauth자동로그인.md":"kt에이블/빅프/spring2-oauth자동로그인.html","kt에이블/빅프/usememousecallback.md":"kt에이블/빅프/usememousecallback.html","kt에이블/빅프/webflux mvc.md":"kt에이블/빅프/webflux-mvc.html","kt에이블/빅프/youtubeapi.md":"kt에이블/빅프/youtubeapi.html","kt에이블/assets/1. 딥러닝-20250410141028941.png":"kt에이블/assets/1.-딥러닝-20250410141028941.html","kt에이블/assets/1. 머신러닝-1744479916214.png":"kt에이블/assets/1.-머신러닝-1744479916214.html","kt에이블/assets/1. 머신러닝-1744480346317.png":"kt에이블/assets/1.-머신러닝-1744480346317.html","kt에이블/assets/1. 머신러닝-1744480870107.png":"kt에이블/assets/1.-머신러닝-1744480870107.html","kt에이블/assets/1. 머신러닝-1744481931609.png":"kt에이블/assets/1.-머신러닝-1744481931609.html","kt에이블/assets/1. 머신러닝-1744538160926.png":"kt에이블/assets/1.-머신러닝-1744538160926.html","kt에이블/assets/1. 머신러닝-1744538582328.png":"kt에이블/assets/1.-머신러닝-1744538582328.html","kt에이블/assets/1. 머신러닝-1744538889126.png":"kt에이블/assets/1.-머신러닝-1744538889126.html","kt에이블/assets/1. 머신러닝-1744538932813.png":"kt에이블/assets/1.-머신러닝-1744538932813.html","kt에이블/assets/1. 머신러닝-1744539398468.png":"kt에이블/assets/1.-머신러닝-1744539398468.html","kt에이블/assets/1. 머신러닝-1744540795063.png":"kt에이블/assets/1.-머신러닝-1744540795063.html","kt에이블/assets/1. 머신러닝-1744541141824.png":"kt에이블/assets/1.-머신러닝-1744541141824.html","kt에이블/assets/미니플젝1-1744592740023.png":"kt에이블/assets/미니플젝1-1744592740023.html","kt에이블/assets/미니플젝1-1744592740024.png":"kt에이블/assets/미니플젝1-1744592740024.html","kt에이블/assets/미니플젝1-1744593271733.png":"kt에이블/assets/미니플젝1-1744593271733.html","kt에이블/assets/미니플젝1-1744593290592.png":"kt에이블/assets/미니플젝1-1744593290592.html","kt에이블/assets/미니플젝1-1744593457949.png":"kt에이블/assets/미니플젝1-1744593457949.html","kt에이블/assets/스크린샷 2025-04-10 오후 5.10.09.png":"kt에이블/assets/스크린샷-2025-04-10-오후-5.10.09.html","kt에이블/assets/스크린샷 2025-04-12 오후 7.41.44.png":"kt에이블/assets/스크린샷-2025-04-12-오후-7.41.44.html","kt에이블/assets/스크린샷 2025-04-13 오전 2.25.43.png":"kt에이블/assets/스크린샷-2025-04-13-오전-2.25.43.html","kt에이블/assets/주성분분석 pca-1752345952529.png":"kt에이블/assets/주성분분석-pca-1752345952529.html","kt에이블/assets/ASSO 대비-1745563235224.png":"kt에이블/assets/asso-대비-1745563235224.html","kt에이블/assets/EDA-1746522554258.png":"kt에이블/assets/eda-1746522554258.html","kt에이블/assets/image.png":"kt에이블/assets/image.html","kt에이블/assets/image-1.png":"kt에이블/assets/image-1.html","kt에이블/assets/pytorch 데이터 준비.md":"kt에이블/assets/pytorch-데이터-준비.html","kt에이블/0. 머신러닝 기본.md":"kt에이블/0.-머신러닝-기본.html","kt에이블/0. 주요상황 & 링크.md":"kt에이블/0.-주요상황-&-링크.html","kt에이블/1. 머신러닝.md":"kt에이블/1.-머신러닝.html","kt에이블/2. 딥러닝.md":"kt에이블/2.-딥러닝.html","kt에이블/결측치 처리.md":"kt에이블/결측치-처리.html","kt에이블/그외 에러.md":"kt에이블/그외-에러.html","kt에이블/데이터 시각화.md":"kt에이블/데이터-시각화.html","kt에이블/머신러닝 모델링.md":"kt에이블/머신러닝-모델링.html","kt에이블/머신러닝 프레임워크비교.md":"kt에이블/머신러닝-프레임워크비교.html","kt에이블/미니플젝1.md":"kt에이블/미니플젝1.html","kt에이블/성과분석 예시응답값.md":"kt에이블/성과분석-예시응답값.html","kt에이블/성능비교 코드.md":"kt에이블/성능비교-코드.html","kt에이블/스케일링, 인코딩.md":"kt에이블/스케일링,-인코딩.html","kt에이블/앙상블.md":"kt에이블/앙상블.html","kt에이블/어노테이션차이.md":"kt에이블/어노테이션차이.html","kt에이블/에러.md":"kt에이블/에러.html","kt에이블/이상치 처리.md":"kt에이블/이상치-처리.html","kt에이블/인덱스,시리즈,데이터프레임.md":"kt에이블/인덱스,시리즈,데이터프레임.html","kt에이블/주성분분석 pca.md":"kt에이블/주성분분석-pca.html","kt에이블/특성 추출, 선택 ,변환.md":"kt에이블/특성-추출,-선택-,변환.html","kt에이블/판다스(pandas).md":"kt에이블/판다스(pandas).html","kt에이블/프론트 useauth개선.md":"kt에이블/프론트-useauth개선.html","kt에이블/학습 데이터 분할.md":"kt에이블/학습-데이터-분할.html","kt에이블/형식 통일.md":"kt에이블/형식-통일.html","kt에이블/회귀 sklearn.md":"kt에이블/회귀-sklearn.html","kt에이블/agentica.md":"kt에이블/agentica.html","kt에이블/apply.md":"kt에이블/apply.html","kt에이블/dataframe에서 데이터 접근.md":"kt에이블/dataframe에서-데이터-접근.html","kt에이블/EDA.md":"kt에이블/eda.html","kt에이블/loc,iloc.md":"kt에이블/loc,iloc.html","kt에이블/test, valid data 차이.md":"kt에이블/test,-valid-data-차이.html","kt에이블/Untitled.md":"kt에이블/untitled.html","ktaivle_back/assets/스프링 DB 접근-1748788030972.png":"ktaivle_back/assets/스프링-db-접근-1748788030972.html","ktaivle_back/assets/아키텍처-1747921913860.png":"ktaivle_back/assets/아키텍처-1747921913860.html","ktaivle_back/assets/애자일-1749384475904.png":"ktaivle_back/assets/애자일-1749384475904.html","ktaivle_back/assets/Aggregate-1749754173915.png":"ktaivle_back/assets/aggregate-1749754173915.html","ktaivle_back/assets/biz,dev,ops-1749383255427.png":"ktaivle_back/assets/biz,dev,ops-1749383255427.html","ktaivle_back/assets/biz,dev,ops-1749384334755.png":"ktaivle_back/assets/biz,dev,ops-1749384334755.html","ktaivle_back/assets/db 영속성과 저장-1751787526152.png":"ktaivle_back/assets/db-영속성과-저장-1751787526152.html","ktaivle_back/assets/docker-1751777737123.png":"ktaivle_back/assets/docker-1751777737123.html","ktaivle_back/assets/k8s-1751779119042.png":"ktaivle_back/assets/k8s-1751779119042.html","ktaivle_back/assets/k8s,kafka,msa와의 관계-1751777362953.png":"ktaivle_back/assets/k8s,kafka,msa와의-관계-1751777362953.html","ktaivle_back/assets/msa-1749455998102.png":"ktaivle_back/assets/msa-1749455998102.html","ktaivle_back/assets/msa-1749544836042.png":"ktaivle_back/assets/msa-1749544836042.html","ktaivle_back/assets/msa-1749752615566.png":"ktaivle_back/assets/msa-1749752615566.html","ktaivle_back/assets/msa-1749752634954.png":"ktaivle_back/assets/msa-1749752634954.html","ktaivle_back/assets/msa-1749752670525.png":"ktaivle_back/assets/msa-1749752670525.html","ktaivle_back/assets/msa-1749753255535.png":"ktaivle_back/assets/msa-1749753255535.html","ktaivle_back/assets/msa설계-1750876404713.png":"ktaivle_back/assets/msa설계-1750876404713.html","ktaivle_back/assets/msa설계-1750876609108.png":"ktaivle_back/assets/msa설계-1750876609108.html","ktaivle_back/assets/msa설계-1750880282832.png":"ktaivle_back/assets/msa설계-1750880282832.html","ktaivle_back/assets/msa전체적인 구조-1751776935880.png":"ktaivle_back/assets/msa전체적인-구조-1751776935880.html","ktaivle_back/assets/Spring MVC-1748447479487.png":"ktaivle_back/assets/spring-mvc-1748447479487.html","ktaivle_back/assets/Spring MVC-1748452533042.png":"ktaivle_back/assets/spring-mvc-1748452533042.html","ktaivle_back/스프링 부트 모니터링, 보안설정.md":"ktaivle_back/스프링-부트-모니터링,-보안설정.html","ktaivle_back/스프링 부트(spring boot).md":"ktaivle_back/스프링-부트(spring-boot).html","ktaivle_back/스프링 프레임워크 기본(spring).md":"ktaivle_back/스프링-프레임워크-기본(spring).html","ktaivle_back/스프링 DB 접근.md":"ktaivle_back/스프링-db-접근.html","ktaivle_back/스프링부트 내장 서버 역활과 특징.md":"ktaivle_back/스프링부트-내장-서버-역활과-특징.html","ktaivle_back/스프링부트주요사용법.md":"ktaivle_back/스프링부트주요사용법.html","ktaivle_back/시ㄹ행과정.md":"ktaivle_back/시ㄹ행과정.html","ktaivle_back/애자일.md":"ktaivle_back/애자일.html","ktaivle_back/이벤트 기반 아키텍처(EDA)의 정합성.md":"ktaivle_back/이벤트-기반-아키텍처(eda)의-정합성.html","ktaivle_back/자바에서의 컨테이너.md":"ktaivle_back/자바에서의-컨테이너.html","ktaivle_back/컨테이너 런타임.md":"ktaivle_back/컨테이너-런타임.html","ktaivle_back/Aggregate.md":"ktaivle_back/aggregate.html","ktaivle_back/biz,dev,ops.md":"ktaivle_back/biz,dev,ops.html","ktaivle_back/db 영속성과 저장.md":"ktaivle_back/db-영속성과-저장.html","ktaivle_back/docker.md":"ktaivle_back/docker.html","ktaivle_back/explain.md":"ktaivle_back/explain.html","ktaivle_back/k8s.md":"ktaivle_back/k8s.html","ktaivle_back/k8s,kafka,msa,docker와의 관계.md":"ktaivle_back/k8s,kafka,msa,docker와의-관계.html","ktaivle_back/kafka.md":"ktaivle_back/kafka.html","ktaivle_back/msa.md":"ktaivle_back/msa.html","ktaivle_back/msa설계.md":"ktaivle_back/msa설계.html","ktaivle_back/msa전체적인 구조.md":"ktaivle_back/msa전체적인-구조.html","ktaivle_back/Spring MVC.md":"ktaivle_back/spring-mvc.html","mobile/android/assets/1_setting-20241221011941321.png":"mobile/android/assets/1_setting-20241221011941321.html","mobile/android/assets/1_setting-20241221013449422.png":"mobile/android/assets/1_setting-20241221013449422.html","mobile/android/assets/1_setting-20241221035822530.png":"mobile/android/assets/1_setting-20241221035822530.html","mobile/android/assets/2_기본구조-20241221025557132.png":"mobile/android/assets/2_기본구조-20241221025557132.html","mobile/android/assets/2_기본구조-20241221031015594.png":"mobile/android/assets/2_기본구조-20241221031015594.html","mobile/android/assets/2_기본구조-20241221031505580.png":"mobile/android/assets/2_기본구조-20241221031505580.html","mobile/android/assets/2_안드로이드 이해-20241221213455018.png":"mobile/android/assets/2_안드로이드-이해-20241221213455018.html","mobile/android/assets/3_코틀린-20241221220802352.png":"mobile/android/assets/3_코틀린-20241221220802352.html","mobile/android/assets/4_화면 구성-20241223010710073.png":"mobile/android/assets/4_화면-구성-20241223010710073.html","mobile/android/assets/4_화면 구성-20241224000559232.png":"mobile/android/assets/4_화면-구성-20241224000559232.html","mobile/android/assets/setting-20241219232030173.png":"mobile/android/assets/setting-20241219232030173.html","mobile/android/1_setting.md":"mobile/android/1_setting.html","mobile/android/2_안드로이드 이해.md":"mobile/android/2_안드로이드-이해.html","mobile/android/3_코틀린.md":"mobile/android/3_코틀린.html","mobile/android/4_화면 구성.md":"mobile/android/4_화면-구성.html","mobile/android/5_미래.md":"mobile/android/5_미래.html","mobile/assets/스크린샷 2024-03-16 오전 1.10.05.png":"mobile/assets/스크린샷-2024-03-16-오전-1.10.05.html","mobile/결과처리.md":"mobile/결과처리.html","mobile/네트워크 환경 체크.md":"mobile/네트워크-환경-체크.html","mobile/만들면서한 고민.md":"mobile/만들면서한-고민.html","mobile/빌드 관련명령어.md":"mobile/빌드-관련명령어.html","mobile/앱에서의 데이터 사용과 구현.md":"mobile/앱에서의-데이터-사용과-구현.html","mobile/키스토어 명령어들.md":"mobile/키스토어-명령어들.html","mobile/annotion.md":"mobile/annotion.html","mobile/AsyncValue vs AsyncData.md":"mobile/asyncvalue-vs-asyncdata.html","mobile/dart 3.0.md":"mobile/dart-3.0.html","mobile/enum.md":"mobile/enum.html","mobile/flavor 빌드 변형.md":"mobile/flavor-빌드-변형.html","mobile/flutter future.md":"mobile/flutter-future.html","mobile/flutter mvvm.md":"mobile/flutter-mvvm.html","mobile/freezed,JsonSerialiable.md":"mobile/freezed,jsonserialiable.html","mobile/gorouter 기본사용법.md":"mobile/gorouter-기본사용법.html","mobile/live templete.md":"mobile/live-templete.html","mobile/private, protected.md":"mobile/private,-protected.html","mobile/riverpod annotation.md":"mobile/riverpod-annotation.html","mobile/riverpod read listen.md":"mobile/riverpod-read-listen.html","mobile/user에 로딩 state가 있어야하는가!.md":"mobile/user에-로딩-state가-있어야하는가!.html","school/23-2/정보보안/정보보안 기말 - 보안프로토콜.md":"school/23-2/정보보안/정보보안-기말-보안프로토콜.html","school/23-2/정보보안/정보보안 기말 - 접근제어.md":"school/23-2/정보보안/정보보안-기말-접근제어.html","school/23-2/정보보안/정보보안 기말 - 해쉬와 기타.md":"school/23-2/정보보안/정보보안-기말-해쉬와-기타.html","school/23-2/DB/DB - 관계 연산.md":"school/23-2/db/db-관계-연산.html","school/23-2/DB/DB - 데이터 모델링(DB 설계).md":"school/23-2/db/db-데이터-모델링(db-설계).html","school/23-2/DB/DB - 종속성과 정규화.md":"school/23-2/db/db-종속성과-정규화.html","school/23-2/DB/DB - DW&DM.md":"school/23-2/db/db-dw&dm.html","school/23-2/DB/DB - SQL.md":"school/23-2/db/db-sql.html","school/23-2/DB/DB_All.md":"school/23-2/db/db_all.html","school/23-2/2024-04-24.md":"school/23-2/2024-04-24.html","school/23-2/데이터베이스.md":"school/23-2/데이터베이스.html","school/23-2/디통공 기말.md":"school/23-2/디통공-기말.html","school/23-2/디통공 중간.md":"school/23-2/디통공-중간.html","school/23-2/마프 기말.md":"school/23-2/마프-기말.html","school/23-2/마프 중간.md":"school/23-2/마프-중간.html","school/23-2/정보보안 기말.md":"school/23-2/정보보안-기말.html","school/23-2/정보보안 중간.md":"school/23-2/정보보안-중간.html","school/23-2/HCI - 기말.md":"school/23-2/hci-기말.html","school/23-2/HCI - 중간.md":"school/23-2/hci-중간.html","school/23-2/hci 교수님 코멘트 중심정리.md":"school/23-2/hci-교수님-코멘트-중심정리.html","school/23-2/JSP.md":"school/23-2/jsp.html","school/23-2/jsp - 8장 MVC.md":"school/23-2/jsp-8장-mvc.html","school/23-2/jsp - 9장 DB 와 JDBC.md":"school/23-2/jsp-9장-db-와-jdbc.html","school/23-2/jsp - 11장 특수 서블릿.md":"school/23-2/jsp-11장-특수-서블릿.html","school/23-2/jsp - 12장 restapi.md":"school/23-2/jsp-12장-restapi.html","school/23-2/jsp - 13장 스프링.md":"school/23-2/jsp-13장-스프링.html","school/운영체제/assets/9. 메인 메모리 할당-20240606192503073.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606192503073.html","school/운영체제/assets/9. 메인 메모리 할당-20240606194512337.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606194512337.html","school/운영체제/assets/9. 메인 메모리 할당-20240606195750063.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606195750063.html","school/운영체제/assets/9. 메인 메모리 할당-20240606201117648.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606201117648.html","school/운영체제/assets/9. 메인 메모리 할당-20240606201149470.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606201149470.html","school/운영체제/assets/9. 메인 메모리 할당-20240606203102092.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606203102092.html","school/운영체제/assets/9. 메인 메모리 할당-20240606204114530.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606204114530.html","school/운영체제/assets/9. 메인 메모리 할당-20240606204246325.png":"school/운영체제/assets/9.-메인-메모리-할당-20240606204246325.html","school/운영체제/assets/9. 메인 메모리-20240605193111793.png":"school/운영체제/assets/9.-메인-메모리-20240605193111793.html","school/운영체제/assets/9. 메인 메모리-20240606180135582.png":"school/운영체제/assets/9.-메인-메모리-20240606180135582.html","school/운영체제/assets/10.가상 메모리-20240607161248434.png":"school/운영체제/assets/10.가상-메모리-20240607161248434.html","school/운영체제/assets/10.가상 메모리-20240607163640658.png":"school/운영체제/assets/10.가상-메모리-20240607163640658.html","school/운영체제/assets/10.가상 메모리-20240607165030721.png":"school/운영체제/assets/10.가상-메모리-20240607165030721.html","school/운영체제/assets/10.가상 메모리-20240607165620996.png":"school/운영체제/assets/10.가상-메모리-20240607165620996.html","school/운영체제/assets/10.가상 메모리-20240607170542544.png":"school/운영체제/assets/10.가상-메모리-20240607170542544.html","school/운영체제/assets/10.가상 메모리-20240607175805248.png":"school/운영체제/assets/10.가상-메모리-20240607175805248.html","school/운영체제/assets/11. 보조 저장 장치-20240615013143218.png":"school/운영체제/assets/11.-보조-저장-장치-20240615013143218.html","school/운영체제/assets/스크린샷 2024-04-03 오전 10.49.53.png":"school/운영체제/assets/스크린샷-2024-04-03-오전-10.49.53.html","school/운영체제/assets/스크린샷 2024-04-03 오후 2.04.45.png":"school/운영체제/assets/스크린샷-2024-04-03-오후-2.04.45.html","school/운영체제/assets/스크린샷 2024-04-03 오후 2.09.17.png":"school/운영체제/assets/스크린샷-2024-04-03-오후-2.09.17.html","school/운영체제/assets/스크린샷 2024-04-03 오후 2.24.19.png":"school/운영체제/assets/스크린샷-2024-04-03-오후-2.24.19.html","school/운영체제/assets/스크린샷 2024-04-04 오후 4.10.20.png":"school/운영체제/assets/스크린샷-2024-04-04-오후-4.10.20.html","school/운영체제/assets/스크린샷 2024-04-04 오후 4.10.39.png":"school/운영체제/assets/스크린샷-2024-04-04-오후-4.10.39.html","school/운영체제/assets/스크린샷 2024-04-14 오후 4.20.09.png":"school/운영체제/assets/스크린샷-2024-04-14-오후-4.20.09.html","school/운영체제/assets/스크린샷 2024-04-14 오후 4.55.35.png":"school/운영체제/assets/스크린샷-2024-04-14-오후-4.55.35.html","school/운영체제/assets/스크린샷 2024-04-14 오후 5.05.31.png":"school/운영체제/assets/스크린샷-2024-04-14-오후-5.05.31.html","school/운영체제/assets/스크린샷 2024-04-14 오후 7.11.22.png":"school/운영체제/assets/스크린샷-2024-04-14-오후-7.11.22.html","school/운영체제/assets/스크린샷 2024-04-14 오후 7.13.14.png":"school/운영체제/assets/스크린샷-2024-04-14-오후-7.13.14.html","school/운영체제/assets/스크린샷 2024-04-14 오후 7.16.21.png":"school/운영체제/assets/스크린샷-2024-04-14-오후-7.16.21.html","school/운영체제/assets/스크린샷 2024-04-16 오전 11.06.40.png":"school/운영체제/assets/스크린샷-2024-04-16-오전-11.06.40.html","school/운영체제/assets/스크린샷 2024-04-16 오후 9.27.24.png":"school/운영체제/assets/스크린샷-2024-04-16-오후-9.27.24.html","school/운영체제/assets/스크린샷 2024-04-16 오후 9.47.34.png":"school/운영체제/assets/스크린샷-2024-04-16-오후-9.47.34.html","school/운영체제/assets/스크린샷 2024-04-16 오후 10.43.47.png":"school/운영체제/assets/스크린샷-2024-04-16-오후-10.43.47.html","school/운영체제/assets/스크린샷 2024-04-17 오후 1.39.28.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-1.39.28.html","school/운영체제/assets/스크린샷 2024-04-17 오후 2.10.30.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-2.10.30.html","school/운영체제/assets/스크린샷 2024-04-17 오후 4.56.05.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-4.56.05.html","school/운영체제/assets/스크린샷 2024-04-17 오후 5.30.48.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-5.30.48.html","school/운영체제/assets/스크린샷 2024-04-17 오후 5.42.45.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-5.42.45.html","school/운영체제/assets/스크린샷 2024-04-17 오후 6.09.25.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-6.09.25.html","school/운영체제/assets/스크린샷 2024-04-17 오후 6.16.55.png":"school/운영체제/assets/스크린샷-2024-04-17-오후-6.16.55.html","school/운영체제/assets/IMG_0039.png":"school/운영체제/assets/img_0039.html","school/운영체제/assets/IMG_0041.png":"school/운영체제/assets/img_0041.html","school/운영체제/assets/Pasted image 20240401120816.png":"school/운영체제/assets/pasted-image-20240401120816.html","school/운영체제/assets/Pasted image 20240401121001.png":"school/운영체제/assets/pasted-image-20240401121001.html","school/운영체제/assets/Pasted image 20240414170245.png":"school/운영체제/assets/pasted-image-20240414170245.html","school/운영체제/assets/Pasted image 20240416205457.png":"school/운영체제/assets/pasted-image-20240416205457.html","school/운영체제/assets/Pasted image 20240416213116.png":"school/운영체제/assets/pasted-image-20240416213116.html","school/운영체제/assets/Pasted image 20240417230303.png":"school/운영체제/assets/pasted-image-20240417230303.html","school/운영체제/assets/Pasted image 20240418211706.png":"school/운영체제/assets/pasted-image-20240418211706.html","school/운영체제/assets/Pasted image 20240418214254.png":"school/운영체제/assets/pasted-image-20240418214254.html","school/운영체제/assets/Pasted image 20240423222740.png":"school/운영체제/assets/pasted-image-20240423222740.html","school/운영체제/assets/Pasted image 20240423223102.png":"school/운영체제/assets/pasted-image-20240423223102.html","school/운영체제/assets/Pasted image 20240424033353.png":"school/운영체제/assets/pasted-image-20240424033353.html","school/운영체제/0. ㅈㅂ.md":"school/운영체제/0.-ㅈㅂ.html","school/운영체제/1. 컴퓨터 시스템.md":"school/운영체제/1.-컴퓨터-시스템.html","school/운영체제/2. 운영체제 기본과 구조.md":"school/운영체제/2.-운영체제-기본과-구조.html","school/운영체제/3. 운영체제 연산.md":"school/운영체제/3.-운영체제-연산.html","school/운영체제/4. 운영체제 자원 관리.md":"school/운영체제/4.-운영체제-자원-관리.html","school/운영체제/5. 프로세스.md":"school/운영체제/5.-프로세스.html","school/운영체제/6. 프로세스 스케줄링.md":"school/운영체제/6.-프로세스-스케줄링.html","school/운영체제/7. 프로세스 동기화.md":"school/운영체제/7.-프로세스-동기화.html","school/운영체제/8. 프로세스 교착상태.md":"school/운영체제/8.-프로세스-교착상태.html","school/운영체제/9. 메인 메모리 할당.md":"school/운영체제/9.-메인-메모리-할당.html","school/운영체제/10.가상 메모리.md":"school/운영체제/10.가상-메모리.html","school/운영체제/11. 보조 저장 장치.md":"school/운영체제/11.-보조-저장-장치.html","school/운영체제/12. 파일 시스템.md":"school/운영체제/12.-파일-시스템.html","school/운영체제/13. 입출력 시스템.md":"school/운영체제/13.-입출력-시스템.html","school/운영체제/기말.md":"school/운영체제/기말.html","school/운영체제/기말 퀴즈.md":"school/운영체제/기말-퀴즈.html","school/운영체제/생산자 소비자 문제.md":"school/운영체제/생산자-소비자-문제.html","school/운영체제/시험.md":"school/운영체제/시험.html","school/전자회로/assets/ㅈㅂ 기말-20240618001233543.png":"school/전자회로/assets/ㅈㅂ-기말-20240618001233543.html","school/전자회로/assets/ㅈㅂ 기말-20240618001658483.png":"school/전자회로/assets/ㅈㅂ-기말-20240618001658483.html","school/전자회로/assets/ㅈㅂ 기말-20240618002707893.png":"school/전자회로/assets/ㅈㅂ-기말-20240618002707893.html","school/전자회로/assets/ㅈㅂ 기말-20240618004547175.png":"school/전자회로/assets/ㅈㅂ-기말-20240618004547175.html","school/전자회로/assets/ㅈㅂ 기말-20240618004855566.png":"school/전자회로/assets/ㅈㅂ-기말-20240618004855566.html","school/전자회로/assets/ㅈㅂ 기말-20240618005832461.png":"school/전자회로/assets/ㅈㅂ-기말-20240618005832461.html","school/전자회로/assets/ㅈㅂ 기말-20240618011525950.png":"school/전자회로/assets/ㅈㅂ-기말-20240618011525950.html","school/전자회로/assets/ㅈㅂ 기말-20240618011552633.png":"school/전자회로/assets/ㅈㅂ-기말-20240618011552633.html","school/전자회로/10.피드백(Feedback).md":"school/전자회로/10.피드백(feedback).html","school/전자회로/11. 출력 단계와 전력 증폭기 (Output Stage and Power Amplifier).md":"school/전자회로/11.-출력-단계와-전력-증폭기-(output-stage-and-power-amplifier).html","school/전자회로/13. 필터 및 오실레이터 (Filters and Oscillators).md":"school/전자회로/13.-필터-및-오실레이터-(filters-and-oscillators).html","school/전자회로/ㅈㅂ 기말.md":"school/전자회로/ㅈㅂ-기말.html","school/assets/스크린샷 2023-10-18 오후 2.17.38.png":"school/assets/스크린샷-2023-10-18-오후-2.17.38.html","school/assets/스크린샷 2023-10-21 오후 8.04.54.png":"school/assets/스크린샷-2023-10-21-오후-8.04.54.html","school/assets/스크린샷 2023-10-21 오후 8.11.43.png":"school/assets/스크린샷-2023-10-21-오후-8.11.43.html","school/assets/스크린샷 2023-10-21 오후 11.54.16.png":"school/assets/스크린샷-2023-10-21-오후-11.54.16.html","school/assets/스크린샷 2023-10-22 오전 3.24.37.png":"school/assets/스크린샷-2023-10-22-오전-3.24.37.html","school/assets/스크린샷 2023-10-22 오전 4.06.30.png":"school/assets/스크린샷-2023-10-22-오전-4.06.30.html","school/assets/스크린샷 2023-10-22 오후 11.57.20.png":"school/assets/스크린샷-2023-10-22-오후-11.57.20.html","school/assets/스크린샷 2023-10-23 오전 12.19.12.png":"school/assets/스크린샷-2023-10-23-오전-12.19.12.html","school/assets/스크린샷 2023-10-23 오전 12.39.47.png":"school/assets/스크린샷-2023-10-23-오전-12.39.47.html","school/assets/스크린샷 2023-10-23 오후 7.53.02.png":"school/assets/스크린샷-2023-10-23-오후-7.53.02.html","school/assets/스크린샷 2023-10-23 오후 8.04.42.png":"school/assets/스크린샷-2023-10-23-오후-8.04.42.html","school/assets/스크린샷 2023-10-23 오후 9.06.16.png":"school/assets/스크린샷-2023-10-23-오후-9.06.16.html","school/assets/스크린샷 2023-10-24 오전 10.09.17.png":"school/assets/스크린샷-2023-10-24-오전-10.09.17.html","school/assets/스크린샷 2023-10-24 오전 10.21.17.png":"school/assets/스크린샷-2023-10-24-오전-10.21.17.html","school/assets/스크린샷 2023-10-24 오전 10.31.46.png":"school/assets/스크린샷-2023-10-24-오전-10.31.46.html","school/assets/스크린샷 2023-10-24 오전 10.46.27.png":"school/assets/스크린샷-2023-10-24-오전-10.46.27.html","school/assets/스크린샷 2023-10-24 오후 2.23.31.png":"school/assets/스크린샷-2023-10-24-오후-2.23.31.html","school/assets/스크린샷 2023-10-24 오후 2.24.32.png":"school/assets/스크린샷-2023-10-24-오후-2.24.32.html","school/assets/스크린샷 2023-10-24 오후 9.30.45.png":"school/assets/스크린샷-2023-10-24-오후-9.30.45.html","school/assets/스크린샷 2023-10-24 오후 11.52.37.png":"school/assets/스크린샷-2023-10-24-오후-11.52.37.html","school/assets/스크린샷 2023-10-24 오후 11.55.11.png":"school/assets/스크린샷-2023-10-24-오후-11.55.11.html","school/assets/스크린샷 2023-10-24 오후 11.57.55.png":"school/assets/스크린샷-2023-10-24-오후-11.57.55.html","school/assets/스크린샷 2023-10-25 오전 11.22.27.png":"school/assets/스크린샷-2023-10-25-오전-11.22.27.html","school/assets/스크린샷 2023-10-25 오후 6.54.22.png":"school/assets/스크린샷-2023-10-25-오후-6.54.22.html","school/assets/스크린샷 2023-10-25 오후 7.42.20.png":"school/assets/스크린샷-2023-10-25-오후-7.42.20.html","school/assets/스크린샷 2023-10-25 오후 7.53.05.png":"school/assets/스크린샷-2023-10-25-오후-7.53.05.html","school/assets/스크린샷 2023-10-25 오후 8.45.53.png":"school/assets/스크린샷-2023-10-25-오후-8.45.53.html","school/assets/스크린샷 2023-10-25 오후 8.50.01.png":"school/assets/스크린샷-2023-10-25-오후-8.50.01.html","school/assets/스크린샷 2023-10-25 오후 8.51.33.png":"school/assets/스크린샷-2023-10-25-오후-8.51.33.html","school/assets/스크린샷 2023-10-25 오후 8.53.34.png":"school/assets/스크린샷-2023-10-25-오후-8.53.34.html","school/assets/스크린샷 2023-10-25 오후 9.19.26.png":"school/assets/스크린샷-2023-10-25-오후-9.19.26.html","school/assets/스크린샷 2023-10-26 오전 10.09.50.png":"school/assets/스크린샷-2023-10-26-오전-10.09.50.html","school/assets/스크린샷 2023-11-22 오전 10.53.12.png":"school/assets/스크린샷-2023-11-22-오전-10.53.12.html","school/assets/스크린샷 2023-11-22 오전 11.36.20.png":"school/assets/스크린샷-2023-11-22-오전-11.36.20.html","school/assets/스크린샷 2023-11-22 오후 2.28.35.png":"school/assets/스크린샷-2023-11-22-오후-2.28.35.html","school/assets/스크린샷 2023-11-22 오후 12.39.45.png":"school/assets/스크린샷-2023-11-22-오후-12.39.45.html","school/assets/스크린샷 2024-05-15 오후 2.29.57.png":"school/assets/스크린샷-2024-05-15-오후-2.29.57.html","school/assets/it응용기초 - 기말-20240620013843418.png":"school/assets/it응용기초-기말-20240620013843418.html","school/assets/it응용기초 - 기말-20240620025548979.png":"school/assets/it응용기초-기말-20240620025548979.html","school/assets/it응용기초 - 기말-20240620032652404.png":"school/assets/it응용기초-기말-20240620032652404.html","school/assets/it응용기초 - 기말-20240620113444099.png":"school/assets/it응용기초-기말-20240620113444099.html","school/assets/KakaoTalk_Photo_2023-10-31-15-51-01.jpeg":"school/assets/kakaotalk_photo_2023-10-31-15-51-01.html","school/assets/KakaoTalk_Photo_2023-10-31-15-59-04.jpeg":"school/assets/kakaotalk_photo_2023-10-31-15-59-04.html","school/assets/KakaoTalk_Photo_2023-10-31-16-20-02.jpeg":"school/assets/kakaotalk_photo_2023-10-31-16-20-02.html","school/assets/KakaoTalk_Photo_2023-11-02-15-36-07 001.jpeg":"school/assets/kakaotalk_photo_2023-11-02-15-36-07-001.html","school/assets/KakaoTalk_Photo_2023-11-02-15-36-08 002.jpeg":"school/assets/kakaotalk_photo_2023-11-02-15-36-08-002.html","school/assets/KakaoTalk_Photo_2023-11-02-15-38-49 1.jpeg":"school/assets/kakaotalk_photo_2023-11-02-15-38-49-1.html","school/assets/KakaoTalk_Photo_2023-11-02-15-52-26 001.jpeg":"school/assets/kakaotalk_photo_2023-11-02-15-52-26-001.html","school/assets/KakaoTalk_Photo_2023-11-02-15-52-26 002.jpeg":"school/assets/kakaotalk_photo_2023-11-02-15-52-26-002.html","school/assets/KakaoTalk_Photo_2023-11-02-15-59-06.jpeg":"school/assets/kakaotalk_photo_2023-11-02-15-59-06.html","school/assets/KakaoTalk_Photo_2023-11-02-16-10-54 001 1.jpeg":"school/assets/kakaotalk_photo_2023-11-02-16-10-54-001-1.html","school/assets/KakaoTalk_Photo_2023-11-02-16-10-54 002 1.jpeg":"school/assets/kakaotalk_photo_2023-11-02-16-10-54-002-1.html","school/assets/KakaoTalk_Photo_2023-11-02-16-20-28.jpeg":"school/assets/kakaotalk_photo_2023-11-02-16-20-28.html","school/assets/Pasted image 20231018133545.png":"school/assets/pasted-image-20231018133545.html","school/assets/Pasted image 20231018134217.png":"school/assets/pasted-image-20231018134217.html","school/assets/Pasted image 20231018140914.png":"school/assets/pasted-image-20231018140914.html","school/assets/Pasted image 20231018141251.png":"school/assets/pasted-image-20231018141251.html","school/assets/Pasted image 20231018141320.png":"school/assets/pasted-image-20231018141320.html","school/assets/Pasted image 20231021131728.png":"school/assets/pasted-image-20231021131728.html","school/assets/Pasted image 20231025131210.png":"school/assets/pasted-image-20231025131210.html","school/assets/Pasted image 20231025193854.png":"school/assets/pasted-image-20231025193854.html","school/assets/Pasted image 20231025202416.png":"school/assets/pasted-image-20231025202416.html","school/assets/Pasted image 20231025203200.png":"school/assets/pasted-image-20231025203200.html","school/assets/Pasted image 20231025203433.png":"school/assets/pasted-image-20231025203433.html","school/assets/Pasted image 20231025205730.png":"school/assets/pasted-image-20231025205730.html","school/assets/Pasted image 20231025210002.png":"school/assets/pasted-image-20231025210002.html","school/assets/Pasted image 20231025210436.png":"school/assets/pasted-image-20231025210436.html","school/assets/Pasted image 20231025210532.png":"school/assets/pasted-image-20231025210532.html","school/assets/Pasted image 20231025210756.png":"school/assets/pasted-image-20231025210756.html","school/assets/Pasted image 20231025210952.png":"school/assets/pasted-image-20231025210952.html","school/assets/Pasted image 20231025211756.png":"school/assets/pasted-image-20231025211756.html","school/assets/Pasted image 20231026085341.png":"school/assets/pasted-image-20231026085341.html","school/assets/Pasted image 20231026101525.png":"school/assets/pasted-image-20231026101525.html","school/assets/Pasted image 20231026103110.png":"school/assets/pasted-image-20231026103110.html","school/assets/Pasted image 20231122112718.png":"school/assets/pasted-image-20231122112718.html","school/assets/Pasted image 20240424212253.png":"school/assets/pasted-image-20240424212253.html","school/assets/Pasted image 20240424223414.png":"school/assets/pasted-image-20240424223414.html","school/assets/Pasted image 20240515142219.png":"school/assets/pasted-image-20240515142219.html","school/DB2/assets/DB2 기말 - 관계-20240619021529744.png":"school/db2/assets/db2-기말-관계-20240619021529744.html","school/DB2/assets/DB2 기말 - 관계-20240619021858740.png":"school/db2/assets/db2-기말-관계-20240619021858740.html","school/DB2/assets/DB2 기말 - 관계-20240619022428660.png":"school/db2/assets/db2-기말-관계-20240619022428660.html","school/DB2/assets/DB2 기말 - 관계-20240619023419298.png":"school/db2/assets/db2-기말-관계-20240619023419298.html","school/DB2/assets/DB2 기말 - 관계-20240619023825463.png":"school/db2/assets/db2-기말-관계-20240619023825463.html","school/DB2/assets/DB2 기말 - 관계-20240619025735390.png":"school/db2/assets/db2-기말-관계-20240619025735390.html","school/DB2/assets/DB2 기말 - 관계-20240619031250428.png":"school/db2/assets/db2-기말-관계-20240619031250428.html","school/DB2/assets/DB2 기말 - 관계-20240619032318049.png":"school/db2/assets/db2-기말-관계-20240619032318049.html","school/DB2/assets/DB2 기말 - 관계-20240619032718103.png":"school/db2/assets/db2-기말-관계-20240619032718103.html","school/DB2/assets/DB2 기말 - 관계-20240619032845332.png":"school/db2/assets/db2-기말-관계-20240619032845332.html","school/DB2/assets/DB2 기말 - 관계-20240619033256291.png":"school/db2/assets/db2-기말-관계-20240619033256291.html","school/DB2/assets/DB2 기말 - 관계-20240619033413882.png":"school/db2/assets/db2-기말-관계-20240619033413882.html","school/DB2/assets/DB2 기말 - 관계-20240619074124440.png":"school/db2/assets/db2-기말-관계-20240619074124440.html","school/DB2/assets/DB2 기말 - 관계-20240619074855103.png":"school/db2/assets/db2-기말-관계-20240619074855103.html","school/DB2/assets/DB2 기말 - 관계-20240619075448474.png":"school/db2/assets/db2-기말-관계-20240619075448474.html","school/DB2/assets/DB2 기말 - 관계-20240619075543566.png":"school/db2/assets/db2-기말-관계-20240619075543566.html","school/DB2/assets/DB2 기말-20240616174817943.png":"school/db2/assets/db2-기말-20240616174817943.html","school/DB2/assets/Pasted image 20240421022139.png":"school/db2/assets/pasted-image-20240421022139.html","school/DB2/assets/Pasted image 20240421022345.png":"school/db2/assets/pasted-image-20240421022345.html","school/DB2/assets/Pasted image 20240421022428.png":"school/db2/assets/pasted-image-20240421022428.html","school/DB2/assets/Pasted image 20240421022617.png":"school/db2/assets/pasted-image-20240421022617.html","school/DB2/assets/Pasted image 20240421023050.png":"school/db2/assets/pasted-image-20240421023050.html","school/DB2/ㅇㅇ.md":"school/db2/ㅇㅇ.html","school/DB2/DB2 기말.md":"school/db2/db2-기말.html","school/DB2/DB2 중간고사-1(설계전 이론).md":"school/db2/db2-중간고사-1(설계전-이론).html","school/DB2/DB2 중간고사-2(설계절차).md":"school/db2/db2-중간고사-2(설계절차).html","school/고토 시험 - 의산문답.md":"school/고토-시험-의산문답.html","school/고토 시험 - 조선상고사.md":"school/고토-시험-조선상고사.html","school/고토 토론 근거.md":"school/고토-토론-근거.html","school/컴사인.md":"school/컴사인.html","school/컴사인 1.md":"school/컴사인-1.html","school/컴사인 기말.md":"school/컴사인-기말.html","school/it응용공기초 - 중간.md":"school/it응용공기초-중간.html","school/it응용기초 - 기말.md":"school/it응용기초-기말.html","school/it응용기초 기말퀴즈.md":"school/it응용기초-기말퀴즈.html","web/공식문서/react_공식문서를 나의 말로...md":"web/공식문서/react_공식문서를-나의-말로...html","web/공식문서/vite.md":"web/공식문서/vite.html","web/assets/Pasted image 20231114151038.png":"web/assets/pasted-image-20231114151038.html","web/assets/Pasted image 20240628175728.png":"web/assets/pasted-image-20240628175728.html","web/assets/Pasted image 20240701112747.png":"web/assets/pasted-image-20240701112747.html","web/assets/Pasted image 20240701114022.png":"web/assets/pasted-image-20240701114022.html","web/assets/Pasted image 20240701114052.png":"web/assets/pasted-image-20240701114052.html","web/assets/Pasted image 20240702095610.png":"web/assets/pasted-image-20240702095610.html","web/assets/vue_정리-20240627140705844.png":"web/assets/vue_정리-20240627140705844.html","web/assets/vue-20240627101400036.png":"web/assets/vue-20240627101400036.html","web/vue/assets/Pasted image 20240702135541.png":"web/vue/assets/pasted-image-20240702135541.html","web/vue/assets/Pasted image 20240702135910.png":"web/vue/assets/pasted-image-20240702135910.html","web/vue/assets/Pasted image 20240821112059.png":"web/vue/assets/pasted-image-20240821112059.html","web/vue/assets/Pasted image 20240821112757.png":"web/vue/assets/pasted-image-20240821112757.html","web/vue/무제 파일.md":"web/vue/무제-파일.html","web/vue/할일.md":"web/vue/할일.html","web/vue/햇갈렷던것.. 반응성관련.md":"web/vue/햇갈렷던것..-반응성관련.html","web/vue/vue 문서들.md":"web/vue/vue-문서들.html","web/vue/vue_기록.md":"web/vue/vue_기록.html","web/vue/vue_재사용성.md":"web/vue/vue_재사용성.html","web/vue/vue_ref,reactive.md":"web/vue/vue_ref,reactive.html","web/vue/vue_router.md":"web/vue/vue_router.html","web/vue/vue_SFC 기본구조.md":"web/vue/vue_sfc-기본구조.html","web/vue/vue_test_jest.md":"web/vue/vue_test_jest.html","web/vue/vue2_기본정리.md":"web/vue/vue2_기본정리.html","web/vue/vue3_Composition.md":"web/vue/vue3_composition.html","web/vue/vue의 상태관리툴.md":"web/vue/vue의-상태관리툴.html","web/3d.md":"web/3d.html","web/디자인 라이브러리.md":"web/디자인-라이브러리.html","web/상태처리 리액트&뷰.md":"web/상태처리-리액트&뷰.html","web/웹 렌더링 형태.md":"web/웹-렌더링-형태.html","web/웹팩.md":"web/웹팩.html","web/좋은말.md":"web/좋은말.html","web/CSS.md":"web/css.html","web/defer.md":"web/defer.html","web/electron vs tauri.md":"web/electron-vs-tauri.html","web/headless 컴포넌트.md":"web/headless-컴포넌트.html","web/hook 렌더링 최적화.md":"web/hook-렌더링-최적화.html","web/js_ proxy&defineproperty.md":"web/js_-proxy&defineproperty.html","web/next.js.md":"web/next.js.html","web/nodejs nginx vite tomcat.md":"web/nodejs-nginx-vite-tomcat.html","web/react 폴더 구조.md":"web/react-폴더-구조.html","web/REACT_REF.md":"web/react_ref.html","web/react-query.md":"web/react-query.html","web/redux toolkit.md":"web/redux-toolkit.html","web/Suspense.md":"web/suspense.html","web/vanilla js.md":"web/vanilla-js.html","":"site-lib/rss.xml","home.md":"home.html","99-Settings/1-Topics/📖 100 데이터 분석 & AI.md":"99-settings/1-topics/📖-100-데이터-분석-&-ai.html","99-Settings/1-Topics/📖 200 웹 개발.md":"99-settings/1-topics/📖-200-웹-개발.html","99-Settings/1-Topics/📖 300 백엔드 개발.md":"99-settings/1-topics/📖-300-백엔드-개발.html","99-Settings/1-Topics/📖 400 인프라 & 아키텍처.md":"99-settings/1-topics/📖-400-인프라-&-아키텍처.html","99-Settings/1-Topics/📖 500 모바일 개발.md":"99-settings/1-topics/📖-500-모바일-개발.html","99-Settings/1-Topics/📖 600 알고리즘 & 코딩테스트.md":"99-settings/1-topics/📖-600-알고리즘-&-코딩테스트.html","99-Settings/1-Topics/📖 700 컴퓨터 과학.md":"99-settings/1-topics/📖-700-컴퓨터-과학.html","99-Settings/1-Topics/📖 800 프로젝트.md":"99-settings/1-topics/📖-800-프로젝트.html","99-Settings/1-Topics/📖 900 기타.md":"99-settings/1-topics/📖-900-기타.html","99-Settings/1-Topics/📚 101 머신러닝.md":"99-settings/1-topics/📚-101-머신러닝.html","99-Settings/1-Topics/📚 102 딥러닝.md":"99-settings/1-topics/📚-102-딥러닝.html","99-Settings/1-Topics/📚 103 데이터 모델링.md":"99-settings/1-topics/📚-103-데이터-모델링.html","99-Settings/1-Topics/📚 104 통계 분석.md":"99-settings/1-topics/📚-104-통계-분석.html","99-Settings/1-Topics/📚 105 캐글.md":"99-settings/1-topics/📚-105-캐글.html","99-Settings/1-Topics/📚 106 LLM & AI.md":"99-settings/1-topics/📚-106-llm-&-ai.html","99-Settings/1-Topics/📚 107 인공신경망.md":"99-settings/1-topics/📚-107-인공신경망.html","99-Settings/1-Topics/📚 108 의사결정나무.md":"99-settings/1-topics/📚-108-의사결정나무.html","99-Settings/1-Topics/📚 109 연관성 분석.md":"99-settings/1-topics/📚-109-연관성-분석.html","99-Settings/1-Topics/📚 201 React.md":"99-settings/1-topics/📚-201-react.html","99-Settings/1-Topics/📚 202 Vue.js.md":"99-settings/1-topics/📚-202-vue.js.html","99-Settings/1-Topics/📚 203 Next.js.md":"99-settings/1-topics/📚-203-next.js.html","99-Settings/1-Topics/📚 204 Node.js.md":"99-settings/1-topics/📚-204-node.js.html","99-Settings/1-Topics/📚 205 웹팩 & 빌드.md":"99-settings/1-topics/📚-205-웹팩-&-빌드.html","99-Settings/1-Topics/📚 206 상태관리.md":"99-settings/1-topics/📚-206-상태관리.html","99-Settings/1-Topics/📚 207 CSS & 스타일링.md":"99-settings/1-topics/📚-207-css-&-스타일링.html","99-Settings/1-Topics/📚 208 웹 렌더링.md":"99-settings/1-topics/📚-208-웹-렌더링.html","99-Settings/1-Topics/📚 209 3D 웹.md":"99-settings/1-topics/📚-209-3d-웹.html","99-Settings/1-Topics/📚 210 Electron & Tauri.md":"99-settings/1-topics/📚-210-electron-&-tauri.html","99-Settings/1-Topics/📚 301 Spring.md":"99-settings/1-topics/📚-301-spring.html","99-Settings/1-Topics/📚 302 Django.md":"99-settings/1-topics/📚-302-django.html","99-Settings/1-Topics/📚 303 FastAPI.md":"99-settings/1-topics/📚-303-fastapi.html","99-Settings/1-Topics/📚 304 Express.js.md":"99-settings/1-topics/📚-304-express.js.html","99-Settings/1-Topics/📚 305 데이터베이스.md":"99-settings/1-topics/📚-305-데이터베이스.html","99-Settings/1-Topics/📚 306 API 설계.md":"99-settings/1-topics/📚-306-api-설계.html","99-Settings/1-Topics/📚 307 인증 & 보안.md":"99-settings/1-topics/📚-307-인증-&-보안.html","99-Settings/1-Topics/📚 401 Docker & Kubernetes.md":"99-settings/1-topics/📚-401-docker-&-kubernetes.html","99-Settings/1-Topics/📚 402 AWS & 클라우드.md":"99-settings/1-topics/📚-402-aws-&-클라우드.html","99-Settings/1-Topics/📚 403 시스템 설계.md":"99-settings/1-topics/📚-403-시스템-설계.html","99-Settings/1-Topics/📚 404 마이크로서비스.md":"99-settings/1-topics/📚-404-마이크로서비스.html","99-Settings/1-Topics/📚 405 모니터링 & 로깅.md":"99-settings/1-topics/📚-405-모니터링-&-로깅.html","99-Settings/1-Topics/📚 406 CI-CD.md":"99-settings/1-topics/📚-406-ci-cd.html","99-Settings/1-Topics/📚 407 네트워크 & 보안.md":"99-settings/1-topics/📚-407-네트워크-&-보안.html","99-Settings/1-Topics/📚 408 스케일링.md":"99-settings/1-topics/📚-408-스케일링.html","99-Settings/1-Topics/📚 501 Flutter.md":"99-settings/1-topics/📚-501-flutter.html","99-Settings/1-Topics/📚 502 Android.md":"99-settings/1-topics/📚-502-android.html","99-Settings/1-Topics/📚 503 Dart.md":"99-settings/1-topics/📚-503-dart.html","99-Settings/1-Topics/📚 504 Riverpod.md":"99-settings/1-topics/📚-504-riverpod.html","99-Settings/1-Topics/📚 505 상태관리.md":"99-settings/1-topics/📚-505-상태관리.html","99-Settings/1-Topics/📚 506 네트워킹.md":"99-settings/1-topics/📚-506-네트워킹.html","99-Settings/1-Topics/📚 507 빌드 & 배포.md":"99-settings/1-topics/📚-507-빌드-&-배포.html","99-Settings/1-Topics/📚 601 구현 & 완전탐색.md":"99-settings/1-topics/📚-601-구현-&-완전탐색.html","99-Settings/1-Topics/📚 602 그리디.md":"99-settings/1-topics/📚-602-그리디.html","99-Settings/1-Topics/📚 603 다이나믹프로그래밍.md":"99-settings/1-topics/📚-603-다이나믹프로그래밍.html","99-Settings/1-Topics/📚 604 최단경로.md":"99-settings/1-topics/📚-604-최단경로.html","99-Settings/1-Topics/📚 605 비트연산 & 비트마스킹.md":"99-settings/1-topics/📚-605-비트연산-&-비트마스킹.html","99-Settings/1-Topics/📚 606 세그먼트트리.md":"99-settings/1-topics/📚-606-세그먼트트리.html","99-Settings/1-Topics/📚 607 슬라이딩윈도우.md":"99-settings/1-topics/📚-607-슬라이딩윈도우.html","99-Settings/1-Topics/📚 608 위상정렬.md":"99-settings/1-topics/📚-608-위상정렬.html","99-Settings/1-Topics/📚 609 유니온파인드.md":"99-settings/1-topics/📚-609-유니온파인드.html","99-Settings/1-Topics/📚 610 이진탐색.md":"99-settings/1-topics/📚-610-이진탐색.html","99-Settings/1-Topics/📚 611 정렬.md":"99-settings/1-topics/📚-611-정렬.html","99-Settings/1-Topics/📚 612 최소신장트리.md":"99-settings/1-topics/📚-612-최소신장트리.html","99-Settings/1-Topics/📚 613 BFS & DFS.md":"99-settings/1-topics/📚-613-bfs-&-dfs.html","99-Settings/1-Topics/📚 614 그래프.md":"99-settings/1-topics/📚-614-그래프.html","99-Settings/1-Topics/📚 615 정렬알고리즘.md":"99-settings/1-topics/📚-615-정렬알고리즘.html","99-Settings/1-Topics/📚 616 Python.md":"99-settings/1-topics/📚-616-python.html","99-Settings/1-Topics/📚 617 Java.md":"99-settings/1-topics/📚-617-java.html","99-Settings/1-Topics/📚 701 디자인패턴.md":"99-settings/1-topics/📚-701-디자인패턴.html","99-Settings/1-Topics/📚 702 네트워크.md":"99-settings/1-topics/📚-702-네트워크.html","99-Settings/1-Topics/📚 703 데이터베이스.md":"99-settings/1-topics/📚-703-데이터베이스.html","99-Settings/1-Topics/📚 704 운영체제.md":"99-settings/1-topics/📚-704-운영체제.html","99-Settings/1-Topics/📚 705 보안.md":"99-settings/1-topics/📚-705-보안.html","99-Settings/1-Topics/📚 706 시스템 설계.md":"99-settings/1-topics/📚-706-시스템-설계.html","99-Settings/1-Topics/📚 801 다 맡게팅.md":"99-settings/1-topics/📚-801-다-맡게팅.html","99-Settings/2-Index/🏷️ 데일리 노트.md":"99-settings/2-index/🏷️-데일리-노트.html","99-Settings/2-Index/🏷️ 도구.md":"99-settings/2-index/🏷️-도구.html","99-Settings/2-Index/🏷️ 레퍼런스.md":"99-settings/2-index/🏷️-레퍼런스.html","99-Settings/2-Index/🏷️ 리뷰.md":"99-settings/2-index/🏷️-리뷰.html","99-Settings/2-Index/🏷️ 실습.md":"99-settings/2-index/🏷️-실습.html","99-Settings/2-Index/🏷️ 에러 해결.md":"99-settings/2-index/🏷️-에러-해결.html","99-Settings/2-Index/🏷️ 이론.md":"99-settings/2-index/🏷️-이론.html","99-Settings/2-Index/🏷️ 자격증.md":"99-settings/2-index/🏷️-자격증.html","99-Settings/2-Index/🏷️ 최적화.md":"99-settings/2-index/🏷️-최적화.html","99-Settings/2-Index/🏷️ 취업.md":"99-settings/2-index/🏷️-취업.html","99-Settings/2-Index/🏷️ 프로젝트.md":"99-settings/2-index/🏷️-프로젝트.html","99-Settings/2-Index/🏷️ 학교.md":"99-settings/2-index/🏷️-학교.html","99-Settings/2-Index/🏷️ 학습.md":"99-settings/2-index/🏷️-학습.html","99-Settings/2-Index/🏷️ 회사.md":"99-settings/2-index/🏷️-회사.html","99-Settings/2-Index/🏷️ TODO.md":"99-settings/2-index/🏷️-todo.html","100-데이터분석 & AI/캐글/주식,코인 시계열 데이터 분석에서 Ridge, XGBoost 추천 옵션 및 전략.md":"100-데이터분석-&-ai/캐글/주식,코인-시계열-데이터-분석에서-ridge,-xgboost-추천-옵션-및-전략.html","100-데이터분석 & AI/캐글/캐글준비.md":"100-데이터분석-&-ai/캐글/캐글준비.html","100-데이터분석 & AI/캐글/eda.md":"100-데이터분석-&-ai/캐글/eda.html","100-데이터분석 & AI/캐글/result.md":"100-데이터분석-&-ai/캐글/result.html","100-데이터분석 & AI/캐글/Untitled.md":"100-데이터분석-&-ai/캐글/untitled.html","100-데이터분석 & AI/캐글/Untitled 1.md":"100-데이터분석-&-ai/캐글/untitled-1.html","100-데이터분석 & AI/assets/데이터모델링-20250407100415854.png":"100-데이터분석-&-ai/assets/데이터모델링-20250407100415854.html","100-데이터분석 & AI/개발 방법론.md":"100-데이터분석-&-ai/개발-방법론.html","100-데이터분석 & AI/데이터모델링.md":"100-데이터분석-&-ai/데이터모델링.html","100-데이터분석 & AI/딥러닝.md":"100-데이터분석-&-ai/딥러닝.html","100-데이터분석 & AI/모델성능최적화.md":"100-데이터분석-&-ai/모델성능최적화.html","100-데이터분석 & AI/분석.md":"100-데이터분석-&-ai/분석.html","100-데이터분석 & AI/신경망.md":"100-데이터분석-&-ai/신경망.html","100-데이터분석 & AI/연관성 분석.md":"100-데이터분석-&-ai/연관성-분석.html","100-데이터분석 & AI/의사결정나무.md":"100-데이터분석-&-ai/의사결정나무.html","100-데이터분석 & AI/인공신경망(ANN).md":"100-데이터분석-&-ai/인공신경망(ann).html","100-데이터분석 & AI/인공지능(AI).md":"100-데이터분석-&-ai/인공지능(ai).html","100-데이터분석 & AI/자료 형태에 따른분석.md":"100-데이터분석-&-ai/자료-형태에-따른분석.html","100-데이터분석 & AI/카이제곱.md":"100-데이터분석-&-ai/카이제곱.html","100-데이터분석 & AI/평가.md":"100-데이터분석-&-ai/평가.html","100-데이터분석 & AI/ai 기본 코드.md":"100-데이터분석-&-ai/ai-기본-코드.html","100-데이터분석 & AI/callback ,함수 체이닝 차이.md":"100-데이터분석-&-ai/callback-,함수-체이닝-차이.html","100-데이터분석 & AI/LLM이 복잡해질수록 정답률이 0에 가까워진다는 논문 설명.md":"100-데이터분석-&-ai/llm이-복잡해질수록-정답률이-0에-가까워진다는-논문-설명.html","100-데이터분석 & AI/p-value.md":"100-데이터분석-&-ai/p-value.html","100-데이터분석 & AI/runnable.md":"100-데이터분석-&-ai/runnable.html","200-웹개발/공식문서/react_공식문서를 나의 말로...md":"200-웹개발/공식문서/react_공식문서를-나의-말로...html","200-웹개발/공식문서/vite.md":"200-웹개발/공식문서/vite.html","200-웹개발/assets/스크린샷 2023-10-18 오후 8.12.58.png":"200-웹개발/assets/스크린샷-2023-10-18-오후-8.12.58.html","200-웹개발/assets/Pasted image 20231114151038.png":"200-웹개발/assets/pasted-image-20231114151038.html","200-웹개발/assets/Pasted image 20240628175728.png":"200-웹개발/assets/pasted-image-20240628175728.html","200-웹개발/assets/Pasted image 20240701112747.png":"200-웹개발/assets/pasted-image-20240701112747.html","200-웹개발/assets/Pasted image 20240701114022.png":"200-웹개발/assets/pasted-image-20240701114022.html","200-웹개발/assets/Pasted image 20240701114052.png":"200-웹개발/assets/pasted-image-20240701114052.html","200-웹개발/assets/Pasted image 20240702095610.png":"200-웹개발/assets/pasted-image-20240702095610.html","200-웹개발/assets/vue_정리-20240627140705844.png":"200-웹개발/assets/vue_정리-20240627140705844.html","200-웹개발/assets/vue-20240627101400036.png":"200-웹개발/assets/vue-20240627101400036.html","200-웹개발/vue/assets/Pasted image 20240702135541.png":"200-웹개발/vue/assets/pasted-image-20240702135541.html","200-웹개발/vue/assets/Pasted image 20240702135910.png":"200-웹개발/vue/assets/pasted-image-20240702135910.html","200-웹개발/vue/assets/Pasted image 20240821112059.png":"200-웹개발/vue/assets/pasted-image-20240821112059.html","200-웹개발/vue/assets/Pasted image 20240821112757.png":"200-웹개발/vue/assets/pasted-image-20240821112757.html","200-웹개발/vue/무제 파일.md":"200-웹개발/vue/무제-파일.html","200-웹개발/vue/할일.md":"200-웹개발/vue/할일.html","200-웹개발/vue/햇갈렷던것.. 반응성관련.md":"200-웹개발/vue/햇갈렷던것..-반응성관련.html","200-웹개발/vue/vue 문서들.md":"200-웹개발/vue/vue-문서들.html","200-웹개발/vue/vue_기록.md":"200-웹개발/vue/vue_기록.html","200-웹개발/vue/vue_재사용성.md":"200-웹개발/vue/vue_재사용성.html","200-웹개발/vue/vue_ref,reactive.md":"200-웹개발/vue/vue_ref,reactive.html","200-웹개발/vue/vue_router.md":"200-웹개발/vue/vue_router.html","200-웹개발/vue/vue_SFC 기본구조.md":"200-웹개발/vue/vue_sfc-기본구조.html","200-웹개발/vue/vue_test_jest.md":"200-웹개발/vue/vue_test_jest.html","200-웹개발/vue/vue2_기본정리.md":"200-웹개발/vue/vue2_기본정리.html","200-웹개발/vue/vue3_Composition.md":"200-웹개발/vue/vue3_composition.html","200-웹개발/vue/vue의 상태관리툴.md":"200-웹개발/vue/vue의-상태관리툴.html","200-웹개발/3d.md":"200-웹개발/3d.html","200-웹개발/디자인 라이브러리.md":"200-웹개발/디자인-라이브러리.html","200-웹개발/상태처리 리액트&뷰.md":"200-웹개발/상태처리-리액트&뷰.html","200-웹개발/웹 렌더링 형태.md":"200-웹개발/웹-렌더링-형태.html","200-웹개발/웹팩.md":"200-웹개발/웹팩.html","200-웹개발/좋은말.md":"200-웹개발/좋은말.html","200-웹개발/CSS.md":"200-웹개발/css.html","200-웹개발/defer.md":"200-웹개발/defer.html","200-웹개발/electron vs tauri.md":"200-웹개발/electron-vs-tauri.html","200-웹개발/headless 컴포넌트.md":"200-웹개발/headless-컴포넌트.html","200-웹개발/hook 렌더링 최적화.md":"200-웹개발/hook-렌더링-최적화.html","200-웹개발/js_ proxy&defineproperty.md":"200-웹개발/js_-proxy&defineproperty.html","200-웹개발/js) math.md":"200-웹개발/js)-math.html","200-웹개발/next.js.md":"200-웹개발/next.js.html","200-웹개발/nodejs nginx vite tomcat.md":"200-웹개발/nodejs-nginx-vite-tomcat.html","200-웹개발/react 폴더 구조.md":"200-웹개발/react-폴더-구조.html","200-웹개발/REACT_REF.md":"200-웹개발/react_ref.html","200-웹개발/react-query.md":"200-웹개발/react-query.html","200-웹개발/redux toolkit.md":"200-웹개발/redux-toolkit.html","200-웹개발/Suspense.md":"200-웹개발/suspense.html","200-웹개발/vanilla js.md":"200-웹개발/vanilla-js.html","300-백엔드개발/assets/스프링 DB 접근-1748788030972.png":"300-백엔드개발/assets/스프링-db-접근-1748788030972.html","300-백엔드개발/assets/아키텍처-1747921913860.png":"300-백엔드개발/assets/아키텍처-1747921913860.html","300-백엔드개발/assets/애자일-1749384475904.png":"300-백엔드개발/assets/애자일-1749384475904.html","300-백엔드개발/assets/Aggregate-1749754173915.png":"300-백엔드개발/assets/aggregate-1749754173915.html","300-백엔드개발/assets/biz,dev,ops-1749383255427.png":"300-백엔드개발/assets/biz,dev,ops-1749383255427.html","300-백엔드개발/assets/biz,dev,ops-1749384334755.png":"300-백엔드개발/assets/biz,dev,ops-1749384334755.html","300-백엔드개발/assets/db 영속성과 저장-1751787526152.png":"300-백엔드개발/assets/db-영속성과-저장-1751787526152.html","300-백엔드개발/assets/docker-1751777737123.png":"300-백엔드개발/assets/docker-1751777737123.html","300-백엔드개발/assets/k8s-1751779119042.png":"300-백엔드개발/assets/k8s-1751779119042.html","300-백엔드개발/assets/k8s,kafka,msa와의 관계-1751777362953.png":"300-백엔드개발/assets/k8s,kafka,msa와의-관계-1751777362953.html","300-백엔드개발/assets/msa-1749455998102.png":"300-백엔드개발/assets/msa-1749455998102.html","300-백엔드개발/assets/msa-1749544836042.png":"300-백엔드개발/assets/msa-1749544836042.html","300-백엔드개발/assets/msa-1749752615566.png":"300-백엔드개발/assets/msa-1749752615566.html","300-백엔드개발/assets/msa-1749752634954.png":"300-백엔드개발/assets/msa-1749752634954.html","300-백엔드개발/assets/msa-1749752670525.png":"300-백엔드개발/assets/msa-1749752670525.html","300-백엔드개발/assets/msa-1749753255535.png":"300-백엔드개발/assets/msa-1749753255535.html","300-백엔드개발/assets/msa설계-1750876404713.png":"300-백엔드개발/assets/msa설계-1750876404713.html","300-백엔드개발/assets/msa설계-1750876609108.png":"300-백엔드개발/assets/msa설계-1750876609108.html","300-백엔드개발/assets/msa설계-1750880282832.png":"300-백엔드개발/assets/msa설계-1750880282832.html","300-백엔드개발/assets/msa전체적인 구조-1751776935880.png":"300-백엔드개발/assets/msa전체적인-구조-1751776935880.html","300-백엔드개발/assets/Spring MVC-1748447479487.png":"300-백엔드개발/assets/spring-mvc-1748447479487.html","300-백엔드개발/assets/Spring MVC-1748452533042.png":"300-백엔드개발/assets/spring-mvc-1748452533042.html","300-백엔드개발/assets/webflux vs mvc-1757788425212.png":"300-백엔드개발/assets/webflux-vs-mvc-1757788425212.html","300-백엔드개발/assets/webflux vs mvc-1757788537542.png":"300-백엔드개발/assets/webflux-vs-mvc-1757788537542.html","300-백엔드개발/스프링 부트 모니터링, 보안설정.md":"300-백엔드개발/스프링-부트-모니터링,-보안설정.html","300-백엔드개발/스프링 부트(spring boot).md":"300-백엔드개발/스프링-부트(spring-boot).html","300-백엔드개발/스프링 프레임워크 기본(spring).md":"300-백엔드개발/스프링-프레임워크-기본(spring).html","300-백엔드개발/스프링 DB 접근.md":"300-백엔드개발/스프링-db-접근.html","300-백엔드개발/스프링부트 내장 서버 역활과 특징.md":"300-백엔드개발/스프링부트-내장-서버-역활과-특징.html","300-백엔드개발/스프링부트주요사용법.md":"300-백엔드개발/스프링부트주요사용법.html","300-백엔드개발/시ㄹ행과정.md":"300-백엔드개발/시ㄹ행과정.html","300-백엔드개발/애자일.md":"300-백엔드개발/애자일.html","300-백엔드개발/이벤트 기반 아키텍처(EDA)의 정합성.md":"300-백엔드개발/이벤트-기반-아키텍처(eda)의-정합성.html","300-백엔드개발/자바에서의 컨테이너.md":"300-백엔드개발/자바에서의-컨테이너.html","300-백엔드개발/컨테이너 런타임.md":"300-백엔드개발/컨테이너-런타임.html","300-백엔드개발/Aggregate.md":"300-백엔드개발/aggregate.html","300-백엔드개발/Apache VS Nginx VS Tomcat.md":"300-백엔드개발/apache-vs-nginx-vs-tomcat.html","300-백엔드개발/db 영속성과 저장.md":"300-백엔드개발/db-영속성과-저장.html","300-백엔드개발/docker.md":"300-백엔드개발/docker.html","300-백엔드개발/explain.md":"300-백엔드개발/explain.html","300-백엔드개발/filter, servlet.md":"300-백엔드개발/filter,-servlet.html","300-백엔드개발/Spring MVC.md":"300-백엔드개발/spring-mvc.html","300-백엔드개발/tomcat vs netty.md":"300-백엔드개발/tomcat-vs-netty.html","300-백엔드개발/webflux vs mvc 관련 의문점.md":"300-백엔드개발/webflux-vs-mvc-관련-의문점.html","400-인프라 & 아키텍처/assets/Cloud-1747744250912.png":"400-인프라-&-아키텍처/assets/cloud-1747744250912.html","400-인프라 & 아키텍처/도오커.md":"400-인프라-&-아키텍처/도오커.html","400-인프라 & 아키텍처/biz,dev,ops.md":"400-인프라-&-아키텍처/biz,dev,ops.html","400-인프라 & 아키텍처/Cloud.md":"400-인프라-&-아키텍처/cloud.html","400-인프라 & 아키텍처/Error - 장시간 요청 Cloudfront timeout.md":"400-인프라-&-아키텍처/error-장시간-요청-cloudfront-timeout.html","400-인프라 & 아키텍처/k8s.md":"400-인프라-&-아키텍처/k8s.html","400-인프라 & 아키텍처/k8s,kafka,msa,docker와의 관계.md":"400-인프라-&-아키텍처/k8s,kafka,msa,docker와의-관계.html","400-인프라 & 아키텍처/kafka.md":"400-인프라-&-아키텍처/kafka.html","400-인프라 & 아키텍처/msa.md":"400-인프라-&-아키텍처/msa.html","400-인프라 & 아키텍처/msa설계.md":"400-인프라-&-아키텍처/msa설계.html","400-인프라 & 아키텍처/msa전체적인 구조.md":"400-인프라-&-아키텍처/msa전체적인-구조.html","400-인프라 & 아키텍처/test.md":"400-인프라-&-아키텍처/test.html","500-모바일개발/android/assets/1_setting-20241221011941321.png":"500-모바일개발/android/assets/1_setting-20241221011941321.html","500-모바일개발/android/assets/1_setting-20241221013449422.png":"500-모바일개발/android/assets/1_setting-20241221013449422.html","500-모바일개발/android/assets/1_setting-20241221035822530.png":"500-모바일개발/android/assets/1_setting-20241221035822530.html","500-모바일개발/android/assets/2_기본구조-20241221025557132.png":"500-모바일개발/android/assets/2_기본구조-20241221025557132.html","500-모바일개발/android/assets/2_기본구조-20241221031015594.png":"500-모바일개발/android/assets/2_기본구조-20241221031015594.html","500-모바일개발/android/assets/2_기본구조-20241221031505580.png":"500-모바일개발/android/assets/2_기본구조-20241221031505580.html","500-모바일개발/android/assets/2_안드로이드 이해-20241221213455018.png":"500-모바일개발/android/assets/2_안드로이드-이해-20241221213455018.html","500-모바일개발/android/assets/3_코틀린-20241221220802352.png":"500-모바일개발/android/assets/3_코틀린-20241221220802352.html","500-모바일개발/android/assets/4_화면 구성-20241223010710073.png":"500-모바일개발/android/assets/4_화면-구성-20241223010710073.html","500-모바일개발/android/assets/4_화면 구성-20241224000559232.png":"500-모바일개발/android/assets/4_화면-구성-20241224000559232.html","500-모바일개발/android/assets/setting-20241219232030173.png":"500-모바일개발/android/assets/setting-20241219232030173.html","500-모바일개발/android/1_setting.md":"500-모바일개발/android/1_setting.html","500-모바일개발/android/2_안드로이드 이해.md":"500-모바일개발/android/2_안드로이드-이해.html","500-모바일개발/android/3_코틀린.md":"500-모바일개발/android/3_코틀린.html","500-모바일개발/android/4_화면 구성.md":"500-모바일개발/android/4_화면-구성.html","500-모바일개발/android/5_미래.md":"500-모바일개발/android/5_미래.html","500-모바일개발/assets/스크린샷 2024-03-16 오전 1.10.05.png":"500-모바일개발/assets/스크린샷-2024-03-16-오전-1.10.05.html","500-모바일개발/결과처리.md":"500-모바일개발/결과처리.html","500-모바일개발/네트워크 환경 체크.md":"500-모바일개발/네트워크-환경-체크.html","500-모바일개발/만들면서한 고민.md":"500-모바일개발/만들면서한-고민.html","500-모바일개발/빌드 관련명령어.md":"500-모바일개발/빌드-관련명령어.html","500-모바일개발/앱에서의 데이터 사용과 구현.md":"500-모바일개발/앱에서의-데이터-사용과-구현.html","500-모바일개발/키스토어 명령어들.md":"500-모바일개발/키스토어-명령어들.html","500-모바일개발/annotion.md":"500-모바일개발/annotion.html","500-모바일개발/AsyncValue vs AsyncData.md":"500-모바일개발/asyncvalue-vs-asyncdata.html","500-모바일개발/dart 3.0.md":"500-모바일개발/dart-3.0.html","500-모바일개발/enum.md":"500-모바일개발/enum.html","500-모바일개발/flavor 빌드 변형.md":"500-모바일개발/flavor-빌드-변형.html","500-모바일개발/flutter future.md":"500-모바일개발/flutter-future.html","500-모바일개발/flutter mvvm.md":"500-모바일개발/flutter-mvvm.html","500-모바일개발/freezed,JsonSerialiable.md":"500-모바일개발/freezed,jsonserialiable.html","500-모바일개발/gorouter 기본사용법.md":"500-모바일개발/gorouter-기본사용법.html","500-모바일개발/live templete.md":"500-모바일개발/live-templete.html","500-모바일개발/private, protected.md":"500-모바일개발/private,-protected.html","500-모바일개발/riverpod annotation.md":"500-모바일개발/riverpod-annotation.html","500-모바일개발/riverpod read listen.md":"500-모바일개발/riverpod-read-listen.html","500-모바일개발/user에 로딩 state가 있어야하는가!.md":"500-모바일개발/user에-로딩-state가-있어야하는가!.html","600-알고리즘 & 코딩테스트/assets/작성형식-20250220033159798.png":"600-알고리즘-&-코딩테스트/assets/작성형식-20250220033159798.html","600-알고리즘 & 코딩테스트/assets/graph-20240831020857057.png":"600-알고리즘-&-코딩테스트/assets/graph-20240831020857057.html","600-알고리즘 & 코딩테스트/assets/Pasted image 20240216101645.png":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216101645.html","600-알고리즘 & 코딩테스트/assets/Pasted image 20240216102426.png":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240216102426.html","600-알고리즘 & 코딩테스트/assets/Pasted image 20240716094012.png":"600-알고리즘-&-코딩테스트/assets/pasted-image-20240716094012.html","600-알고리즘 & 코딩테스트/concept/assets/테트리스, 퍼즐-20240904165402122.png":"600-알고리즘-&-코딩테스트/concept/assets/테트리스,-퍼즐-20240904165402122.html","600-알고리즘 & 코딩테스트/concept/테트리스, 퍼즐.md":"600-알고리즘-&-코딩테스트/concept/테트리스,-퍼즐.html","600-알고리즘 & 코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.png":"600-알고리즘-&-코딩테스트/problem/assets/b_평범한배낭_12865-20240906191158114.html","600-알고리즘 & 코딩테스트/problem/assets/p_지게차와 크레인_388353.md":"600-알고리즘-&-코딩테스트/problem/assets/p_지게차와-크레인_388353.html","600-알고리즘 & 코딩테스트/problem/assets/s_탑의 높이-20250207041323608.png":"600-알고리즘-&-코딩테스트/problem/assets/s_탑의-높이-20250207041323608.html","600-알고리즘 & 코딩테스트/problem/b_계단 오르기_2579.md":"600-알고리즘-&-코딩테스트/problem/b_계단-오르기_2579.html","600-알고리즘 & 코딩테스트/problem/b_공유기설치_2110.md":"600-알고리즘-&-코딩테스트/problem/b_공유기설치_2110.html","600-알고리즘 & 코딩테스트/problem/b_돌게임_9655.md":"600-알고리즘-&-코딩테스트/problem/b_돌게임_9655.html","600-알고리즘 & 코딩테스트/problem/b_등수구하기_1205.md":"600-알고리즘-&-코딩테스트/problem/b_등수구하기_1205.html","600-알고리즘 & 코딩테스트/problem/b_비밀번호발음하기_4659.md":"600-알고리즘-&-코딩테스트/problem/b_비밀번호발음하기_4659.html","600-알고리즘 & 코딩테스트/problem/b_비슷한단어_2607.md":"600-알고리즘-&-코딩테스트/problem/b_비슷한단어_2607.html","600-알고리즘 & 코딩테스트/problem/b_수레움직이기_250134.md":"600-알고리즘-&-코딩테스트/problem/b_수레움직이기_250134.html","600-알고리즘 & 코딩테스트/problem/b_쉬운 최단거리_14940.md":"600-알고리즘-&-코딩테스트/problem/b_쉬운-최단거리_14940.html","600-알고리즘 & 코딩테스트/problem/b_스위치켜고끄기_1244.md":"600-알고리즘-&-코딩테스트/problem/b_스위치켜고끄기_1244.html","600-알고리즘 & 코딩테스트/problem/b_에디터_1406.md":"600-알고리즘-&-코딩테스트/problem/b_에디터_1406.html","600-알고리즘 & 코딩테스트/problem/b_연산자 끼워넣기_14888.md":"600-알고리즘-&-코딩테스트/problem/b_연산자-끼워넣기_14888.html","600-알고리즘 & 코딩테스트/problem/b_예산_2512.md":"600-알고리즘-&-코딩테스트/problem/b_예산_2512.html","600-알고리즘 & 코딩테스트/problem/b_오목_2615.md":"600-알고리즘-&-코딩테스트/problem/b_오목_2615.html","600-알고리즘 & 코딩테스트/problem/b_우주신과의교감_1774.md":"600-알고리즘-&-코딩테스트/problem/b_우주신과의교감_1774.html","600-알고리즘 & 코딩테스트/problem/b_읽어버린괄호_1541.md":"600-알고리즘-&-코딩테스트/problem/b_읽어버린괄호_1541.html","600-알고리즘 & 코딩테스트/problem/b_임스미니게임_25757.md":"600-알고리즘-&-코딩테스트/problem/b_임스미니게임_25757.html","600-알고리즘 & 코딩테스트/problem/b_주유소_13305.md":"600-알고리즘-&-코딩테스트/problem/b_주유소_13305.html","600-알고리즘 & 코딩테스트/problem/b_집합_11723.md":"600-알고리즘-&-코딩테스트/problem/b_집합_11723.html","600-알고리즘 & 코딩테스트/problem/b_특정한최단경로.md":"600-알고리즘-&-코딩테스트/problem/b_특정한최단경로.html","600-알고리즘 & 코딩테스트/problem/b_평범한배낭_12865.md":"600-알고리즘-&-코딩테스트/problem/b_평범한배낭_12865.html","600-알고리즘 & 코딩테스트/problem/b_IF문대신_19637.md":"600-알고리즘-&-코딩테스트/problem/b_if문대신_19637.html","600-알고리즘 & 코딩테스트/problem/b_RGB거리.md":"600-알고리즘-&-코딩테스트/problem/b_rgb거리.html","600-알고리즘 & 코딩테스트/problem/c_MaxNonoverlappingSegments.md":"600-알고리즘-&-코딩테스트/problem/c_maxnonoverlappingsegments.html","600-알고리즘 & 코딩테스트/problem/c_MinAbsSum.md":"600-알고리즘-&-코딩테스트/problem/c_minabssum.html","600-알고리즘 & 코딩테스트/problem/c_NumberSolitaire.md":"600-알고리즘-&-코딩테스트/problem/c_numbersolitaire.html","600-알고리즘 & 코딩테스트/problem/c_TieRopes.md":"600-알고리즘-&-코딩테스트/problem/c_tieropes.html","600-알고리즘 & 코딩테스트/problem/g_거리두기.md":"600-알고리즘-&-코딩테스트/problem/g_거리두기.html","600-알고리즘 & 코딩테스트/problem/kt_꿀열매.md":"600-알고리즘-&-코딩테스트/problem/kt_꿀열매.html","600-알고리즘 & 코딩테스트/problem/kt_누적합.md":"600-알고리즘-&-코딩테스트/problem/kt_누적합.html","600-알고리즘 & 코딩테스트/problem/kt_태국택시.md":"600-알고리즘-&-코딩테스트/problem/kt_태국택시.html","600-알고리즘 & 코딩테스트/problem/kt_효율적인 화패 구성.md":"600-알고리즘-&-코딩테스트/problem/kt_효율적인-화패-구성.html","600-알고리즘 & 코딩테스트/problem/kt_n을 보는 시각.md":"600-알고리즘-&-코딩테스트/problem/kt_n을-보는-시각.html","600-알고리즘 & 코딩테스트/problem/p_도넛과막대그래프_258711.md":"600-알고리즘-&-코딩테스트/problem/p_도넛과막대그래프_258711.html","600-알고리즘 & 코딩테스트/problem/p_동영상재생기.md":"600-알고리즘-&-코딩테스트/problem/p_동영상재생기.html","600-알고리즘 & 코딩테스트/problem/p_두원사이의정수쌍_181187.md":"600-알고리즘-&-코딩테스트/problem/p_두원사이의정수쌍_181187.html","600-알고리즘 & 코딩테스트/problem/p_등굣길_42898.md":"600-알고리즘-&-코딩테스트/problem/p_등굣길_42898.html","600-알고리즘 & 코딩테스트/problem/p_붕대감기.md":"600-알고리즘-&-코딩테스트/problem/p_붕대감기.html","600-알고리즘 & 코딩테스트/problem/p_비밀코드해독_388352.md":"600-알고리즘-&-코딩테스트/problem/p_비밀코드해독_388352.html","600-알고리즘 & 코딩테스트/problem/p_서버 증설 횟수_389479.md":"600-알고리즘-&-코딩테스트/problem/p_서버-증설-횟수_389479.html","600-알고리즘 & 코딩테스트/problem/p_스킬트리_49993.md":"600-알고리즘-&-코딩테스트/problem/p_스킬트리_49993.html","600-알고리즘 & 코딩테스트/problem/p_시험장나누기_81305.md":"600-알고리즘-&-코딩테스트/problem/p_시험장나누기_81305.html","600-알고리즘 & 코딩테스트/problem/p_아날로그 시계_250135.md":"600-알고리즘-&-코딩테스트/problem/p_아날로그-시계_250135.html","600-알고리즘 & 코딩테스트/problem/p_완전 범죄_389480.md":"600-알고리즘-&-코딩테스트/problem/p_완전-범죄_389480.html","600-알고리즘 & 코딩테스트/problem/p_요격시스템_181188.md":"600-알고리즘-&-코딩테스트/problem/p_요격시스템_181188.html","600-알고리즘 & 코딩테스트/problem/p_유연근무제_388351.md":"600-알고리즘-&-코딩테스트/problem/p_유연근무제_388351.html","600-알고리즘 & 코딩테스트/problem/p_주사위고르기_258709.md":"600-알고리즘-&-코딩테스트/problem/p_주사위고르기_258709.html","600-알고리즘 & 코딩테스트/problem/p_충돌위험찾기.md":"600-알고리즘-&-코딩테스트/problem/p_충돌위험찾기.html","600-알고리즘 & 코딩테스트/problem/p_택배 상자 꺼내기_389478.md":"600-알고리즘-&-코딩테스트/problem/p_택배-상자-꺼내기_389478.html","600-알고리즘 & 코딩테스트/problem/p_퍼즐게임챌린지.md":"600-알고리즘-&-코딩테스트/problem/p_퍼즐게임챌린지.html","600-알고리즘 & 코딩테스트/problem/p_퍼즐조각채우기_84021.md":"600-알고리즘-&-코딩테스트/problem/p_퍼즐조각채우기_84021.html","600-알고리즘 & 코딩테스트/problem/P_합승택시요금.md":"600-알고리즘-&-코딩테스트/problem/p_합승택시요금.html","600-알고리즘 & 코딩테스트/problem/p_홀짝트리_388354.md":"600-알고리즘-&-코딩테스트/problem/p_홀짝트리_388354.html","600-알고리즘 & 코딩테스트/problem/s_나무공격.md":"600-알고리즘-&-코딩테스트/problem/s_나무공격.html","600-알고리즘 & 코딩테스트/problem/s_탑의 높이.md":"600-알고리즘-&-코딩테스트/problem/s_탑의-높이.html","600-알고리즘 & 코딩테스트/problem/s_CPTI.md":"600-알고리즘-&-코딩테스트/problem/s_cpti.html","600-알고리즘 & 코딩테스트/problem/t_1로만들기_217.md":"600-알고리즘-&-코딩테스트/problem/t_1로만들기_217.html","600-알고리즘 & 코딩테스트/problem/t_1이될때까지_99.md":"600-알고리즘-&-코딩테스트/problem/t_1이될때까지_99.html","600-알고리즘 & 코딩테스트/problem/t_개미전사_220.md":"600-알고리즘-&-코딩테스트/problem/t_개미전사_220.html","600-알고리즘 & 코딩테스트/problem/t_거스름돈_87.md":"600-알고리즘-&-코딩테스트/problem/t_거스름돈_87.html","600-알고리즘 & 코딩테스트/problem/t_게임개발_118.md":"600-알고리즘-&-코딩테스트/problem/t_게임개발_118.html","600-알고리즘 & 코딩테스트/problem/t_도시분할계획_300.md":"600-알고리즘-&-코딩테스트/problem/t_도시분할계획_300.html","600-알고리즘 & 코딩테스트/problem/t_떡볶이떡만들기_201.md":"600-알고리즘-&-코딩테스트/problem/t_떡볶이떡만들기_201.html","600-알고리즘 & 코딩테스트/problem/t_미래도시_259.md":"600-알고리즘-&-코딩테스트/problem/t_미래도시_259.html","600-알고리즘 & 코딩테스트/problem/t_미로탈출_152.md":"600-알고리즘-&-코딩테스트/problem/t_미로탈출_152.html","600-알고리즘 & 코딩테스트/problem/t_바닥공사_223.md":"600-알고리즘-&-코딩테스트/problem/t_바닥공사_223.html","600-알고리즘 & 코딩테스트/problem/t_부품찾기_197.md":"600-알고리즘-&-코딩테스트/problem/t_부품찾기_197.html","600-알고리즘 & 코딩테스트/problem/t_상하좌우_110.md":"600-알고리즘-&-코딩테스트/problem/t_상하좌우_110.html","600-알고리즘 & 코딩테스트/problem/t_숫자카드게임_96.md":"600-알고리즘-&-코딩테스트/problem/t_숫자카드게임_96.html","600-알고리즘 & 코딩테스트/problem/t_시각_113.md":"600-알고리즘-&-코딩테스트/problem/t_시각_113.html","600-알고리즘 & 코딩테스트/problem/t_왕실의나이트_115.md":"600-알고리즘-&-코딩테스트/problem/t_왕실의나이트_115.html","600-알고리즘 & 코딩테스트/problem/t_음료수얼려먹기_149.md":"600-알고리즘-&-코딩테스트/problem/t_음료수얼려먹기_149.html","600-알고리즘 & 코딩테스트/problem/t_전보_262.md":"600-알고리즘-&-코딩테스트/problem/t_전보_262.html","600-알고리즘 & 코딩테스트/problem/t_커리큘럼_303.md":"600-알고리즘-&-코딩테스트/problem/t_커리큘럼_303.html","600-알고리즘 & 코딩테스트/problem/t_큰수의법칙_92.md":"600-알고리즘-&-코딩테스트/problem/t_큰수의법칙_92.html","600-알고리즘 & 코딩테스트/problem/t_팀결성_298.md":"600-알고리즘-&-코딩테스트/problem/t_팀결성_298.html","600-알고리즘 & 코딩테스트/problem/t_효율적인화폐구성_228.md":"600-알고리즘-&-코딩테스트/problem/t_효율적인화폐구성_228.html","600-알고리즘 & 코딩테스트/theory/구현.md":"600-알고리즘-&-코딩테스트/theory/구현.html","600-알고리즘 & 코딩테스트/theory/그리디.md":"600-알고리즘-&-코딩테스트/theory/그리디.html","600-알고리즘 & 코딩테스트/theory/다이나믹프로그래밍.md":"600-알고리즘-&-코딩테스트/theory/다이나믹프로그래밍.html","600-알고리즘 & 코딩테스트/theory/비용이있는 최단경로.md":"600-알고리즘-&-코딩테스트/theory/비용이있는-최단경로.html","600-알고리즘 & 코딩테스트/theory/비트 연산,비트마스킹.md":"600-알고리즘-&-코딩테스트/theory/비트-연산,비트마스킹.html","600-알고리즘 & 코딩테스트/theory/세그먼트트리.md":"600-알고리즘-&-코딩테스트/theory/세그먼트트리.html","600-알고리즘 & 코딩테스트/theory/슬라이딩윈도우.md":"600-알고리즘-&-코딩테스트/theory/슬라이딩윈도우.html","600-알고리즘 & 코딩테스트/theory/위상정렬.md":"600-알고리즘-&-코딩테스트/theory/위상정렬.html","600-알고리즘 & 코딩테스트/theory/유니온파인드.md":"600-알고리즘-&-코딩테스트/theory/유니온파인드.html","600-알고리즘 & 코딩테스트/theory/이진탐색.md":"600-알고리즘-&-코딩테스트/theory/이진탐색.html","600-알고리즘 & 코딩테스트/theory/정렬.md":"600-알고리즘-&-코딩테스트/theory/정렬.html","600-알고리즘 & 코딩테스트/theory/최소신장트리.md":"600-알고리즘-&-코딩테스트/theory/최소신장트리.html","600-알고리즘 & 코딩테스트/theory/bfs,dfs.md":"600-알고리즘-&-코딩테스트/theory/bfs,dfs.html","600-알고리즘 & 코딩테스트/theory/graph.md":"600-알고리즘-&-코딩테스트/theory/graph.html","600-알고리즘 & 코딩테스트/1613 역사.md":"600-알고리즘-&-코딩테스트/1613-역사.html","600-알고리즘 & 코딩테스트/작성형식.md":"600-알고리즘-&-코딩테스트/작성형식.html","600-알고리즘 & 코딩테스트/g_개미집합의지름.md":"600-알고리즘-&-코딩테스트/g_개미집합의지름.html","600-알고리즘 & 코딩테스트/java.md":"600-알고리즘-&-코딩테스트/java.html","600-알고리즘 & 코딩테스트/LIS.md":"600-알고리즘-&-코딩테스트/lis.html","600-알고리즘 & 코딩테스트/p_석유시추.md":"600-알고리즘-&-코딩테스트/p_석유시추.html","600-알고리즘 & 코딩테스트/P42895 N으로 표현.md":"600-알고리즘-&-코딩테스트/p42895-n으로-표현.html","600-알고리즘 & 코딩테스트/p42897 도둑질.md":"600-알고리즘-&-코딩테스트/p42897-도둑질.html","600-알고리즘 & 코딩테스트/python.md":"600-알고리즘-&-코딩테스트/python.html","600-알고리즘 & 코딩테스트/site.md":"600-알고리즘-&-코딩테스트/site.html","700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757784480602.png":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757784480602.html","700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786723764.png":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786723764.html","700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786738823.png":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786738823.html","700-컴퓨터과학/assets/동기 vs 비동기, 블로킹 vs 논블로킹-1757786764391.png":"700-컴퓨터과학/assets/동기-vs-비동기,-블로킹-vs-논블로킹-1757786764391.html","700-컴퓨터과학/assets/스크린샷 2024-01-20 오후 7.09.39.png":"700-컴퓨터과학/assets/스크린샷-2024-01-20-오후-7.09.39.html","700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.28.41.png":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.28.41.html","700-컴퓨터과학/assets/스크린샷 2024-02-15 오후 4.31.41.png":"700-컴퓨터과학/assets/스크린샷-2024-02-15-오후-4.31.41.html","700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.32.38.png":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.32.38.html","700-컴퓨터과학/assets/스크린샷 2024-03-10 오후 8.47.17.png":"700-컴퓨터과학/assets/스크린샷-2024-03-10-오후-8.47.17.html","700-컴퓨터과학/assets/Pasted image 20240120190703.png":"700-컴퓨터과학/assets/pasted-image-20240120190703.html","700-컴퓨터과학/assets/Pasted image 20240214193456.png":"700-컴퓨터과학/assets/pasted-image-20240214193456.html","700-컴퓨터과학/assets/Pasted image 20240310202225.png":"700-컴퓨터과학/assets/pasted-image-20240310202225.html","700-컴퓨터과학/assets/Pasted image 20240310203122.png":"700-컴퓨터과학/assets/pasted-image-20240310203122.html","700-컴퓨터과학/assets/Pasted image 20240310204327.png":"700-컴퓨터과학/assets/pasted-image-20240310204327.html","700-컴퓨터과학/assets/Pasted image 20240310204859.png":"700-컴퓨터과학/assets/pasted-image-20240310204859.html","700-컴퓨터과학/assets/Pasted image 20240323173037.png":"700-컴퓨터과학/assets/pasted-image-20240323173037.html","700-컴퓨터과학/네트워크.md":"700-컴퓨터과학/네트워크.html","700-컴퓨터과학/동기 vs 비동기, 블로킹 vs 논블로킹.md":"700-컴퓨터과학/동기-vs-비동기,-블로킹-vs-논블로킹.html","700-컴퓨터과학/디자인패턴.md":"700-컴퓨터과학/디자인패턴.html","700-컴퓨터과학/면접 노트.md":"700-컴퓨터과학/면접-노트.html","700-컴퓨터과학/보안프로토콜.md":"700-컴퓨터과학/보안프로토콜.html","700-컴퓨터과학/알고리즘.md":"700-컴퓨터과학/알고리즘.html","700-컴퓨터과학/여러가지 상속.md":"700-컴퓨터과학/여러가지-상속.html","700-컴퓨터과학/의존성 주입.md":"700-컴퓨터과학/의존성-주입.html","700-컴퓨터과학/폰노이만구조.md":"700-컴퓨터과학/폰노이만구조.html","700-컴퓨터과학/합성데이터(synthetic-data).md":"700-컴퓨터과학/합성데이터(synthetic-data).html","700-컴퓨터과학/해시.md":"700-컴퓨터과학/해시.html","700-컴퓨터과학/DB.md":"700-컴퓨터과학/db.html","700-컴퓨터과학/it기초 과제2.md":"700-컴퓨터과학/it기초-과제2.html","700-컴퓨터과학/Scale Up & Scale Out.md":"700-컴퓨터과학/scale-up-&-scale-out.html","error/assets/nginx-1757772245845.png":"error/assets/nginx-1757772245845.png"},"featureOptions":{"backlinks":{"featureId":"backlinks","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".footer","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Backlinks","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"tags":{"featureId":"tags","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header .data-bar","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"showInlineTags":true,"showFrontmatterTags":true,"info_showInlineTags":{"show":true,"name":"","description":"Show tags defined inside the document at the top of the page.","placeholder":""},"info_showFrontmatterTags":{"show":true,"name":"","description":"Show tags defined in the frontmatter of the document at the top of the page.","placeholder":""}},"alias":{"featureId":"aliases","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header .data-bar","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Aliases","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"properties":{"featureId":"properties","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Properties","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_hideProperties":{"show":true,"name":"","description":"A list of properties to hide from the properties view","placeholder":""}},"fileNavigation":{"featureId":"file-navigation","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#left-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"showCustomIcons":false,"showDefaultFolderIcons":false,"showDefaultFileIcons":false,"defaultFolderIcon":"lucide//folder","defaultFileIcon":"lucide//file","defaultMediaIcon":"lucide//file-image","exposeStartingPath":true,"info_showCustomIcons":{"show":true,"name":"","description":"Show custom icons for files and folders","placeholder":""},"info_showDefaultFolderIcons":{"show":true,"name":"","description":"Show a default icon of a folder for every folder in the tree","placeholder":""},"info_showDefaultFileIcons":{"show":true,"name":"","description":"Show a default icon of a file for every file in the tree","placeholder":""},"info_defaultFolderIcon":{"show":true,"name":"","description":"The icon to use for folders. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultFileIcon":{"show":true,"name":"","description":"The icon to use for files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultMediaIcon":{"show":true,"name":"","description":"The icon to use for media files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_exposeStartingPath":{"show":true,"name":"","description":"Whether or not to show the current file in the file tree when the page is first loaded","placeholder":""},"includePath":"site-lib/html/file-tree.html"},"search":{"featureId":"search","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#left-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Search...","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"outline":{"featureId":"outline","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Outline","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"startCollapsed":false,"minCollapseDepth":0,"info_startCollapsed":{"show":true,"name":"","description":"Should the outline start collapsed?","placeholder":""},"info_minCollapseDepth":{"show":true,"name":"","description":"Only allow outline items to be collapsed if they are at least this many levels deep in the tree.","placeholder":"","dropdownOptions":{"1":1,"2":2,"No Collapse":100}}},"themeToggle":{"featureId":"theme-toggle","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"graphView":{"featureId":"graph-view","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Graph View","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"showOrphanNodes":true,"showAttachments":false,"allowGlobalGraph":true,"allowExpand":true,"attractionForce":1,"linkLength":15,"repulsionForce":80,"centralForce":2,"edgePruning":100,"minNodeRadius":3,"maxNodeRadius":7,"info_showOrphanNodes":{"show":true,"name":"","description":"Show nodes that are not connected to any other nodes.","placeholder":""},"info_showAttachments":{"show":true,"name":"","description":"Show attachments like images and PDFs as nodes in the graph.","placeholder":""},"info_allowGlobalGraph":{"show":true,"name":"","description":"Allow the user to view the global graph of all nodes.","placeholder":""},"info_allowExpand":{"show":true,"name":"","description":"Allow the user to pop-out the graph view to take up the whole screen","placeholder":""},"info_attractionForce":{"show":true,"name":"","description":"How much should linked nodes attract each other? This will make the graph appear more clustered.","placeholder":""},"info_linkLength":{"show":true,"name":"","description":"How long should the links between nodes be? The shorter the links the more connected nodes will cluster together.","placeholder":""},"info_repulsionForce":{"show":true,"name":"","description":"How much should nodes repel each other? This will make disconnected parts more spread out.","placeholder":""},"info_centralForce":{"show":true,"name":"","description":"How much should nodes be attracted to the center? This will make the graph appear more dense and circular.","placeholder":""},"info_edgePruning":{"show":true,"name":"","description":"Edges with a length above this threshold will not be rendered, however they will still contribute to the simulation. This can help large tangled graphs look more organised. Hovering over a node will still display these links.","placeholder":""},"info_minNodeRadius":{"show":true,"name":"","description":"How small should the smallest nodes be? The smaller a node is the less it will attract other nodes.","placeholder":""},"info_maxNodeRadius":{"show":true,"name":"","description":"How large should the largest nodes be? Nodes are sized by how many links they have. The larger a node is the more it will attract other nodes. This can be used to create a good grouping around the most important nodes.","placeholder":""}},"sidebar":{"featureId":"sidebar","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"allowResizing":true,"allowCollapsing":true,"rightDefaultWidth":"20em","leftDefaultWidth":"20em","info_allowResizing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be resized","placeholder":""},"info_allowCollapsing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be collapsed","placeholder":""},"info_rightDefaultWidth":{"show":true,"name":"","description":"The default width of the right sidebar","placeholder":""},"info_leftDefaultWidth":{"show":true,"name":"","description":"The default width of the left sidebar","placeholder":""}},"customHead":{"featureId":"custom-head","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"head","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"sourcePath":"","info_sourcePath":{"show":true,"name":"","description":"The local path to the source .html file which will be included.","placeholder":"","fileInputOptions":{"makeRelativeToVault":true,"browseButton":true}},"includePath":"site-lib/html/custom-head.html"},"document":{"featureId":"obsidian-document","enabled":true,"unavailable":false,"alwaysEnabled":true,"hideSettingsButton":false,"allowFoldingLists":true,"allowFoldingHeadings":true,"documentWidth":"40em","info_allowFoldingLists":{"show":true,"name":"","description":"Whether or not to allow lists to be folded","placeholder":""},"info_allowFoldingHeadings":{"show":true,"name":"","description":"Whether or not to allow headings to be folded","placeholder":""},"info_documentWidth":{"show":true,"name":"","description":"The width of the document","placeholder":""}},"rss":{"featureId":"rss","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"siteUrl":"","authorName":"","info_siteUrl":{"show":true,"name":"","description":"The url that this site will be hosted at","placeholder":"https://example.com/mysite"},"info_authorName":{"show":true,"name":"","description":"The name of the author of the site","placeholder":""}},"linkPreview":{"featureId":"link-preview","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":true}},"modifiedTime":1757859220568,"siteName":"Obsidian Vault","vaultName":"Obsidian Vault","exportRoot":"","baseURL":"","pluginVersion":"1.9.2","themeName":"","bodyClasses":"publish css-settings-manager mod-macos is-frameless is-hidden-frameless show-inline-title show-ribbon ctp-rosepine-light ctp-mocha-old ctp-accent-light-lavender ctp-accent-yellow anuppuccin-accent-toggle anp-callout-sleek anp-callout-color-toggle anp-custom-checkboxes anp-speech-bubble anp-latex-inline-text anp-latex-block-text anp-list-toggle anp-table-toggle anp-table-width anp-table-auto anp-table-th-highlight anp-table-row-alt anp-toggle-preview anp-kanban-lanes anp-color-transition-toggle anp-hide-status-bar anp-hide-external-link-icon anp-header-color-toggle anp-header-divider-color-toggle anp-h1-lavender anp-h1-divider anp-h2-mauve anp-h3-sapphire anp-h4-green anp-h5-teal anp-h6-sapphire anp-decoration-toggle anp-bold-blue anp-italic-maroon anp-highlight-pink anp-collapse-folders anp-full-rainbow-color-toggle anp-depth-tab-toggle anp-disable-newtab-align anp-card-layout anp-hide-borders anp-card-shadows anp-card-layout-actions anp-card-layout-filebrowser anp-theme-ext-light anp-theme-ext-dark ctp-notion-light ctp-thorns is-focused","hasFavicon":false}